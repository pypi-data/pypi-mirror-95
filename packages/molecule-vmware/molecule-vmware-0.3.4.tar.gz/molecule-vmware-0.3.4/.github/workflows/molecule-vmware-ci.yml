name: molecule-vmware-ci
on:
  push:
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    name: ${{ matrix.tox_env }}-lint
    strategy:
      matrix:
        include:
          - tox_env: py36
          - tox_env: py37
          - tox_env: py38
          - tox_env: py39

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Find python version
        id: py_ver
        shell: python
        if: ${{ contains(matrix.tox_env, 'py') }}
        run: |
          v = '${{ matrix.tox_env }}'.lstrip('py')
          print('::set-output name=version::{0}.{1}'.format(v[0],v[1:]))

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ steps.py_ver.outputs.version }}

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install wheel
          pip install tox

      - name: Run syntax test
        run: tox -e ${{ matrix.tox_env }}-lint

  gen-role:
    runs-on: ubuntu-latest
    name: ${{ matrix.tox_env }}-gen-role
    strategy:
      matrix:
        include:
          - tox_env: py36
          - tox_env: py37
          - tox_env: py38
          - tox_env: py39

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Find python version
        id: py_ver
        shell: python
        if: ${{ contains(matrix.tox_env, 'py') }}
        run: |
          v = '${{ matrix.tox_env }}'.lstrip('py')
          print('::set-output name=version::{0}.{1}'.format(v[0],v[1:]))

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ steps.py_ver.outputs.version }}

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install wheel
          pip install tox

      - name: Run a role generating test
        run: tox -e ${{ matrix.tox_env }}-gen-role

  gen-scenario:
    runs-on: ubuntu-latest
    name: ${{ matrix.tox_env }}-gen-scenario
    strategy:
      matrix:
        include:
          - tox_env: py36
          - tox_env: py37
          - tox_env: py38
          - tox_env: py39

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Find python version
        id: py_ver
        shell: python
        if: ${{ contains(matrix.tox_env, 'py') }}
        run: |
          v = '${{ matrix.tox_env }}'.lstrip('py')
          print('::set-output name=version::{0}.{1}'.format(v[0],v[1:]))

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ steps.py_ver.outputs.version }}

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install wheel
          pip install tox

      - name: Run a scenario generating test
        run: tox -e ${{ matrix.tox_env }}-scenario

  packaging:
    runs-on: ubuntu-latest
    name: packaging

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.6

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install wheel
          pip install tox

      - name: Run a packaging test
        run: tox -e packaging
