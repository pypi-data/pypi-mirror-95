# -*- coding: utf-8 -*-

"""
multipleresponsestestapi

This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""


class MultipleMessageModel(object):

    """Implementation of the 'MultipleMessageModel' model.

    Any payload to send a message to multiple numbers should be in this
    format

    Attributes:
        mfrom (string): The SMS header you would like to use, these should be
            registered under the account being managed by the API KEY used.
        to (list of string): List of mobile numbers in the international
            format receiving your message
        text (string): Your message to the recipient user

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "mfrom": 'from',
        "to": 'to',
        "text": 'text'
    }

    def __init__(self,
                 mfrom=None,
                 to=None,
                 text=None):
        """Constructor for the MultipleMessageModel class"""

        # Initialize members of the class
        self.mfrom = mfrom
        self.to = to
        self.text = text

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        mfrom = dictionary.get('from')
        to = dictionary.get('to')
        text = dictionary.get('text')

        # Return an object of this model
        return cls(mfrom,
                   to,
                   text)
