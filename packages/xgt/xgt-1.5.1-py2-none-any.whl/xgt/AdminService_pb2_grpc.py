# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import AdminService_pb2 as AdminService__pb2


class AdminServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ChangeErrorCount = channel.unary_unary(
                '/xgt.AdminService/ChangeErrorCount',
                request_serializer=AdminService__pb2.ChangeErrorCountRequest.SerializeToString,
                response_deserializer=AdminService__pb2.ChangeErrorCountResponse.FromString,
                )
        self.FreeUserMemorySize = channel.unary_unary(
                '/xgt.AdminService/FreeUserMemorySize',
                request_serializer=AdminService__pb2.FreeUserMemorySizeRequest.SerializeToString,
                response_deserializer=AdminService__pb2.FreeUserMemorySizeResponse.FromString,
                )
        self.MaxUserMemorySize = channel.unary_unary(
                '/xgt.AdminService/MaxUserMemorySize',
                request_serializer=AdminService__pb2.MaxUserMemorySizeRequest.SerializeToString,
                response_deserializer=AdminService__pb2.MaxUserMemorySizeResponse.FromString,
                )
        self.Shutdown = channel.unary_unary(
                '/xgt.AdminService/Shutdown',
                request_serializer=AdminService__pb2.ShutdownRequest.SerializeToString,
                response_deserializer=AdminService__pb2.ShutdownResponse.FromString,
                )
        self.Version = channel.unary_unary(
                '/xgt.AdminService/Version',
                request_serializer=AdminService__pb2.VersionRequest.SerializeToString,
                response_deserializer=AdminService__pb2.VersionResponse.FromString,
                )
        self.Authenticate = channel.unary_unary(
                '/xgt.AdminService/Authenticate',
                request_serializer=AdminService__pb2.AuthenticateRequest.SerializeToString,
                response_deserializer=AdminService__pb2.AuthenticateResponse.FromString,
                )
        self.CloseSession = channel.unary_unary(
                '/xgt.AdminService/CloseSession',
                request_serializer=AdminService__pb2.CloseSessionRequest.SerializeToString,
                response_deserializer=AdminService__pb2.CloseSessionResponse.FromString,
                )
        self.GetConfig = channel.unary_unary(
                '/xgt.AdminService/GetConfig',
                request_serializer=AdminService__pb2.GetConfigRequest.SerializeToString,
                response_deserializer=AdminService__pb2.GetConfigResponse.FromString,
                )
        self.SetConfig = channel.unary_unary(
                '/xgt.AdminService/SetConfig',
                request_serializer=AdminService__pb2.SetConfigRequest.SerializeToString,
                response_deserializer=AdminService__pb2.SetConfigResponse.FromString,
                )


class AdminServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ChangeErrorCount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FreeUserMemorySize(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MaxUserMemorySize(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Shutdown(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Version(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Authenticate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CloseSession(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AdminServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ChangeErrorCount': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangeErrorCount,
                    request_deserializer=AdminService__pb2.ChangeErrorCountRequest.FromString,
                    response_serializer=AdminService__pb2.ChangeErrorCountResponse.SerializeToString,
            ),
            'FreeUserMemorySize': grpc.unary_unary_rpc_method_handler(
                    servicer.FreeUserMemorySize,
                    request_deserializer=AdminService__pb2.FreeUserMemorySizeRequest.FromString,
                    response_serializer=AdminService__pb2.FreeUserMemorySizeResponse.SerializeToString,
            ),
            'MaxUserMemorySize': grpc.unary_unary_rpc_method_handler(
                    servicer.MaxUserMemorySize,
                    request_deserializer=AdminService__pb2.MaxUserMemorySizeRequest.FromString,
                    response_serializer=AdminService__pb2.MaxUserMemorySizeResponse.SerializeToString,
            ),
            'Shutdown': grpc.unary_unary_rpc_method_handler(
                    servicer.Shutdown,
                    request_deserializer=AdminService__pb2.ShutdownRequest.FromString,
                    response_serializer=AdminService__pb2.ShutdownResponse.SerializeToString,
            ),
            'Version': grpc.unary_unary_rpc_method_handler(
                    servicer.Version,
                    request_deserializer=AdminService__pb2.VersionRequest.FromString,
                    response_serializer=AdminService__pb2.VersionResponse.SerializeToString,
            ),
            'Authenticate': grpc.unary_unary_rpc_method_handler(
                    servicer.Authenticate,
                    request_deserializer=AdminService__pb2.AuthenticateRequest.FromString,
                    response_serializer=AdminService__pb2.AuthenticateResponse.SerializeToString,
            ),
            'CloseSession': grpc.unary_unary_rpc_method_handler(
                    servicer.CloseSession,
                    request_deserializer=AdminService__pb2.CloseSessionRequest.FromString,
                    response_serializer=AdminService__pb2.CloseSessionResponse.SerializeToString,
            ),
            'GetConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConfig,
                    request_deserializer=AdminService__pb2.GetConfigRequest.FromString,
                    response_serializer=AdminService__pb2.GetConfigResponse.SerializeToString,
            ),
            'SetConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.SetConfig,
                    request_deserializer=AdminService__pb2.SetConfigRequest.FromString,
                    response_serializer=AdminService__pb2.SetConfigResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'xgt.AdminService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AdminService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ChangeErrorCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xgt.AdminService/ChangeErrorCount',
            AdminService__pb2.ChangeErrorCountRequest.SerializeToString,
            AdminService__pb2.ChangeErrorCountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FreeUserMemorySize(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xgt.AdminService/FreeUserMemorySize',
            AdminService__pb2.FreeUserMemorySizeRequest.SerializeToString,
            AdminService__pb2.FreeUserMemorySizeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MaxUserMemorySize(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xgt.AdminService/MaxUserMemorySize',
            AdminService__pb2.MaxUserMemorySizeRequest.SerializeToString,
            AdminService__pb2.MaxUserMemorySizeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Shutdown(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xgt.AdminService/Shutdown',
            AdminService__pb2.ShutdownRequest.SerializeToString,
            AdminService__pb2.ShutdownResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Version(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xgt.AdminService/Version',
            AdminService__pb2.VersionRequest.SerializeToString,
            AdminService__pb2.VersionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Authenticate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xgt.AdminService/Authenticate',
            AdminService__pb2.AuthenticateRequest.SerializeToString,
            AdminService__pb2.AuthenticateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CloseSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xgt.AdminService/CloseSession',
            AdminService__pb2.CloseSessionRequest.SerializeToString,
            AdminService__pb2.CloseSessionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xgt.AdminService/GetConfig',
            AdminService__pb2.GetConfigRequest.SerializeToString,
            AdminService__pb2.GetConfigResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xgt.AdminService/SetConfig',
            AdminService__pb2.SetConfigRequest.SerializeToString,
            AdminService__pb2.SetConfigResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
