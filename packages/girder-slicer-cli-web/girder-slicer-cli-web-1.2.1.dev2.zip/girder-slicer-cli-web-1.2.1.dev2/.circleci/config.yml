version: 2.1

executors:
  toxandnode:
    working_directory: ~/project
    docker:
      - image: girder/tox-and-node
      - image: circleci/mongo:4.0-ram
      - image: rabbitmq
commands:
  tox:
    description: "Run tox"
    parameters:
      env:
        type: string
    steps:
      - run:
          name: Preinstall phantomjs to work around an npm permission issue
          command: npm install -g phantomjs-prebuilt --unsafe-perm
      - run:
          name: Run tests via tox
          # Piping through cat does less buffering of the output but can
          # consume the exit code
          command: |
            node --version
            npm --version
            export NVM_DIR="/opt/circleci/.nvm"
            source $NVM_DIR/nvm.sh
            nvm install v12
            nvm alias default v12
            node --version
            npm --version
            tox -e << parameters.env >> | cat; test ${PIPESTATUS[0]} -eq 0
  upgradepython:
    description: "Upgrade python"
    parameters:
      version:
        type: string
    steps:
      - run:
          name: Upgrade pyenv
          command: |
            rm -rf /opt/circleci/.pyenv
            curl -L https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer | bash
            pyenv install --list list
      - run:
          name: Use pyenv to install python
          command: |
            pyenv install << parameters.version >>
  allservices:
    description: "Switch to a python version and start other services"
    parameters:
      version:
        type: string
    steps:
      - upgradepython:
          version: << parameters.version >>
      - run:
          name: Use pyenv to set python version
          command: |
            pyenv versions
            pyenv global << parameters.version >>
      - run:
          name: start mongo
          command: |
            docker run --rm -d -p 27017:27017 circleci/mongo:4.0-ram
      - run:
          name: start rabbitmq
          command: |
            docker run --rm -d -p 5672:5672 rabbitmq
      - run:
          name: install nodejs
          command: |
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.2/install.sh | bash
            export NVM_DIR="/opt/circleci/.nvm"
            source $NVM_DIR/nvm.sh
            nvm install v12
            nvm alias default v12
      - run:
          name: Upgrade pip
          command: pip install -U pip
      - run:
          name: Upgrade virtualenv and tox
          command: pip install -U virtualenv tox
  coverage:
    description: "Upload coverage"
    steps:
      - run:
          name: Install Codecov client
          command: pip install codecov==2.1.9
      - run:
          name: Upload coverage
          command: codecov --tries 10 --required --disable search pycov gcov --root project --file .tox/coverage/py_coverage.xml .tox/coverage/cobertura-coverage.xml

jobs:
  py36:
    machine:
        image: circleci/classic:201808-01
    steps:
      - checkout
      - allservices:
          version: 3.6.12
      - tox:
          env: py36
      - coverage
  py37:
    machine:
        image: circleci/classic:201808-01
    steps:
      - checkout
      - allservices:
          version: 3.7.9
      - tox:
          env: py37
      - coverage
  py38:
    machine:
        image: circleci/classic:201808-01
    steps:
      - checkout
      - allservices:
          version: 3.8.6
      - tox:
          env: py38
      - coverage
  py39:
    machine:
        image: circleci/classic:201808-01
    steps:
      - checkout
      - allservices:
          version: 3.9.0
      - tox:
          env: py39
      - coverage
  lint_and_docs:
    executor: toxandnode
    steps:
      - checkout
      - run:
          name: Run tox
          command: |
            tox -e flake8,lintclient | cat; test ${PIPESTATUS[0]} -eq 0
  release:
    docker:
      - image: girder/tox-and-node
    steps:
      - checkout
      - deploy:
          name: Run tests via tox
          # Piping through cat does less buffering of the output but can
          # consume the exit code
          command: PYTEST_ADDOPTS=--forked tox -e release | cat; test ${PIPESTATUS[0]} -eq 0

workflows:
  version: 2
  ci:
    jobs:
      - py36:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore:
                - gh-pages
      - py37:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore:
                - gh-pages
      - py38:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore:
                - gh-pages
      - py39:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore:
                - gh-pages
      - lint_and_docs:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore:
                - gh-pages
      - release:
          requires:
            - py36
            - py37
            - py38
            - py39
            - lint_and_docs
          filters:
            tags:
              only: /^v.*/
            branches:
              only: master
