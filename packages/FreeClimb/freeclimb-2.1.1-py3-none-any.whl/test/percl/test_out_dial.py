# coding: utf-8

"""
    FreeClimb API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 0.0.1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest

import freeclimb
from freeclimb.percl.out_dial import OutDial  # noqa: E501
from freeclimb.rest import ApiException


class TestOutDial(unittest.TestCase):
    """OutDial unit test stubs"""
    destination='+12223334444'
    calling_number='+13332224444'
    action_url='http://example.com/action'
    call_connect_url='http://example.com/callconnect'

    def setUp(self):
        self.out_dial = OutDial(destination=self.destination, calling_number=self.calling_number, action_url=self.action_url, call_connect_url=self.call_connect_url)

    def tearDown(self):
        pass

    def testOutDial(self):
        """Test OutDial"""
        # construct object with mandatory attributes with example values
        # percl = freeclimb.percl.OutDial()  # noqa: E501
        self.assertTrue(isinstance(self.out_dial, OutDial))
        self.assertEqual(self.destination, self.out_dial.get('OutDial').get('destination'))
        self.assertEqual(self.calling_number, self.out_dial.get('OutDial').get('callingNumber'))
        self.assertEqual(self.action_url, self.out_dial.get('OutDial').get('actionUrl'))
        self.assertEqual(self.call_connect_url, self.out_dial.get('OutDial').get('callConnectUrl'))
        self.assertTrue(hasattr(self.out_dial, 'send_digits'))
        self.assertTrue(hasattr(self.out_dial, 'timeout'))
        self.assertTrue(hasattr(self.out_dial, 'if_machine'))
        self.assertTrue(hasattr(self.out_dial, 'if_machine_url'))
        self.assertTrue(hasattr(self.out_dial, 'status_callback_url'))

    def testAddOutDialIfMachine(self):
        """AddOutDialIfMachine to OutDial"""
        out_dial_if_machine = 'redirect'
        self.out_dial.out_dial_if_machine = out_dial_if_machine
        self.assertEqual(self.out_dial.out_dial_if_machine, out_dial_if_machine)

if __name__ == '__main__':
    unittest.main()
