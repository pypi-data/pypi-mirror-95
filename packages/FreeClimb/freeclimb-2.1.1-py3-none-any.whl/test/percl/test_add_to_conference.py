# coding: utf-8

"""
    FreeClimb API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 0.0.1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest

import freeclimb
from freeclimb.percl.add_to_conference import AddToConference  # noqa: E501
from freeclimb.rest import ApiException


class TestAddToConference(unittest.TestCase):
    """AddToConference unit test stubs"""
    conference_id='CF_fake_conference_id'
    call_id='CA_fake_call_id'

    def setUp(self):
        self.add_to_conference = AddToConference(conference_id=self.conference_id, call_id=self.call_id)

    def tearDown(self):
        pass

    def testAddToConference(self):
        """Test AddToConference"""
        # construct object with mandatory attributes with example values
        # percl = freeclimb.percl.AddToConference()  # noqa: E501
        self.assertTrue(isinstance(self.add_to_conference, AddToConference))
        self.assertEqual(self.conference_id, self.add_to_conference.get('AddToConference').get('conferenceId'))
        self.assertEqual(self.call_id, self.add_to_conference.get('AddToConference').get('callId'))
        self.assertTrue(hasattr(self.add_to_conference, 'start_conf_on_enter'))
        self.assertTrue(hasattr(self.add_to_conference, 'talk'))
        self.assertTrue(hasattr(self.add_to_conference, 'listen'))
        self.assertTrue(hasattr(self.add_to_conference, 'leave_conference_url'))
        self.assertTrue(hasattr(self.add_to_conference, 'notification_url'))
        self.assertTrue(hasattr(self.add_to_conference, 'allow_call_control'))
        self.assertTrue(hasattr(self.add_to_conference, 'call_control_sequence'))
        self.assertTrue(hasattr(self.add_to_conference, 'call_control_url'))

if __name__ == '__main__':
    unittest.main()
