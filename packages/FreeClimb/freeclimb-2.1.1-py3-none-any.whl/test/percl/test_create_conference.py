# coding: utf-8

"""
    FreeClimb API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 0.0.1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest

import freeclimb
from freeclimb.percl.create_conference import CreateConference  # noqa: E501
from freeclimb.rest import ApiException


class TestCreateConference(unittest.TestCase):
    """CreateConference unit test stubs"""
    action_url='http://example.com'

    def setUp(self):
        self.create_conference = CreateConference(action_url=self.action_url)

    def tearDown(self):
        pass

    def testCreateConference(self):
        """Test CreateConference"""
        # construct object with mandatory attributes with example values
        # percl = freeclimb.percl.CreateConference()  # noqa: E501
        self.assertTrue(isinstance(self.create_conference, CreateConference))
        self.assertEqual(self.action_url, self.create_conference.get('CreateConference').get('actionUrl'))
        self.assertTrue(hasattr(self.create_conference, 'alias'))
        self.assertTrue(hasattr(self.create_conference, 'play_beep'))
        self.assertTrue(hasattr(self.create_conference, 'status_callback_url'))
        self.assertTrue(hasattr(self.create_conference, 'wait_url'))
        self.assertTrue(hasattr(self.create_conference, 'record'))

    def testAddPlayBeep(self):
        """AddPlayBeep to conference"""
        play_beep_status = 'exitOnly'
        self.create_conference.play_beep = play_beep_status
        self.assertEqual(self.create_conference.play_beep, play_beep_status)

if __name__ == '__main__':
    unittest.main()
