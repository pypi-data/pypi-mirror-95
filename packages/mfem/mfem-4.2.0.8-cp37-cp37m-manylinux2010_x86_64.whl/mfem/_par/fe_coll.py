# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _fe_coll
else:
    import _fe_coll

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _fe_coll.SWIG_PyInstanceMethod_New
_swig_new_static_method = _fe_coll.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import weakref

import mfem._par.mesh
import mfem._par.matrix
import mfem._par.vector
import mfem._par.array
import mfem._par.mem_manager
import mfem._par.operators
import mfem._par.sort_pairs
import mfem._par.ncmesh
import mfem._par.vtk
import mfem._par.element
import mfem._par.globals
import mfem._par.densemat
import mfem._par.geom
import mfem._par.intrules
import mfem._par.table
import mfem._par.hash
import mfem._par.vertex
import mfem._par.gridfunc
import mfem._par.coefficient
import mfem._par.sparsemat
import mfem._par.eltrans
import mfem._par.fe
import mfem._par.fespace
import mfem._par.lininteg
import mfem._par.handle
import mfem._par.hypre
import mfem._par.restriction
import mfem._par.bilininteg
import mfem._par.linearform
class FiniteElementCollection(object):
    r"""Proxy of C++ mfem::FiniteElementCollection class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    CONTINUOUS = _fe_coll.FiniteElementCollection_CONTINUOUS
    
    TANGENTIAL = _fe_coll.FiniteElementCollection_TANGENTIAL
    
    NORMAL = _fe_coll.FiniteElementCollection_NORMAL
    
    DISCONTINUOUS = _fe_coll.FiniteElementCollection_DISCONTINUOUS
    

    def FiniteElementForGeometry(self, GeomType):
        r"""FiniteElementForGeometry(FiniteElementCollection self, mfem::Geometry::Type GeomType) -> FiniteElement"""
        return _fe_coll.FiniteElementCollection_FiniteElementForGeometry(self, GeomType)
    FiniteElementForGeometry = _swig_new_instance_method(_fe_coll.FiniteElementCollection_FiniteElementForGeometry)

    def DofForGeometry(self, GeomType):
        r"""DofForGeometry(FiniteElementCollection self, mfem::Geometry::Type GeomType) -> int"""
        return _fe_coll.FiniteElementCollection_DofForGeometry(self, GeomType)
    DofForGeometry = _swig_new_instance_method(_fe_coll.FiniteElementCollection_DofForGeometry)

    def DofOrderForOrientation(self, GeomType, Or):
        r"""DofOrderForOrientation(FiniteElementCollection self, mfem::Geometry::Type GeomType, int Or) -> int const *"""
        return _fe_coll.FiniteElementCollection_DofOrderForOrientation(self, GeomType, Or)
    DofOrderForOrientation = _swig_new_instance_method(_fe_coll.FiniteElementCollection_DofOrderForOrientation)

    def Name(self):
        r"""Name(FiniteElementCollection self) -> char const *"""
        return _fe_coll.FiniteElementCollection_Name(self)
    Name = _swig_new_instance_method(_fe_coll.FiniteElementCollection_Name)

    def GetContType(self):
        r"""GetContType(FiniteElementCollection self) -> int"""
        return _fe_coll.FiniteElementCollection_GetContType(self)
    GetContType = _swig_new_instance_method(_fe_coll.FiniteElementCollection_GetContType)

    def HasFaceDofs(self, GeomType):
        r"""HasFaceDofs(FiniteElementCollection self, mfem::Geometry::Type GeomType) -> int"""
        return _fe_coll.FiniteElementCollection_HasFaceDofs(self, GeomType)
    HasFaceDofs = _swig_new_instance_method(_fe_coll.FiniteElementCollection_HasFaceDofs)

    def TraceFiniteElementForGeometry(self, GeomType):
        r"""TraceFiniteElementForGeometry(FiniteElementCollection self, mfem::Geometry::Type GeomType) -> FiniteElement"""
        return _fe_coll.FiniteElementCollection_TraceFiniteElementForGeometry(self, GeomType)
    TraceFiniteElementForGeometry = _swig_new_instance_method(_fe_coll.FiniteElementCollection_TraceFiniteElementForGeometry)

    def GetTraceCollection(self):
        r"""GetTraceCollection(FiniteElementCollection self) -> FiniteElementCollection"""
        return _fe_coll.FiniteElementCollection_GetTraceCollection(self)
    GetTraceCollection = _swig_new_instance_method(_fe_coll.FiniteElementCollection_GetTraceCollection)
    __swig_destroy__ = _fe_coll.delete_FiniteElementCollection

    @staticmethod
    def New(name):
        r"""New(char const * name) -> FiniteElementCollection"""
        return _fe_coll.FiniteElementCollection_New(name)
    New = _swig_new_static_method(_fe_coll.FiniteElementCollection_New)

    def SubDofOrder(self, Geom, SDim, Info, dofs):
        r"""SubDofOrder(FiniteElementCollection self, mfem::Geometry::Type Geom, int SDim, int Info, intArray dofs)"""
        return _fe_coll.FiniteElementCollection_SubDofOrder(self, Geom, SDim, Info, dofs)
    SubDofOrder = _swig_new_instance_method(_fe_coll.FiniteElementCollection_SubDofOrder)

# Register FiniteElementCollection in _fe_coll:
_fe_coll.FiniteElementCollection_swigregister(FiniteElementCollection)

def FiniteElementCollection_New(name):
    r"""FiniteElementCollection_New(char const * name) -> FiniteElementCollection"""
    return _fe_coll.FiniteElementCollection_New(name)
FiniteElementCollection_New = _fe_coll.FiniteElementCollection_New

class H1_FECollection(FiniteElementCollection):
    r"""Proxy of C++ mfem::H1_FECollection class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args, **kwargs):
        r"""__init__(H1_FECollection self, int const p, int const dim=3, int const btype=GaussLobatto) -> H1_FECollection"""
        _fe_coll.H1_FECollection_swiginit(self, _fe_coll.new_H1_FECollection(*args, **kwargs))

    def FiniteElementForGeometry(self, GeomType):
        r"""FiniteElementForGeometry(H1_FECollection self, mfem::Geometry::Type GeomType) -> FiniteElement"""
        return _fe_coll.H1_FECollection_FiniteElementForGeometry(self, GeomType)
    FiniteElementForGeometry = _swig_new_instance_method(_fe_coll.H1_FECollection_FiniteElementForGeometry)

    def DofForGeometry(self, GeomType):
        r"""DofForGeometry(H1_FECollection self, mfem::Geometry::Type GeomType) -> int"""
        return _fe_coll.H1_FECollection_DofForGeometry(self, GeomType)
    DofForGeometry = _swig_new_instance_method(_fe_coll.H1_FECollection_DofForGeometry)

    def DofOrderForOrientation(self, GeomType, Or):
        r"""DofOrderForOrientation(H1_FECollection self, mfem::Geometry::Type GeomType, int Or) -> int const *"""
        return _fe_coll.H1_FECollection_DofOrderForOrientation(self, GeomType, Or)
    DofOrderForOrientation = _swig_new_instance_method(_fe_coll.H1_FECollection_DofOrderForOrientation)

    def Name(self):
        r"""Name(H1_FECollection self) -> char const *"""
        return _fe_coll.H1_FECollection_Name(self)
    Name = _swig_new_instance_method(_fe_coll.H1_FECollection_Name)

    def GetContType(self):
        r"""GetContType(H1_FECollection self) -> int"""
        return _fe_coll.H1_FECollection_GetContType(self)
    GetContType = _swig_new_instance_method(_fe_coll.H1_FECollection_GetContType)

    def GetTraceCollection(self):
        r"""GetTraceCollection(H1_FECollection self) -> FiniteElementCollection"""
        return _fe_coll.H1_FECollection_GetTraceCollection(self)
    GetTraceCollection = _swig_new_instance_method(_fe_coll.H1_FECollection_GetTraceCollection)

    def GetBasisType(self):
        r"""GetBasisType(H1_FECollection self) -> int"""
        return _fe_coll.H1_FECollection_GetBasisType(self)
    GetBasisType = _swig_new_instance_method(_fe_coll.H1_FECollection_GetBasisType)

    def GetDofMap(self, GeomType):
        r"""GetDofMap(H1_FECollection self, mfem::Geometry::Type GeomType) -> int const *"""
        return _fe_coll.H1_FECollection_GetDofMap(self, GeomType)
    GetDofMap = _swig_new_instance_method(_fe_coll.H1_FECollection_GetDofMap)
    __swig_destroy__ = _fe_coll.delete_H1_FECollection

# Register H1_FECollection in _fe_coll:
_fe_coll.H1_FECollection_swigregister(H1_FECollection)

class H1Pos_FECollection(H1_FECollection):
    r"""Proxy of C++ mfem::H1Pos_FECollection class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, p, dim=3):
        r"""__init__(H1Pos_FECollection self, int const p, int const dim=3) -> H1Pos_FECollection"""
        _fe_coll.H1Pos_FECollection_swiginit(self, _fe_coll.new_H1Pos_FECollection(p, dim))
    __swig_destroy__ = _fe_coll.delete_H1Pos_FECollection

# Register H1Pos_FECollection in _fe_coll:
_fe_coll.H1Pos_FECollection_swigregister(H1Pos_FECollection)

class H1Ser_FECollection(H1_FECollection):
    r"""Proxy of C++ mfem::H1Ser_FECollection class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, p, dim=2):
        r"""__init__(H1Ser_FECollection self, int const p, int const dim=2) -> H1Ser_FECollection"""
        _fe_coll.H1Ser_FECollection_swiginit(self, _fe_coll.new_H1Ser_FECollection(p, dim))
    __swig_destroy__ = _fe_coll.delete_H1Ser_FECollection

# Register H1Ser_FECollection in _fe_coll:
_fe_coll.H1Ser_FECollection_swigregister(H1Ser_FECollection)

class H1_Trace_FECollection(H1_FECollection):
    r"""Proxy of C++ mfem::H1_Trace_FECollection class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args, **kwargs):
        r"""__init__(H1_Trace_FECollection self, int const p, int const dim, int const btype=GaussLobatto) -> H1_Trace_FECollection"""
        _fe_coll.H1_Trace_FECollection_swiginit(self, _fe_coll.new_H1_Trace_FECollection(*args, **kwargs))
    __swig_destroy__ = _fe_coll.delete_H1_Trace_FECollection

# Register H1_Trace_FECollection in _fe_coll:
_fe_coll.H1_Trace_FECollection_swigregister(H1_Trace_FECollection)

class L2_FECollection(FiniteElementCollection):
    r"""Proxy of C++ mfem::L2_FECollection class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args, **kwargs):
        r"""__init__(L2_FECollection self, int const p, int const dim, int const btype=GaussLegendre, int const map_type=VALUE) -> L2_FECollection"""
        _fe_coll.L2_FECollection_swiginit(self, _fe_coll.new_L2_FECollection(*args, **kwargs))

    def FiniteElementForGeometry(self, GeomType):
        r"""FiniteElementForGeometry(L2_FECollection self, mfem::Geometry::Type GeomType) -> FiniteElement"""
        return _fe_coll.L2_FECollection_FiniteElementForGeometry(self, GeomType)
    FiniteElementForGeometry = _swig_new_instance_method(_fe_coll.L2_FECollection_FiniteElementForGeometry)

    def DofForGeometry(self, GeomType):
        r"""DofForGeometry(L2_FECollection self, mfem::Geometry::Type GeomType) -> int"""
        return _fe_coll.L2_FECollection_DofForGeometry(self, GeomType)
    DofForGeometry = _swig_new_instance_method(_fe_coll.L2_FECollection_DofForGeometry)

    def DofOrderForOrientation(self, GeomType, Or):
        r"""DofOrderForOrientation(L2_FECollection self, mfem::Geometry::Type GeomType, int Or) -> int const *"""
        return _fe_coll.L2_FECollection_DofOrderForOrientation(self, GeomType, Or)
    DofOrderForOrientation = _swig_new_instance_method(_fe_coll.L2_FECollection_DofOrderForOrientation)

    def Name(self):
        r"""Name(L2_FECollection self) -> char const *"""
        return _fe_coll.L2_FECollection_Name(self)
    Name = _swig_new_instance_method(_fe_coll.L2_FECollection_Name)

    def GetContType(self):
        r"""GetContType(L2_FECollection self) -> int"""
        return _fe_coll.L2_FECollection_GetContType(self)
    GetContType = _swig_new_instance_method(_fe_coll.L2_FECollection_GetContType)

    def TraceFiniteElementForGeometry(self, GeomType):
        r"""TraceFiniteElementForGeometry(L2_FECollection self, mfem::Geometry::Type GeomType) -> FiniteElement"""
        return _fe_coll.L2_FECollection_TraceFiniteElementForGeometry(self, GeomType)
    TraceFiniteElementForGeometry = _swig_new_instance_method(_fe_coll.L2_FECollection_TraceFiniteElementForGeometry)

    def GetBasisType(self):
        r"""GetBasisType(L2_FECollection self) -> int"""
        return _fe_coll.L2_FECollection_GetBasisType(self)
    GetBasisType = _swig_new_instance_method(_fe_coll.L2_FECollection_GetBasisType)
    __swig_destroy__ = _fe_coll.delete_L2_FECollection

# Register L2_FECollection in _fe_coll:
_fe_coll.L2_FECollection_swigregister(L2_FECollection)

class RT_FECollection(FiniteElementCollection):
    r"""Proxy of C++ mfem::RT_FECollection class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""__init__(RT_FECollection self, int const p, int const dim, int const cb_type=GaussLobatto, int const ob_type=GaussLegendre) -> RT_FECollection"""
        _fe_coll.RT_FECollection_swiginit(self, _fe_coll.new_RT_FECollection(*args))

    def FiniteElementForGeometry(self, GeomType):
        r"""FiniteElementForGeometry(RT_FECollection self, mfem::Geometry::Type GeomType) -> FiniteElement"""
        return _fe_coll.RT_FECollection_FiniteElementForGeometry(self, GeomType)
    FiniteElementForGeometry = _swig_new_instance_method(_fe_coll.RT_FECollection_FiniteElementForGeometry)

    def DofForGeometry(self, GeomType):
        r"""DofForGeometry(RT_FECollection self, mfem::Geometry::Type GeomType) -> int"""
        return _fe_coll.RT_FECollection_DofForGeometry(self, GeomType)
    DofForGeometry = _swig_new_instance_method(_fe_coll.RT_FECollection_DofForGeometry)

    def DofOrderForOrientation(self, GeomType, Or):
        r"""DofOrderForOrientation(RT_FECollection self, mfem::Geometry::Type GeomType, int Or) -> int const *"""
        return _fe_coll.RT_FECollection_DofOrderForOrientation(self, GeomType, Or)
    DofOrderForOrientation = _swig_new_instance_method(_fe_coll.RT_FECollection_DofOrderForOrientation)

    def Name(self):
        r"""Name(RT_FECollection self) -> char const *"""
        return _fe_coll.RT_FECollection_Name(self)
    Name = _swig_new_instance_method(_fe_coll.RT_FECollection_Name)

    def GetContType(self):
        r"""GetContType(RT_FECollection self) -> int"""
        return _fe_coll.RT_FECollection_GetContType(self)
    GetContType = _swig_new_instance_method(_fe_coll.RT_FECollection_GetContType)

    def GetTraceCollection(self):
        r"""GetTraceCollection(RT_FECollection self) -> FiniteElementCollection"""
        return _fe_coll.RT_FECollection_GetTraceCollection(self)
    GetTraceCollection = _swig_new_instance_method(_fe_coll.RT_FECollection_GetTraceCollection)
    __swig_destroy__ = _fe_coll.delete_RT_FECollection

# Register RT_FECollection in _fe_coll:
_fe_coll.RT_FECollection_swigregister(RT_FECollection)

class RT_Trace_FECollection(RT_FECollection):
    r"""Proxy of C++ mfem::RT_Trace_FECollection class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args, **kwargs):
        r"""__init__(RT_Trace_FECollection self, int const p, int const dim, int const map_type=INTEGRAL, int const ob_type=GaussLegendre) -> RT_Trace_FECollection"""
        _fe_coll.RT_Trace_FECollection_swiginit(self, _fe_coll.new_RT_Trace_FECollection(*args, **kwargs))
    __swig_destroy__ = _fe_coll.delete_RT_Trace_FECollection

# Register RT_Trace_FECollection in _fe_coll:
_fe_coll.RT_Trace_FECollection_swigregister(RT_Trace_FECollection)

class DG_Interface_FECollection(RT_FECollection):
    r"""Proxy of C++ mfem::DG_Interface_FECollection class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args, **kwargs):
        r"""__init__(DG_Interface_FECollection self, int const p, int const dim, int const map_type=VALUE, int const ob_type=GaussLegendre) -> DG_Interface_FECollection"""
        _fe_coll.DG_Interface_FECollection_swiginit(self, _fe_coll.new_DG_Interface_FECollection(*args, **kwargs))
    __swig_destroy__ = _fe_coll.delete_DG_Interface_FECollection

# Register DG_Interface_FECollection in _fe_coll:
_fe_coll.DG_Interface_FECollection_swigregister(DG_Interface_FECollection)

class ND_FECollection(FiniteElementCollection):
    r"""Proxy of C++ mfem::ND_FECollection class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args, **kwargs):
        r"""__init__(ND_FECollection self, int const p, int const dim, int const cb_type=GaussLobatto, int const ob_type=GaussLegendre) -> ND_FECollection"""
        _fe_coll.ND_FECollection_swiginit(self, _fe_coll.new_ND_FECollection(*args, **kwargs))

    def FiniteElementForGeometry(self, GeomType):
        r"""FiniteElementForGeometry(ND_FECollection self, mfem::Geometry::Type GeomType) -> FiniteElement"""
        return _fe_coll.ND_FECollection_FiniteElementForGeometry(self, GeomType)
    FiniteElementForGeometry = _swig_new_instance_method(_fe_coll.ND_FECollection_FiniteElementForGeometry)

    def DofForGeometry(self, GeomType):
        r"""DofForGeometry(ND_FECollection self, mfem::Geometry::Type GeomType) -> int"""
        return _fe_coll.ND_FECollection_DofForGeometry(self, GeomType)
    DofForGeometry = _swig_new_instance_method(_fe_coll.ND_FECollection_DofForGeometry)

    def DofOrderForOrientation(self, GeomType, Or):
        r"""DofOrderForOrientation(ND_FECollection self, mfem::Geometry::Type GeomType, int Or) -> int const *"""
        return _fe_coll.ND_FECollection_DofOrderForOrientation(self, GeomType, Or)
    DofOrderForOrientation = _swig_new_instance_method(_fe_coll.ND_FECollection_DofOrderForOrientation)

    def Name(self):
        r"""Name(ND_FECollection self) -> char const *"""
        return _fe_coll.ND_FECollection_Name(self)
    Name = _swig_new_instance_method(_fe_coll.ND_FECollection_Name)

    def GetContType(self):
        r"""GetContType(ND_FECollection self) -> int"""
        return _fe_coll.ND_FECollection_GetContType(self)
    GetContType = _swig_new_instance_method(_fe_coll.ND_FECollection_GetContType)

    def GetTraceCollection(self):
        r"""GetTraceCollection(ND_FECollection self) -> FiniteElementCollection"""
        return _fe_coll.ND_FECollection_GetTraceCollection(self)
    GetTraceCollection = _swig_new_instance_method(_fe_coll.ND_FECollection_GetTraceCollection)
    __swig_destroy__ = _fe_coll.delete_ND_FECollection

# Register ND_FECollection in _fe_coll:
_fe_coll.ND_FECollection_swigregister(ND_FECollection)

class ND_Trace_FECollection(ND_FECollection):
    r"""Proxy of C++ mfem::ND_Trace_FECollection class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args, **kwargs):
        r"""__init__(ND_Trace_FECollection self, int const p, int const dim, int const cb_type=GaussLobatto, int const ob_type=GaussLegendre) -> ND_Trace_FECollection"""
        _fe_coll.ND_Trace_FECollection_swiginit(self, _fe_coll.new_ND_Trace_FECollection(*args, **kwargs))
    __swig_destroy__ = _fe_coll.delete_ND_Trace_FECollection

# Register ND_Trace_FECollection in _fe_coll:
_fe_coll.ND_Trace_FECollection_swigregister(ND_Trace_FECollection)

class NURBSFECollection(FiniteElementCollection):
    r"""Proxy of C++ mfem::NURBSFECollection class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    VariableOrder = _fe_coll.NURBSFECollection_VariableOrder
    

    def __init__(self, *args, **kwargs):
        r"""__init__(NURBSFECollection self, int Order=VariableOrder) -> NURBSFECollection"""
        _fe_coll.NURBSFECollection_swiginit(self, _fe_coll.new_NURBSFECollection(*args, **kwargs))

    def Reset(self):
        r"""Reset(NURBSFECollection self)"""
        return _fe_coll.NURBSFECollection_Reset(self)
    Reset = _swig_new_instance_method(_fe_coll.NURBSFECollection_Reset)

    def GetOrder(self):
        r"""GetOrder(NURBSFECollection self) -> int"""
        return _fe_coll.NURBSFECollection_GetOrder(self)
    GetOrder = _swig_new_instance_method(_fe_coll.NURBSFECollection_GetOrder)

    def SetOrder(self, Order):
        r"""SetOrder(NURBSFECollection self, int Order)"""
        return _fe_coll.NURBSFECollection_SetOrder(self, Order)
    SetOrder = _swig_new_instance_method(_fe_coll.NURBSFECollection_SetOrder)

    def FiniteElementForGeometry(self, GeomType):
        r"""FiniteElementForGeometry(NURBSFECollection self, mfem::Geometry::Type GeomType) -> FiniteElement"""
        return _fe_coll.NURBSFECollection_FiniteElementForGeometry(self, GeomType)
    FiniteElementForGeometry = _swig_new_instance_method(_fe_coll.NURBSFECollection_FiniteElementForGeometry)

    def DofForGeometry(self, GeomType):
        r"""DofForGeometry(NURBSFECollection self, mfem::Geometry::Type GeomType) -> int"""
        return _fe_coll.NURBSFECollection_DofForGeometry(self, GeomType)
    DofForGeometry = _swig_new_instance_method(_fe_coll.NURBSFECollection_DofForGeometry)

    def DofOrderForOrientation(self, GeomType, Or):
        r"""DofOrderForOrientation(NURBSFECollection self, mfem::Geometry::Type GeomType, int Or) -> int const *"""
        return _fe_coll.NURBSFECollection_DofOrderForOrientation(self, GeomType, Or)
    DofOrderForOrientation = _swig_new_instance_method(_fe_coll.NURBSFECollection_DofOrderForOrientation)

    def Name(self):
        r"""Name(NURBSFECollection self) -> char const *"""
        return _fe_coll.NURBSFECollection_Name(self)
    Name = _swig_new_instance_method(_fe_coll.NURBSFECollection_Name)

    def GetContType(self):
        r"""GetContType(NURBSFECollection self) -> int"""
        return _fe_coll.NURBSFECollection_GetContType(self)
    GetContType = _swig_new_instance_method(_fe_coll.NURBSFECollection_GetContType)

    def GetTraceCollection(self):
        r"""GetTraceCollection(NURBSFECollection self) -> FiniteElementCollection"""
        return _fe_coll.NURBSFECollection_GetTraceCollection(self)
    GetTraceCollection = _swig_new_instance_method(_fe_coll.NURBSFECollection_GetTraceCollection)
    __swig_destroy__ = _fe_coll.delete_NURBSFECollection

# Register NURBSFECollection in _fe_coll:
_fe_coll.NURBSFECollection_swigregister(NURBSFECollection)

class LinearFECollection(FiniteElementCollection):
    r"""Proxy of C++ mfem::LinearFECollection class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(LinearFECollection self) -> LinearFECollection"""
        _fe_coll.LinearFECollection_swiginit(self, _fe_coll.new_LinearFECollection())

    def FiniteElementForGeometry(self, GeomType):
        r"""FiniteElementForGeometry(LinearFECollection self, mfem::Geometry::Type GeomType) -> FiniteElement"""
        return _fe_coll.LinearFECollection_FiniteElementForGeometry(self, GeomType)
    FiniteElementForGeometry = _swig_new_instance_method(_fe_coll.LinearFECollection_FiniteElementForGeometry)

    def DofForGeometry(self, GeomType):
        r"""DofForGeometry(LinearFECollection self, mfem::Geometry::Type GeomType) -> int"""
        return _fe_coll.LinearFECollection_DofForGeometry(self, GeomType)
    DofForGeometry = _swig_new_instance_method(_fe_coll.LinearFECollection_DofForGeometry)

    def DofOrderForOrientation(self, GeomType, Or):
        r"""DofOrderForOrientation(LinearFECollection self, mfem::Geometry::Type GeomType, int Or) -> int const *"""
        return _fe_coll.LinearFECollection_DofOrderForOrientation(self, GeomType, Or)
    DofOrderForOrientation = _swig_new_instance_method(_fe_coll.LinearFECollection_DofOrderForOrientation)

    def Name(self):
        r"""Name(LinearFECollection self) -> char const *"""
        return _fe_coll.LinearFECollection_Name(self)
    Name = _swig_new_instance_method(_fe_coll.LinearFECollection_Name)

    def GetContType(self):
        r"""GetContType(LinearFECollection self) -> int"""
        return _fe_coll.LinearFECollection_GetContType(self)
    GetContType = _swig_new_instance_method(_fe_coll.LinearFECollection_GetContType)
    __swig_destroy__ = _fe_coll.delete_LinearFECollection

# Register LinearFECollection in _fe_coll:
_fe_coll.LinearFECollection_swigregister(LinearFECollection)

class QuadraticFECollection(FiniteElementCollection):
    r"""Proxy of C++ mfem::QuadraticFECollection class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(QuadraticFECollection self) -> QuadraticFECollection"""
        _fe_coll.QuadraticFECollection_swiginit(self, _fe_coll.new_QuadraticFECollection())

    def FiniteElementForGeometry(self, GeomType):
        r"""FiniteElementForGeometry(QuadraticFECollection self, mfem::Geometry::Type GeomType) -> FiniteElement"""
        return _fe_coll.QuadraticFECollection_FiniteElementForGeometry(self, GeomType)
    FiniteElementForGeometry = _swig_new_instance_method(_fe_coll.QuadraticFECollection_FiniteElementForGeometry)

    def DofForGeometry(self, GeomType):
        r"""DofForGeometry(QuadraticFECollection self, mfem::Geometry::Type GeomType) -> int"""
        return _fe_coll.QuadraticFECollection_DofForGeometry(self, GeomType)
    DofForGeometry = _swig_new_instance_method(_fe_coll.QuadraticFECollection_DofForGeometry)

    def DofOrderForOrientation(self, GeomType, Or):
        r"""DofOrderForOrientation(QuadraticFECollection self, mfem::Geometry::Type GeomType, int Or) -> int const *"""
        return _fe_coll.QuadraticFECollection_DofOrderForOrientation(self, GeomType, Or)
    DofOrderForOrientation = _swig_new_instance_method(_fe_coll.QuadraticFECollection_DofOrderForOrientation)

    def Name(self):
        r"""Name(QuadraticFECollection self) -> char const *"""
        return _fe_coll.QuadraticFECollection_Name(self)
    Name = _swig_new_instance_method(_fe_coll.QuadraticFECollection_Name)

    def GetContType(self):
        r"""GetContType(QuadraticFECollection self) -> int"""
        return _fe_coll.QuadraticFECollection_GetContType(self)
    GetContType = _swig_new_instance_method(_fe_coll.QuadraticFECollection_GetContType)
    __swig_destroy__ = _fe_coll.delete_QuadraticFECollection

# Register QuadraticFECollection in _fe_coll:
_fe_coll.QuadraticFECollection_swigregister(QuadraticFECollection)

class QuadraticPosFECollection(FiniteElementCollection):
    r"""Proxy of C++ mfem::QuadraticPosFECollection class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(QuadraticPosFECollection self) -> QuadraticPosFECollection"""
        _fe_coll.QuadraticPosFECollection_swiginit(self, _fe_coll.new_QuadraticPosFECollection())

    def FiniteElementForGeometry(self, GeomType):
        r"""FiniteElementForGeometry(QuadraticPosFECollection self, mfem::Geometry::Type GeomType) -> FiniteElement"""
        return _fe_coll.QuadraticPosFECollection_FiniteElementForGeometry(self, GeomType)
    FiniteElementForGeometry = _swig_new_instance_method(_fe_coll.QuadraticPosFECollection_FiniteElementForGeometry)

    def DofForGeometry(self, GeomType):
        r"""DofForGeometry(QuadraticPosFECollection self, mfem::Geometry::Type GeomType) -> int"""
        return _fe_coll.QuadraticPosFECollection_DofForGeometry(self, GeomType)
    DofForGeometry = _swig_new_instance_method(_fe_coll.QuadraticPosFECollection_DofForGeometry)

    def DofOrderForOrientation(self, GeomType, Or):
        r"""DofOrderForOrientation(QuadraticPosFECollection self, mfem::Geometry::Type GeomType, int Or) -> int const *"""
        return _fe_coll.QuadraticPosFECollection_DofOrderForOrientation(self, GeomType, Or)
    DofOrderForOrientation = _swig_new_instance_method(_fe_coll.QuadraticPosFECollection_DofOrderForOrientation)

    def Name(self):
        r"""Name(QuadraticPosFECollection self) -> char const *"""
        return _fe_coll.QuadraticPosFECollection_Name(self)
    Name = _swig_new_instance_method(_fe_coll.QuadraticPosFECollection_Name)

    def GetContType(self):
        r"""GetContType(QuadraticPosFECollection self) -> int"""
        return _fe_coll.QuadraticPosFECollection_GetContType(self)
    GetContType = _swig_new_instance_method(_fe_coll.QuadraticPosFECollection_GetContType)
    __swig_destroy__ = _fe_coll.delete_QuadraticPosFECollection

# Register QuadraticPosFECollection in _fe_coll:
_fe_coll.QuadraticPosFECollection_swigregister(QuadraticPosFECollection)

class CubicFECollection(FiniteElementCollection):
    r"""Proxy of C++ mfem::CubicFECollection class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(CubicFECollection self) -> CubicFECollection"""
        _fe_coll.CubicFECollection_swiginit(self, _fe_coll.new_CubicFECollection())

    def FiniteElementForGeometry(self, GeomType):
        r"""FiniteElementForGeometry(CubicFECollection self, mfem::Geometry::Type GeomType) -> FiniteElement"""
        return _fe_coll.CubicFECollection_FiniteElementForGeometry(self, GeomType)
    FiniteElementForGeometry = _swig_new_instance_method(_fe_coll.CubicFECollection_FiniteElementForGeometry)

    def DofForGeometry(self, GeomType):
        r"""DofForGeometry(CubicFECollection self, mfem::Geometry::Type GeomType) -> int"""
        return _fe_coll.CubicFECollection_DofForGeometry(self, GeomType)
    DofForGeometry = _swig_new_instance_method(_fe_coll.CubicFECollection_DofForGeometry)

    def DofOrderForOrientation(self, GeomType, Or):
        r"""DofOrderForOrientation(CubicFECollection self, mfem::Geometry::Type GeomType, int Or) -> int const *"""
        return _fe_coll.CubicFECollection_DofOrderForOrientation(self, GeomType, Or)
    DofOrderForOrientation = _swig_new_instance_method(_fe_coll.CubicFECollection_DofOrderForOrientation)

    def Name(self):
        r"""Name(CubicFECollection self) -> char const *"""
        return _fe_coll.CubicFECollection_Name(self)
    Name = _swig_new_instance_method(_fe_coll.CubicFECollection_Name)

    def GetContType(self):
        r"""GetContType(CubicFECollection self) -> int"""
        return _fe_coll.CubicFECollection_GetContType(self)
    GetContType = _swig_new_instance_method(_fe_coll.CubicFECollection_GetContType)
    __swig_destroy__ = _fe_coll.delete_CubicFECollection

# Register CubicFECollection in _fe_coll:
_fe_coll.CubicFECollection_swigregister(CubicFECollection)

class CrouzeixRaviartFECollection(FiniteElementCollection):
    r"""Proxy of C++ mfem::CrouzeixRaviartFECollection class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(CrouzeixRaviartFECollection self) -> CrouzeixRaviartFECollection"""
        _fe_coll.CrouzeixRaviartFECollection_swiginit(self, _fe_coll.new_CrouzeixRaviartFECollection())

    def FiniteElementForGeometry(self, GeomType):
        r"""FiniteElementForGeometry(CrouzeixRaviartFECollection self, mfem::Geometry::Type GeomType) -> FiniteElement"""
        return _fe_coll.CrouzeixRaviartFECollection_FiniteElementForGeometry(self, GeomType)
    FiniteElementForGeometry = _swig_new_instance_method(_fe_coll.CrouzeixRaviartFECollection_FiniteElementForGeometry)

    def DofForGeometry(self, GeomType):
        r"""DofForGeometry(CrouzeixRaviartFECollection self, mfem::Geometry::Type GeomType) -> int"""
        return _fe_coll.CrouzeixRaviartFECollection_DofForGeometry(self, GeomType)
    DofForGeometry = _swig_new_instance_method(_fe_coll.CrouzeixRaviartFECollection_DofForGeometry)

    def DofOrderForOrientation(self, GeomType, Or):
        r"""DofOrderForOrientation(CrouzeixRaviartFECollection self, mfem::Geometry::Type GeomType, int Or) -> int const *"""
        return _fe_coll.CrouzeixRaviartFECollection_DofOrderForOrientation(self, GeomType, Or)
    DofOrderForOrientation = _swig_new_instance_method(_fe_coll.CrouzeixRaviartFECollection_DofOrderForOrientation)

    def Name(self):
        r"""Name(CrouzeixRaviartFECollection self) -> char const *"""
        return _fe_coll.CrouzeixRaviartFECollection_Name(self)
    Name = _swig_new_instance_method(_fe_coll.CrouzeixRaviartFECollection_Name)

    def GetContType(self):
        r"""GetContType(CrouzeixRaviartFECollection self) -> int"""
        return _fe_coll.CrouzeixRaviartFECollection_GetContType(self)
    GetContType = _swig_new_instance_method(_fe_coll.CrouzeixRaviartFECollection_GetContType)
    __swig_destroy__ = _fe_coll.delete_CrouzeixRaviartFECollection

# Register CrouzeixRaviartFECollection in _fe_coll:
_fe_coll.CrouzeixRaviartFECollection_swigregister(CrouzeixRaviartFECollection)

class LinearNonConf3DFECollection(FiniteElementCollection):
    r"""Proxy of C++ mfem::LinearNonConf3DFECollection class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(LinearNonConf3DFECollection self) -> LinearNonConf3DFECollection"""
        _fe_coll.LinearNonConf3DFECollection_swiginit(self, _fe_coll.new_LinearNonConf3DFECollection())

    def FiniteElementForGeometry(self, GeomType):
        r"""FiniteElementForGeometry(LinearNonConf3DFECollection self, mfem::Geometry::Type GeomType) -> FiniteElement"""
        return _fe_coll.LinearNonConf3DFECollection_FiniteElementForGeometry(self, GeomType)
    FiniteElementForGeometry = _swig_new_instance_method(_fe_coll.LinearNonConf3DFECollection_FiniteElementForGeometry)

    def DofForGeometry(self, GeomType):
        r"""DofForGeometry(LinearNonConf3DFECollection self, mfem::Geometry::Type GeomType) -> int"""
        return _fe_coll.LinearNonConf3DFECollection_DofForGeometry(self, GeomType)
    DofForGeometry = _swig_new_instance_method(_fe_coll.LinearNonConf3DFECollection_DofForGeometry)

    def DofOrderForOrientation(self, GeomType, Or):
        r"""DofOrderForOrientation(LinearNonConf3DFECollection self, mfem::Geometry::Type GeomType, int Or) -> int const *"""
        return _fe_coll.LinearNonConf3DFECollection_DofOrderForOrientation(self, GeomType, Or)
    DofOrderForOrientation = _swig_new_instance_method(_fe_coll.LinearNonConf3DFECollection_DofOrderForOrientation)

    def Name(self):
        r"""Name(LinearNonConf3DFECollection self) -> char const *"""
        return _fe_coll.LinearNonConf3DFECollection_Name(self)
    Name = _swig_new_instance_method(_fe_coll.LinearNonConf3DFECollection_Name)

    def GetContType(self):
        r"""GetContType(LinearNonConf3DFECollection self) -> int"""
        return _fe_coll.LinearNonConf3DFECollection_GetContType(self)
    GetContType = _swig_new_instance_method(_fe_coll.LinearNonConf3DFECollection_GetContType)
    __swig_destroy__ = _fe_coll.delete_LinearNonConf3DFECollection

# Register LinearNonConf3DFECollection in _fe_coll:
_fe_coll.LinearNonConf3DFECollection_swigregister(LinearNonConf3DFECollection)

class RT0_2DFECollection(FiniteElementCollection):
    r"""Proxy of C++ mfem::RT0_2DFECollection class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(RT0_2DFECollection self) -> RT0_2DFECollection"""
        _fe_coll.RT0_2DFECollection_swiginit(self, _fe_coll.new_RT0_2DFECollection())

    def FiniteElementForGeometry(self, GeomType):
        r"""FiniteElementForGeometry(RT0_2DFECollection self, mfem::Geometry::Type GeomType) -> FiniteElement"""
        return _fe_coll.RT0_2DFECollection_FiniteElementForGeometry(self, GeomType)
    FiniteElementForGeometry = _swig_new_instance_method(_fe_coll.RT0_2DFECollection_FiniteElementForGeometry)

    def DofForGeometry(self, GeomType):
        r"""DofForGeometry(RT0_2DFECollection self, mfem::Geometry::Type GeomType) -> int"""
        return _fe_coll.RT0_2DFECollection_DofForGeometry(self, GeomType)
    DofForGeometry = _swig_new_instance_method(_fe_coll.RT0_2DFECollection_DofForGeometry)

    def DofOrderForOrientation(self, GeomType, Or):
        r"""DofOrderForOrientation(RT0_2DFECollection self, mfem::Geometry::Type GeomType, int Or) -> int const *"""
        return _fe_coll.RT0_2DFECollection_DofOrderForOrientation(self, GeomType, Or)
    DofOrderForOrientation = _swig_new_instance_method(_fe_coll.RT0_2DFECollection_DofOrderForOrientation)

    def Name(self):
        r"""Name(RT0_2DFECollection self) -> char const *"""
        return _fe_coll.RT0_2DFECollection_Name(self)
    Name = _swig_new_instance_method(_fe_coll.RT0_2DFECollection_Name)

    def GetContType(self):
        r"""GetContType(RT0_2DFECollection self) -> int"""
        return _fe_coll.RT0_2DFECollection_GetContType(self)
    GetContType = _swig_new_instance_method(_fe_coll.RT0_2DFECollection_GetContType)
    __swig_destroy__ = _fe_coll.delete_RT0_2DFECollection

# Register RT0_2DFECollection in _fe_coll:
_fe_coll.RT0_2DFECollection_swigregister(RT0_2DFECollection)

class RT1_2DFECollection(FiniteElementCollection):
    r"""Proxy of C++ mfem::RT1_2DFECollection class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(RT1_2DFECollection self) -> RT1_2DFECollection"""
        _fe_coll.RT1_2DFECollection_swiginit(self, _fe_coll.new_RT1_2DFECollection())

    def FiniteElementForGeometry(self, GeomType):
        r"""FiniteElementForGeometry(RT1_2DFECollection self, mfem::Geometry::Type GeomType) -> FiniteElement"""
        return _fe_coll.RT1_2DFECollection_FiniteElementForGeometry(self, GeomType)
    FiniteElementForGeometry = _swig_new_instance_method(_fe_coll.RT1_2DFECollection_FiniteElementForGeometry)

    def DofForGeometry(self, GeomType):
        r"""DofForGeometry(RT1_2DFECollection self, mfem::Geometry::Type GeomType) -> int"""
        return _fe_coll.RT1_2DFECollection_DofForGeometry(self, GeomType)
    DofForGeometry = _swig_new_instance_method(_fe_coll.RT1_2DFECollection_DofForGeometry)

    def DofOrderForOrientation(self, GeomType, Or):
        r"""DofOrderForOrientation(RT1_2DFECollection self, mfem::Geometry::Type GeomType, int Or) -> int const *"""
        return _fe_coll.RT1_2DFECollection_DofOrderForOrientation(self, GeomType, Or)
    DofOrderForOrientation = _swig_new_instance_method(_fe_coll.RT1_2DFECollection_DofOrderForOrientation)

    def Name(self):
        r"""Name(RT1_2DFECollection self) -> char const *"""
        return _fe_coll.RT1_2DFECollection_Name(self)
    Name = _swig_new_instance_method(_fe_coll.RT1_2DFECollection_Name)

    def GetContType(self):
        r"""GetContType(RT1_2DFECollection self) -> int"""
        return _fe_coll.RT1_2DFECollection_GetContType(self)
    GetContType = _swig_new_instance_method(_fe_coll.RT1_2DFECollection_GetContType)
    __swig_destroy__ = _fe_coll.delete_RT1_2DFECollection

# Register RT1_2DFECollection in _fe_coll:
_fe_coll.RT1_2DFECollection_swigregister(RT1_2DFECollection)

class RT2_2DFECollection(FiniteElementCollection):
    r"""Proxy of C++ mfem::RT2_2DFECollection class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(RT2_2DFECollection self) -> RT2_2DFECollection"""
        _fe_coll.RT2_2DFECollection_swiginit(self, _fe_coll.new_RT2_2DFECollection())

    def FiniteElementForGeometry(self, GeomType):
        r"""FiniteElementForGeometry(RT2_2DFECollection self, mfem::Geometry::Type GeomType) -> FiniteElement"""
        return _fe_coll.RT2_2DFECollection_FiniteElementForGeometry(self, GeomType)
    FiniteElementForGeometry = _swig_new_instance_method(_fe_coll.RT2_2DFECollection_FiniteElementForGeometry)

    def DofForGeometry(self, GeomType):
        r"""DofForGeometry(RT2_2DFECollection self, mfem::Geometry::Type GeomType) -> int"""
        return _fe_coll.RT2_2DFECollection_DofForGeometry(self, GeomType)
    DofForGeometry = _swig_new_instance_method(_fe_coll.RT2_2DFECollection_DofForGeometry)

    def DofOrderForOrientation(self, GeomType, Or):
        r"""DofOrderForOrientation(RT2_2DFECollection self, mfem::Geometry::Type GeomType, int Or) -> int const *"""
        return _fe_coll.RT2_2DFECollection_DofOrderForOrientation(self, GeomType, Or)
    DofOrderForOrientation = _swig_new_instance_method(_fe_coll.RT2_2DFECollection_DofOrderForOrientation)

    def Name(self):
        r"""Name(RT2_2DFECollection self) -> char const *"""
        return _fe_coll.RT2_2DFECollection_Name(self)
    Name = _swig_new_instance_method(_fe_coll.RT2_2DFECollection_Name)

    def GetContType(self):
        r"""GetContType(RT2_2DFECollection self) -> int"""
        return _fe_coll.RT2_2DFECollection_GetContType(self)
    GetContType = _swig_new_instance_method(_fe_coll.RT2_2DFECollection_GetContType)
    __swig_destroy__ = _fe_coll.delete_RT2_2DFECollection

# Register RT2_2DFECollection in _fe_coll:
_fe_coll.RT2_2DFECollection_swigregister(RT2_2DFECollection)

class Const2DFECollection(FiniteElementCollection):
    r"""Proxy of C++ mfem::Const2DFECollection class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Const2DFECollection self) -> Const2DFECollection"""
        _fe_coll.Const2DFECollection_swiginit(self, _fe_coll.new_Const2DFECollection())

    def FiniteElementForGeometry(self, GeomType):
        r"""FiniteElementForGeometry(Const2DFECollection self, mfem::Geometry::Type GeomType) -> FiniteElement"""
        return _fe_coll.Const2DFECollection_FiniteElementForGeometry(self, GeomType)
    FiniteElementForGeometry = _swig_new_instance_method(_fe_coll.Const2DFECollection_FiniteElementForGeometry)

    def DofForGeometry(self, GeomType):
        r"""DofForGeometry(Const2DFECollection self, mfem::Geometry::Type GeomType) -> int"""
        return _fe_coll.Const2DFECollection_DofForGeometry(self, GeomType)
    DofForGeometry = _swig_new_instance_method(_fe_coll.Const2DFECollection_DofForGeometry)

    def DofOrderForOrientation(self, GeomType, Or):
        r"""DofOrderForOrientation(Const2DFECollection self, mfem::Geometry::Type GeomType, int Or) -> int const *"""
        return _fe_coll.Const2DFECollection_DofOrderForOrientation(self, GeomType, Or)
    DofOrderForOrientation = _swig_new_instance_method(_fe_coll.Const2DFECollection_DofOrderForOrientation)

    def Name(self):
        r"""Name(Const2DFECollection self) -> char const *"""
        return _fe_coll.Const2DFECollection_Name(self)
    Name = _swig_new_instance_method(_fe_coll.Const2DFECollection_Name)

    def GetContType(self):
        r"""GetContType(Const2DFECollection self) -> int"""
        return _fe_coll.Const2DFECollection_GetContType(self)
    GetContType = _swig_new_instance_method(_fe_coll.Const2DFECollection_GetContType)
    __swig_destroy__ = _fe_coll.delete_Const2DFECollection

# Register Const2DFECollection in _fe_coll:
_fe_coll.Const2DFECollection_swigregister(Const2DFECollection)

class LinearDiscont2DFECollection(FiniteElementCollection):
    r"""Proxy of C++ mfem::LinearDiscont2DFECollection class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(LinearDiscont2DFECollection self) -> LinearDiscont2DFECollection"""
        _fe_coll.LinearDiscont2DFECollection_swiginit(self, _fe_coll.new_LinearDiscont2DFECollection())

    def FiniteElementForGeometry(self, GeomType):
        r"""FiniteElementForGeometry(LinearDiscont2DFECollection self, mfem::Geometry::Type GeomType) -> FiniteElement"""
        return _fe_coll.LinearDiscont2DFECollection_FiniteElementForGeometry(self, GeomType)
    FiniteElementForGeometry = _swig_new_instance_method(_fe_coll.LinearDiscont2DFECollection_FiniteElementForGeometry)

    def DofForGeometry(self, GeomType):
        r"""DofForGeometry(LinearDiscont2DFECollection self, mfem::Geometry::Type GeomType) -> int"""
        return _fe_coll.LinearDiscont2DFECollection_DofForGeometry(self, GeomType)
    DofForGeometry = _swig_new_instance_method(_fe_coll.LinearDiscont2DFECollection_DofForGeometry)

    def DofOrderForOrientation(self, GeomType, Or):
        r"""DofOrderForOrientation(LinearDiscont2DFECollection self, mfem::Geometry::Type GeomType, int Or) -> int const *"""
        return _fe_coll.LinearDiscont2DFECollection_DofOrderForOrientation(self, GeomType, Or)
    DofOrderForOrientation = _swig_new_instance_method(_fe_coll.LinearDiscont2DFECollection_DofOrderForOrientation)

    def Name(self):
        r"""Name(LinearDiscont2DFECollection self) -> char const *"""
        return _fe_coll.LinearDiscont2DFECollection_Name(self)
    Name = _swig_new_instance_method(_fe_coll.LinearDiscont2DFECollection_Name)

    def GetContType(self):
        r"""GetContType(LinearDiscont2DFECollection self) -> int"""
        return _fe_coll.LinearDiscont2DFECollection_GetContType(self)
    GetContType = _swig_new_instance_method(_fe_coll.LinearDiscont2DFECollection_GetContType)
    __swig_destroy__ = _fe_coll.delete_LinearDiscont2DFECollection

# Register LinearDiscont2DFECollection in _fe_coll:
_fe_coll.LinearDiscont2DFECollection_swigregister(LinearDiscont2DFECollection)

class GaussLinearDiscont2DFECollection(FiniteElementCollection):
    r"""Proxy of C++ mfem::GaussLinearDiscont2DFECollection class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(GaussLinearDiscont2DFECollection self) -> GaussLinearDiscont2DFECollection"""
        _fe_coll.GaussLinearDiscont2DFECollection_swiginit(self, _fe_coll.new_GaussLinearDiscont2DFECollection())

    def FiniteElementForGeometry(self, GeomType):
        r"""FiniteElementForGeometry(GaussLinearDiscont2DFECollection self, mfem::Geometry::Type GeomType) -> FiniteElement"""
        return _fe_coll.GaussLinearDiscont2DFECollection_FiniteElementForGeometry(self, GeomType)
    FiniteElementForGeometry = _swig_new_instance_method(_fe_coll.GaussLinearDiscont2DFECollection_FiniteElementForGeometry)

    def DofForGeometry(self, GeomType):
        r"""DofForGeometry(GaussLinearDiscont2DFECollection self, mfem::Geometry::Type GeomType) -> int"""
        return _fe_coll.GaussLinearDiscont2DFECollection_DofForGeometry(self, GeomType)
    DofForGeometry = _swig_new_instance_method(_fe_coll.GaussLinearDiscont2DFECollection_DofForGeometry)

    def DofOrderForOrientation(self, GeomType, Or):
        r"""DofOrderForOrientation(GaussLinearDiscont2DFECollection self, mfem::Geometry::Type GeomType, int Or) -> int const *"""
        return _fe_coll.GaussLinearDiscont2DFECollection_DofOrderForOrientation(self, GeomType, Or)
    DofOrderForOrientation = _swig_new_instance_method(_fe_coll.GaussLinearDiscont2DFECollection_DofOrderForOrientation)

    def Name(self):
        r"""Name(GaussLinearDiscont2DFECollection self) -> char const *"""
        return _fe_coll.GaussLinearDiscont2DFECollection_Name(self)
    Name = _swig_new_instance_method(_fe_coll.GaussLinearDiscont2DFECollection_Name)

    def GetContType(self):
        r"""GetContType(GaussLinearDiscont2DFECollection self) -> int"""
        return _fe_coll.GaussLinearDiscont2DFECollection_GetContType(self)
    GetContType = _swig_new_instance_method(_fe_coll.GaussLinearDiscont2DFECollection_GetContType)
    __swig_destroy__ = _fe_coll.delete_GaussLinearDiscont2DFECollection

# Register GaussLinearDiscont2DFECollection in _fe_coll:
_fe_coll.GaussLinearDiscont2DFECollection_swigregister(GaussLinearDiscont2DFECollection)

class P1OnQuadFECollection(FiniteElementCollection):
    r"""Proxy of C++ mfem::P1OnQuadFECollection class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(P1OnQuadFECollection self) -> P1OnQuadFECollection"""
        _fe_coll.P1OnQuadFECollection_swiginit(self, _fe_coll.new_P1OnQuadFECollection())

    def FiniteElementForGeometry(self, GeomType):
        r"""FiniteElementForGeometry(P1OnQuadFECollection self, mfem::Geometry::Type GeomType) -> FiniteElement"""
        return _fe_coll.P1OnQuadFECollection_FiniteElementForGeometry(self, GeomType)
    FiniteElementForGeometry = _swig_new_instance_method(_fe_coll.P1OnQuadFECollection_FiniteElementForGeometry)

    def DofForGeometry(self, GeomType):
        r"""DofForGeometry(P1OnQuadFECollection self, mfem::Geometry::Type GeomType) -> int"""
        return _fe_coll.P1OnQuadFECollection_DofForGeometry(self, GeomType)
    DofForGeometry = _swig_new_instance_method(_fe_coll.P1OnQuadFECollection_DofForGeometry)

    def DofOrderForOrientation(self, GeomType, Or):
        r"""DofOrderForOrientation(P1OnQuadFECollection self, mfem::Geometry::Type GeomType, int Or) -> int const *"""
        return _fe_coll.P1OnQuadFECollection_DofOrderForOrientation(self, GeomType, Or)
    DofOrderForOrientation = _swig_new_instance_method(_fe_coll.P1OnQuadFECollection_DofOrderForOrientation)

    def Name(self):
        r"""Name(P1OnQuadFECollection self) -> char const *"""
        return _fe_coll.P1OnQuadFECollection_Name(self)
    Name = _swig_new_instance_method(_fe_coll.P1OnQuadFECollection_Name)

    def GetContType(self):
        r"""GetContType(P1OnQuadFECollection self) -> int"""
        return _fe_coll.P1OnQuadFECollection_GetContType(self)
    GetContType = _swig_new_instance_method(_fe_coll.P1OnQuadFECollection_GetContType)
    __swig_destroy__ = _fe_coll.delete_P1OnQuadFECollection

# Register P1OnQuadFECollection in _fe_coll:
_fe_coll.P1OnQuadFECollection_swigregister(P1OnQuadFECollection)

class QuadraticDiscont2DFECollection(FiniteElementCollection):
    r"""Proxy of C++ mfem::QuadraticDiscont2DFECollection class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(QuadraticDiscont2DFECollection self) -> QuadraticDiscont2DFECollection"""
        _fe_coll.QuadraticDiscont2DFECollection_swiginit(self, _fe_coll.new_QuadraticDiscont2DFECollection())

    def FiniteElementForGeometry(self, GeomType):
        r"""FiniteElementForGeometry(QuadraticDiscont2DFECollection self, mfem::Geometry::Type GeomType) -> FiniteElement"""
        return _fe_coll.QuadraticDiscont2DFECollection_FiniteElementForGeometry(self, GeomType)
    FiniteElementForGeometry = _swig_new_instance_method(_fe_coll.QuadraticDiscont2DFECollection_FiniteElementForGeometry)

    def DofForGeometry(self, GeomType):
        r"""DofForGeometry(QuadraticDiscont2DFECollection self, mfem::Geometry::Type GeomType) -> int"""
        return _fe_coll.QuadraticDiscont2DFECollection_DofForGeometry(self, GeomType)
    DofForGeometry = _swig_new_instance_method(_fe_coll.QuadraticDiscont2DFECollection_DofForGeometry)

    def DofOrderForOrientation(self, GeomType, Or):
        r"""DofOrderForOrientation(QuadraticDiscont2DFECollection self, mfem::Geometry::Type GeomType, int Or) -> int const *"""
        return _fe_coll.QuadraticDiscont2DFECollection_DofOrderForOrientation(self, GeomType, Or)
    DofOrderForOrientation = _swig_new_instance_method(_fe_coll.QuadraticDiscont2DFECollection_DofOrderForOrientation)

    def Name(self):
        r"""Name(QuadraticDiscont2DFECollection self) -> char const *"""
        return _fe_coll.QuadraticDiscont2DFECollection_Name(self)
    Name = _swig_new_instance_method(_fe_coll.QuadraticDiscont2DFECollection_Name)

    def GetContType(self):
        r"""GetContType(QuadraticDiscont2DFECollection self) -> int"""
        return _fe_coll.QuadraticDiscont2DFECollection_GetContType(self)
    GetContType = _swig_new_instance_method(_fe_coll.QuadraticDiscont2DFECollection_GetContType)
    __swig_destroy__ = _fe_coll.delete_QuadraticDiscont2DFECollection

# Register QuadraticDiscont2DFECollection in _fe_coll:
_fe_coll.QuadraticDiscont2DFECollection_swigregister(QuadraticDiscont2DFECollection)

class QuadraticPosDiscont2DFECollection(FiniteElementCollection):
    r"""Proxy of C++ mfem::QuadraticPosDiscont2DFECollection class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(QuadraticPosDiscont2DFECollection self) -> QuadraticPosDiscont2DFECollection"""
        _fe_coll.QuadraticPosDiscont2DFECollection_swiginit(self, _fe_coll.new_QuadraticPosDiscont2DFECollection())

    def FiniteElementForGeometry(self, GeomType):
        r"""FiniteElementForGeometry(QuadraticPosDiscont2DFECollection self, mfem::Geometry::Type GeomType) -> FiniteElement"""
        return _fe_coll.QuadraticPosDiscont2DFECollection_FiniteElementForGeometry(self, GeomType)
    FiniteElementForGeometry = _swig_new_instance_method(_fe_coll.QuadraticPosDiscont2DFECollection_FiniteElementForGeometry)

    def DofForGeometry(self, GeomType):
        r"""DofForGeometry(QuadraticPosDiscont2DFECollection self, mfem::Geometry::Type GeomType) -> int"""
        return _fe_coll.QuadraticPosDiscont2DFECollection_DofForGeometry(self, GeomType)
    DofForGeometry = _swig_new_instance_method(_fe_coll.QuadraticPosDiscont2DFECollection_DofForGeometry)

    def DofOrderForOrientation(self, GeomType, Or):
        r"""DofOrderForOrientation(QuadraticPosDiscont2DFECollection self, mfem::Geometry::Type GeomType, int Or) -> int const *"""
        return _fe_coll.QuadraticPosDiscont2DFECollection_DofOrderForOrientation(self, GeomType, Or)
    DofOrderForOrientation = _swig_new_instance_method(_fe_coll.QuadraticPosDiscont2DFECollection_DofOrderForOrientation)

    def Name(self):
        r"""Name(QuadraticPosDiscont2DFECollection self) -> char const *"""
        return _fe_coll.QuadraticPosDiscont2DFECollection_Name(self)
    Name = _swig_new_instance_method(_fe_coll.QuadraticPosDiscont2DFECollection_Name)

    def GetContType(self):
        r"""GetContType(QuadraticPosDiscont2DFECollection self) -> int"""
        return _fe_coll.QuadraticPosDiscont2DFECollection_GetContType(self)
    GetContType = _swig_new_instance_method(_fe_coll.QuadraticPosDiscont2DFECollection_GetContType)
    __swig_destroy__ = _fe_coll.delete_QuadraticPosDiscont2DFECollection

# Register QuadraticPosDiscont2DFECollection in _fe_coll:
_fe_coll.QuadraticPosDiscont2DFECollection_swigregister(QuadraticPosDiscont2DFECollection)

class GaussQuadraticDiscont2DFECollection(FiniteElementCollection):
    r"""Proxy of C++ mfem::GaussQuadraticDiscont2DFECollection class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(GaussQuadraticDiscont2DFECollection self) -> GaussQuadraticDiscont2DFECollection"""
        _fe_coll.GaussQuadraticDiscont2DFECollection_swiginit(self, _fe_coll.new_GaussQuadraticDiscont2DFECollection())

    def FiniteElementForGeometry(self, GeomType):
        r"""FiniteElementForGeometry(GaussQuadraticDiscont2DFECollection self, mfem::Geometry::Type GeomType) -> FiniteElement"""
        return _fe_coll.GaussQuadraticDiscont2DFECollection_FiniteElementForGeometry(self, GeomType)
    FiniteElementForGeometry = _swig_new_instance_method(_fe_coll.GaussQuadraticDiscont2DFECollection_FiniteElementForGeometry)

    def DofForGeometry(self, GeomType):
        r"""DofForGeometry(GaussQuadraticDiscont2DFECollection self, mfem::Geometry::Type GeomType) -> int"""
        return _fe_coll.GaussQuadraticDiscont2DFECollection_DofForGeometry(self, GeomType)
    DofForGeometry = _swig_new_instance_method(_fe_coll.GaussQuadraticDiscont2DFECollection_DofForGeometry)

    def DofOrderForOrientation(self, GeomType, Or):
        r"""DofOrderForOrientation(GaussQuadraticDiscont2DFECollection self, mfem::Geometry::Type GeomType, int Or) -> int const *"""
        return _fe_coll.GaussQuadraticDiscont2DFECollection_DofOrderForOrientation(self, GeomType, Or)
    DofOrderForOrientation = _swig_new_instance_method(_fe_coll.GaussQuadraticDiscont2DFECollection_DofOrderForOrientation)

    def Name(self):
        r"""Name(GaussQuadraticDiscont2DFECollection self) -> char const *"""
        return _fe_coll.GaussQuadraticDiscont2DFECollection_Name(self)
    Name = _swig_new_instance_method(_fe_coll.GaussQuadraticDiscont2DFECollection_Name)

    def GetContType(self):
        r"""GetContType(GaussQuadraticDiscont2DFECollection self) -> int"""
        return _fe_coll.GaussQuadraticDiscont2DFECollection_GetContType(self)
    GetContType = _swig_new_instance_method(_fe_coll.GaussQuadraticDiscont2DFECollection_GetContType)
    __swig_destroy__ = _fe_coll.delete_GaussQuadraticDiscont2DFECollection

# Register GaussQuadraticDiscont2DFECollection in _fe_coll:
_fe_coll.GaussQuadraticDiscont2DFECollection_swigregister(GaussQuadraticDiscont2DFECollection)

class CubicDiscont2DFECollection(FiniteElementCollection):
    r"""Proxy of C++ mfem::CubicDiscont2DFECollection class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(CubicDiscont2DFECollection self) -> CubicDiscont2DFECollection"""
        _fe_coll.CubicDiscont2DFECollection_swiginit(self, _fe_coll.new_CubicDiscont2DFECollection())

    def FiniteElementForGeometry(self, GeomType):
        r"""FiniteElementForGeometry(CubicDiscont2DFECollection self, mfem::Geometry::Type GeomType) -> FiniteElement"""
        return _fe_coll.CubicDiscont2DFECollection_FiniteElementForGeometry(self, GeomType)
    FiniteElementForGeometry = _swig_new_instance_method(_fe_coll.CubicDiscont2DFECollection_FiniteElementForGeometry)

    def DofForGeometry(self, GeomType):
        r"""DofForGeometry(CubicDiscont2DFECollection self, mfem::Geometry::Type GeomType) -> int"""
        return _fe_coll.CubicDiscont2DFECollection_DofForGeometry(self, GeomType)
    DofForGeometry = _swig_new_instance_method(_fe_coll.CubicDiscont2DFECollection_DofForGeometry)

    def DofOrderForOrientation(self, GeomType, Or):
        r"""DofOrderForOrientation(CubicDiscont2DFECollection self, mfem::Geometry::Type GeomType, int Or) -> int const *"""
        return _fe_coll.CubicDiscont2DFECollection_DofOrderForOrientation(self, GeomType, Or)
    DofOrderForOrientation = _swig_new_instance_method(_fe_coll.CubicDiscont2DFECollection_DofOrderForOrientation)

    def Name(self):
        r"""Name(CubicDiscont2DFECollection self) -> char const *"""
        return _fe_coll.CubicDiscont2DFECollection_Name(self)
    Name = _swig_new_instance_method(_fe_coll.CubicDiscont2DFECollection_Name)

    def GetContType(self):
        r"""GetContType(CubicDiscont2DFECollection self) -> int"""
        return _fe_coll.CubicDiscont2DFECollection_GetContType(self)
    GetContType = _swig_new_instance_method(_fe_coll.CubicDiscont2DFECollection_GetContType)
    __swig_destroy__ = _fe_coll.delete_CubicDiscont2DFECollection

# Register CubicDiscont2DFECollection in _fe_coll:
_fe_coll.CubicDiscont2DFECollection_swigregister(CubicDiscont2DFECollection)

class Const3DFECollection(FiniteElementCollection):
    r"""Proxy of C++ mfem::Const3DFECollection class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Const3DFECollection self) -> Const3DFECollection"""
        _fe_coll.Const3DFECollection_swiginit(self, _fe_coll.new_Const3DFECollection())

    def FiniteElementForGeometry(self, GeomType):
        r"""FiniteElementForGeometry(Const3DFECollection self, mfem::Geometry::Type GeomType) -> FiniteElement"""
        return _fe_coll.Const3DFECollection_FiniteElementForGeometry(self, GeomType)
    FiniteElementForGeometry = _swig_new_instance_method(_fe_coll.Const3DFECollection_FiniteElementForGeometry)

    def DofForGeometry(self, GeomType):
        r"""DofForGeometry(Const3DFECollection self, mfem::Geometry::Type GeomType) -> int"""
        return _fe_coll.Const3DFECollection_DofForGeometry(self, GeomType)
    DofForGeometry = _swig_new_instance_method(_fe_coll.Const3DFECollection_DofForGeometry)

    def DofOrderForOrientation(self, GeomType, Or):
        r"""DofOrderForOrientation(Const3DFECollection self, mfem::Geometry::Type GeomType, int Or) -> int const *"""
        return _fe_coll.Const3DFECollection_DofOrderForOrientation(self, GeomType, Or)
    DofOrderForOrientation = _swig_new_instance_method(_fe_coll.Const3DFECollection_DofOrderForOrientation)

    def Name(self):
        r"""Name(Const3DFECollection self) -> char const *"""
        return _fe_coll.Const3DFECollection_Name(self)
    Name = _swig_new_instance_method(_fe_coll.Const3DFECollection_Name)

    def GetContType(self):
        r"""GetContType(Const3DFECollection self) -> int"""
        return _fe_coll.Const3DFECollection_GetContType(self)
    GetContType = _swig_new_instance_method(_fe_coll.Const3DFECollection_GetContType)
    __swig_destroy__ = _fe_coll.delete_Const3DFECollection

# Register Const3DFECollection in _fe_coll:
_fe_coll.Const3DFECollection_swigregister(Const3DFECollection)

class LinearDiscont3DFECollection(FiniteElementCollection):
    r"""Proxy of C++ mfem::LinearDiscont3DFECollection class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(LinearDiscont3DFECollection self) -> LinearDiscont3DFECollection"""
        _fe_coll.LinearDiscont3DFECollection_swiginit(self, _fe_coll.new_LinearDiscont3DFECollection())

    def FiniteElementForGeometry(self, GeomType):
        r"""FiniteElementForGeometry(LinearDiscont3DFECollection self, mfem::Geometry::Type GeomType) -> FiniteElement"""
        return _fe_coll.LinearDiscont3DFECollection_FiniteElementForGeometry(self, GeomType)
    FiniteElementForGeometry = _swig_new_instance_method(_fe_coll.LinearDiscont3DFECollection_FiniteElementForGeometry)

    def DofForGeometry(self, GeomType):
        r"""DofForGeometry(LinearDiscont3DFECollection self, mfem::Geometry::Type GeomType) -> int"""
        return _fe_coll.LinearDiscont3DFECollection_DofForGeometry(self, GeomType)
    DofForGeometry = _swig_new_instance_method(_fe_coll.LinearDiscont3DFECollection_DofForGeometry)

    def DofOrderForOrientation(self, GeomType, Or):
        r"""DofOrderForOrientation(LinearDiscont3DFECollection self, mfem::Geometry::Type GeomType, int Or) -> int const *"""
        return _fe_coll.LinearDiscont3DFECollection_DofOrderForOrientation(self, GeomType, Or)
    DofOrderForOrientation = _swig_new_instance_method(_fe_coll.LinearDiscont3DFECollection_DofOrderForOrientation)

    def Name(self):
        r"""Name(LinearDiscont3DFECollection self) -> char const *"""
        return _fe_coll.LinearDiscont3DFECollection_Name(self)
    Name = _swig_new_instance_method(_fe_coll.LinearDiscont3DFECollection_Name)

    def GetContType(self):
        r"""GetContType(LinearDiscont3DFECollection self) -> int"""
        return _fe_coll.LinearDiscont3DFECollection_GetContType(self)
    GetContType = _swig_new_instance_method(_fe_coll.LinearDiscont3DFECollection_GetContType)
    __swig_destroy__ = _fe_coll.delete_LinearDiscont3DFECollection

# Register LinearDiscont3DFECollection in _fe_coll:
_fe_coll.LinearDiscont3DFECollection_swigregister(LinearDiscont3DFECollection)

class QuadraticDiscont3DFECollection(FiniteElementCollection):
    r"""Proxy of C++ mfem::QuadraticDiscont3DFECollection class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(QuadraticDiscont3DFECollection self) -> QuadraticDiscont3DFECollection"""
        _fe_coll.QuadraticDiscont3DFECollection_swiginit(self, _fe_coll.new_QuadraticDiscont3DFECollection())

    def FiniteElementForGeometry(self, GeomType):
        r"""FiniteElementForGeometry(QuadraticDiscont3DFECollection self, mfem::Geometry::Type GeomType) -> FiniteElement"""
        return _fe_coll.QuadraticDiscont3DFECollection_FiniteElementForGeometry(self, GeomType)
    FiniteElementForGeometry = _swig_new_instance_method(_fe_coll.QuadraticDiscont3DFECollection_FiniteElementForGeometry)

    def DofForGeometry(self, GeomType):
        r"""DofForGeometry(QuadraticDiscont3DFECollection self, mfem::Geometry::Type GeomType) -> int"""
        return _fe_coll.QuadraticDiscont3DFECollection_DofForGeometry(self, GeomType)
    DofForGeometry = _swig_new_instance_method(_fe_coll.QuadraticDiscont3DFECollection_DofForGeometry)

    def DofOrderForOrientation(self, GeomType, Or):
        r"""DofOrderForOrientation(QuadraticDiscont3DFECollection self, mfem::Geometry::Type GeomType, int Or) -> int const *"""
        return _fe_coll.QuadraticDiscont3DFECollection_DofOrderForOrientation(self, GeomType, Or)
    DofOrderForOrientation = _swig_new_instance_method(_fe_coll.QuadraticDiscont3DFECollection_DofOrderForOrientation)

    def Name(self):
        r"""Name(QuadraticDiscont3DFECollection self) -> char const *"""
        return _fe_coll.QuadraticDiscont3DFECollection_Name(self)
    Name = _swig_new_instance_method(_fe_coll.QuadraticDiscont3DFECollection_Name)

    def GetContType(self):
        r"""GetContType(QuadraticDiscont3DFECollection self) -> int"""
        return _fe_coll.QuadraticDiscont3DFECollection_GetContType(self)
    GetContType = _swig_new_instance_method(_fe_coll.QuadraticDiscont3DFECollection_GetContType)
    __swig_destroy__ = _fe_coll.delete_QuadraticDiscont3DFECollection

# Register QuadraticDiscont3DFECollection in _fe_coll:
_fe_coll.QuadraticDiscont3DFECollection_swigregister(QuadraticDiscont3DFECollection)

class RefinedLinearFECollection(FiniteElementCollection):
    r"""Proxy of C++ mfem::RefinedLinearFECollection class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(RefinedLinearFECollection self) -> RefinedLinearFECollection"""
        _fe_coll.RefinedLinearFECollection_swiginit(self, _fe_coll.new_RefinedLinearFECollection())

    def FiniteElementForGeometry(self, GeomType):
        r"""FiniteElementForGeometry(RefinedLinearFECollection self, mfem::Geometry::Type GeomType) -> FiniteElement"""
        return _fe_coll.RefinedLinearFECollection_FiniteElementForGeometry(self, GeomType)
    FiniteElementForGeometry = _swig_new_instance_method(_fe_coll.RefinedLinearFECollection_FiniteElementForGeometry)

    def DofForGeometry(self, GeomType):
        r"""DofForGeometry(RefinedLinearFECollection self, mfem::Geometry::Type GeomType) -> int"""
        return _fe_coll.RefinedLinearFECollection_DofForGeometry(self, GeomType)
    DofForGeometry = _swig_new_instance_method(_fe_coll.RefinedLinearFECollection_DofForGeometry)

    def DofOrderForOrientation(self, GeomType, Or):
        r"""DofOrderForOrientation(RefinedLinearFECollection self, mfem::Geometry::Type GeomType, int Or) -> int const *"""
        return _fe_coll.RefinedLinearFECollection_DofOrderForOrientation(self, GeomType, Or)
    DofOrderForOrientation = _swig_new_instance_method(_fe_coll.RefinedLinearFECollection_DofOrderForOrientation)

    def Name(self):
        r"""Name(RefinedLinearFECollection self) -> char const *"""
        return _fe_coll.RefinedLinearFECollection_Name(self)
    Name = _swig_new_instance_method(_fe_coll.RefinedLinearFECollection_Name)

    def GetContType(self):
        r"""GetContType(RefinedLinearFECollection self) -> int"""
        return _fe_coll.RefinedLinearFECollection_GetContType(self)
    GetContType = _swig_new_instance_method(_fe_coll.RefinedLinearFECollection_GetContType)
    __swig_destroy__ = _fe_coll.delete_RefinedLinearFECollection

# Register RefinedLinearFECollection in _fe_coll:
_fe_coll.RefinedLinearFECollection_swigregister(RefinedLinearFECollection)

class ND1_3DFECollection(FiniteElementCollection):
    r"""Proxy of C++ mfem::ND1_3DFECollection class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(ND1_3DFECollection self) -> ND1_3DFECollection"""
        _fe_coll.ND1_3DFECollection_swiginit(self, _fe_coll.new_ND1_3DFECollection())

    def FiniteElementForGeometry(self, GeomType):
        r"""FiniteElementForGeometry(ND1_3DFECollection self, mfem::Geometry::Type GeomType) -> FiniteElement"""
        return _fe_coll.ND1_3DFECollection_FiniteElementForGeometry(self, GeomType)
    FiniteElementForGeometry = _swig_new_instance_method(_fe_coll.ND1_3DFECollection_FiniteElementForGeometry)

    def DofForGeometry(self, GeomType):
        r"""DofForGeometry(ND1_3DFECollection self, mfem::Geometry::Type GeomType) -> int"""
        return _fe_coll.ND1_3DFECollection_DofForGeometry(self, GeomType)
    DofForGeometry = _swig_new_instance_method(_fe_coll.ND1_3DFECollection_DofForGeometry)

    def DofOrderForOrientation(self, GeomType, Or):
        r"""DofOrderForOrientation(ND1_3DFECollection self, mfem::Geometry::Type GeomType, int Or) -> int const *"""
        return _fe_coll.ND1_3DFECollection_DofOrderForOrientation(self, GeomType, Or)
    DofOrderForOrientation = _swig_new_instance_method(_fe_coll.ND1_3DFECollection_DofOrderForOrientation)

    def Name(self):
        r"""Name(ND1_3DFECollection self) -> char const *"""
        return _fe_coll.ND1_3DFECollection_Name(self)
    Name = _swig_new_instance_method(_fe_coll.ND1_3DFECollection_Name)

    def GetContType(self):
        r"""GetContType(ND1_3DFECollection self) -> int"""
        return _fe_coll.ND1_3DFECollection_GetContType(self)
    GetContType = _swig_new_instance_method(_fe_coll.ND1_3DFECollection_GetContType)
    __swig_destroy__ = _fe_coll.delete_ND1_3DFECollection

# Register ND1_3DFECollection in _fe_coll:
_fe_coll.ND1_3DFECollection_swigregister(ND1_3DFECollection)

class RT0_3DFECollection(FiniteElementCollection):
    r"""Proxy of C++ mfem::RT0_3DFECollection class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(RT0_3DFECollection self) -> RT0_3DFECollection"""
        _fe_coll.RT0_3DFECollection_swiginit(self, _fe_coll.new_RT0_3DFECollection())

    def FiniteElementForGeometry(self, GeomType):
        r"""FiniteElementForGeometry(RT0_3DFECollection self, mfem::Geometry::Type GeomType) -> FiniteElement"""
        return _fe_coll.RT0_3DFECollection_FiniteElementForGeometry(self, GeomType)
    FiniteElementForGeometry = _swig_new_instance_method(_fe_coll.RT0_3DFECollection_FiniteElementForGeometry)

    def DofForGeometry(self, GeomType):
        r"""DofForGeometry(RT0_3DFECollection self, mfem::Geometry::Type GeomType) -> int"""
        return _fe_coll.RT0_3DFECollection_DofForGeometry(self, GeomType)
    DofForGeometry = _swig_new_instance_method(_fe_coll.RT0_3DFECollection_DofForGeometry)

    def DofOrderForOrientation(self, GeomType, Or):
        r"""DofOrderForOrientation(RT0_3DFECollection self, mfem::Geometry::Type GeomType, int Or) -> int const *"""
        return _fe_coll.RT0_3DFECollection_DofOrderForOrientation(self, GeomType, Or)
    DofOrderForOrientation = _swig_new_instance_method(_fe_coll.RT0_3DFECollection_DofOrderForOrientation)

    def Name(self):
        r"""Name(RT0_3DFECollection self) -> char const *"""
        return _fe_coll.RT0_3DFECollection_Name(self)
    Name = _swig_new_instance_method(_fe_coll.RT0_3DFECollection_Name)

    def GetContType(self):
        r"""GetContType(RT0_3DFECollection self) -> int"""
        return _fe_coll.RT0_3DFECollection_GetContType(self)
    GetContType = _swig_new_instance_method(_fe_coll.RT0_3DFECollection_GetContType)
    __swig_destroy__ = _fe_coll.delete_RT0_3DFECollection

# Register RT0_3DFECollection in _fe_coll:
_fe_coll.RT0_3DFECollection_swigregister(RT0_3DFECollection)

class RT1_3DFECollection(FiniteElementCollection):
    r"""Proxy of C++ mfem::RT1_3DFECollection class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(RT1_3DFECollection self) -> RT1_3DFECollection"""
        _fe_coll.RT1_3DFECollection_swiginit(self, _fe_coll.new_RT1_3DFECollection())

    def FiniteElementForGeometry(self, GeomType):
        r"""FiniteElementForGeometry(RT1_3DFECollection self, mfem::Geometry::Type GeomType) -> FiniteElement"""
        return _fe_coll.RT1_3DFECollection_FiniteElementForGeometry(self, GeomType)
    FiniteElementForGeometry = _swig_new_instance_method(_fe_coll.RT1_3DFECollection_FiniteElementForGeometry)

    def DofForGeometry(self, GeomType):
        r"""DofForGeometry(RT1_3DFECollection self, mfem::Geometry::Type GeomType) -> int"""
        return _fe_coll.RT1_3DFECollection_DofForGeometry(self, GeomType)
    DofForGeometry = _swig_new_instance_method(_fe_coll.RT1_3DFECollection_DofForGeometry)

    def DofOrderForOrientation(self, GeomType, Or):
        r"""DofOrderForOrientation(RT1_3DFECollection self, mfem::Geometry::Type GeomType, int Or) -> int const *"""
        return _fe_coll.RT1_3DFECollection_DofOrderForOrientation(self, GeomType, Or)
    DofOrderForOrientation = _swig_new_instance_method(_fe_coll.RT1_3DFECollection_DofOrderForOrientation)

    def Name(self):
        r"""Name(RT1_3DFECollection self) -> char const *"""
        return _fe_coll.RT1_3DFECollection_Name(self)
    Name = _swig_new_instance_method(_fe_coll.RT1_3DFECollection_Name)

    def GetContType(self):
        r"""GetContType(RT1_3DFECollection self) -> int"""
        return _fe_coll.RT1_3DFECollection_GetContType(self)
    GetContType = _swig_new_instance_method(_fe_coll.RT1_3DFECollection_GetContType)
    __swig_destroy__ = _fe_coll.delete_RT1_3DFECollection

# Register RT1_3DFECollection in _fe_coll:
_fe_coll.RT1_3DFECollection_swigregister(RT1_3DFECollection)

class Local_FECollection(FiniteElementCollection):
    r"""Proxy of C++ mfem::Local_FECollection class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, fe_name):
        r"""__init__(Local_FECollection self, char const * fe_name) -> Local_FECollection"""
        _fe_coll.Local_FECollection_swiginit(self, _fe_coll.new_Local_FECollection(fe_name))

    def FiniteElementForGeometry(self, _GeomType):
        r"""FiniteElementForGeometry(Local_FECollection self, mfem::Geometry::Type _GeomType) -> FiniteElement"""
        return _fe_coll.Local_FECollection_FiniteElementForGeometry(self, _GeomType)
    FiniteElementForGeometry = _swig_new_instance_method(_fe_coll.Local_FECollection_FiniteElementForGeometry)

    def DofForGeometry(self, _GeomType):
        r"""DofForGeometry(Local_FECollection self, mfem::Geometry::Type _GeomType) -> int"""
        return _fe_coll.Local_FECollection_DofForGeometry(self, _GeomType)
    DofForGeometry = _swig_new_instance_method(_fe_coll.Local_FECollection_DofForGeometry)

    def DofOrderForOrientation(self, GeomType, Or):
        r"""DofOrderForOrientation(Local_FECollection self, mfem::Geometry::Type GeomType, int Or) -> int const *"""
        return _fe_coll.Local_FECollection_DofOrderForOrientation(self, GeomType, Or)
    DofOrderForOrientation = _swig_new_instance_method(_fe_coll.Local_FECollection_DofOrderForOrientation)

    def Name(self):
        r"""Name(Local_FECollection self) -> char const *"""
        return _fe_coll.Local_FECollection_Name(self)
    Name = _swig_new_instance_method(_fe_coll.Local_FECollection_Name)
    __swig_destroy__ = _fe_coll.delete_Local_FECollection

    def GetContType(self):
        r"""GetContType(Local_FECollection self) -> int"""
        return _fe_coll.Local_FECollection_GetContType(self)
    GetContType = _swig_new_instance_method(_fe_coll.Local_FECollection_GetContType)

# Register Local_FECollection in _fe_coll:
_fe_coll.Local_FECollection_swigregister(Local_FECollection)


DG_FECollection = L2_FECollection



