(self.webpackChunk_system_dynamics_jupyter_widget=self.webpackChunk_system_dynamics_jupyter_widget||[]).push([[384],{85384:(e,t,i)=>{"use strict";i.r(t),i.d(t,{WIDGET_VIEW_MIMETYPE:()=>y,default:()=>h});var s=i(75994),n=i(80629),r=i(52683),o=i(43222),a=i(27166),c=i(89640),l=i(64425),d=i(44276),m=i(66510);class p extends m.Panel{constructor(e){super(),this.mimeType=e.mimeType}async renderModel(e){const t=e.data[this.mimeType],i=t.project_id;let s,n=t.project_source;if(i.endsWith(".mdl")){n=await(0,l.convertMdlToXmile)((0,d.Gh)(n),!1);const e=await(0,c.fromXmile)(n);s=o.IK.deserializeBinary(e)}else if(i.endsWith(".stmx")||i.endsWith(".xmile")){const e=await(0,c.fromXmile)((0,d.Gh)(n));s=o.IK.deserializeBinary(e)}else s=o.IK.deserializeBase64(n);const[r]=await(0,a.renderSvgToString)(s,"main");console.log("woooomp"),this.node.innerHTML=r,""!==t.model_id||this.hide()}dispose(){super.dispose()}}const y="application/vnd.simlin.widget-view+json",h={id:"jupyter-simlin:plugin",autoStart:!0,activate:(e,t)=>{(async function(e=""){const t=r.ServerConnection.makeSettings(),i=n.URLExt.join(t.baseUrl,"jupyter-simlin",e);let s;try{s=await r.ServerConnection.makeRequest(i,{},t)}catch(e){throw new r.ServerConnection.NetworkError(e)}let o=await s.text();if(o.length>0)try{o=JSON.parse(o)}catch(e){console.log("Not a JSON response body.",s)}if(!s.ok)throw new r.ServerConnection.ResponseError(s,o.message||o);return o})("get_example").then((e=>{console.log(e)})).catch((e=>{console.error(`:ohno: jupyter-simlin server extension appears to be missing.\n${e}`)})),t.addFactory({safe:!1,mimeTypes:[y],createRenderer:e=>new p(e)},0)},requires:[s.IRenderMimeRegistry]}}}]);