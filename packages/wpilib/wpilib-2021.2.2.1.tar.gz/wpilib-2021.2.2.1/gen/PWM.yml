---

extra_includes:
- frc/smartdashboard/SendableBuilder.h
- frc/AddressableLED.h
- wpi/SmallString.h

classes:
  PWM:
    shared_ptr: true
    ignored_bases:
    - SendableHelper<PWM>
    force_type_casters:
    - wpi::StringRef
    enums:
      PeriodMultiplier:
    methods:
      PWM:
      StopMotor:
      GetDescription:
        param_override:
          desc:
            ignore: true
        cpp_code: |
          [](PWM * self) -> py::str {
            wpi::SmallString<128> buf;
            wpi::raw_svector_ostream s(buf);
            self->GetDescription(s);
            return py::cast(s.str());
          }
        virtual_xform: |
          [&](py::function &overload) {
            desc << py::cast<std::string>(overload());
          }
      SetRaw:
      GetRaw:
      SetPosition:
      GetPosition:
      SetSpeed:
      GetSpeed:
      SetDisabled:
      SetPeriodMultiplier:
      SetZeroLatch:
      EnableDeadbandElimination:
      SetBounds:
      SetRawBounds:
      GetRawBounds:
      GetChannel:
      InitSendable:

inline_code: |
  cls_PWM
    .def("__repr__", [](py::handle self) {
      py::object type_name = self.get_type().attr("__qualname__");
      int channel = self.cast<PWM&>().GetChannel();
      return py::str("<{} {}>").format(type_name, channel);
    });
