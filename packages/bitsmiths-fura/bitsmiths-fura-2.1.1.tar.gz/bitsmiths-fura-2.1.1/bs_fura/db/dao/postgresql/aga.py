# This file was generated by mettle.genes.db.GenPy3 [ver 2.1] on Tue Feb 16 18:30:45 2021
#  Target Database = postgresql
#
import asyncio
import copy
import datetime
import uuid
import time
import mettle.lib
import mettle.io
import mettle.db

from bs_fura.db.tables.aga import tAga

from .aga_insert import dAgaInsert

class dAga:

    def __init__(self, dbcon: mettle.db.IConnect):
        """
        Constructor.

        :param dbcon: Mettle database connection object.
        """
        self.rec    = tAga()
        self._dbcon = dbcon

    def __enter__(self):
        """
        DAO enter.
        """
        return self

    def __exit__(self, type, value, traceback):
        """
        DAO exit.
        """
        pass

    def insert_deft(self,
                    site_id: int,
                    site_code: str,
                    tm_stamp: datetime.datetime,
                    usr_id: str,
                    eausr_id: str,
                    role_id: str,
                    func_id: str,
                    action: str,
                    src: str):
        """
        Insert the record setting all column values.

        :param site_id: int
        :param site_code: str
        :param tm_stamp: datetime.datetime
        :param usr_id: str
        :param eausr_id: str
        :param role_id: str
        :param func_id: str
        :param action: str
        :param src: str
        """
        self.rec.site_id = site_id
        self.rec.site_code = site_code
        self.rec.tm_stamp = tm_stamp
        self.rec.usr_id = usr_id
        self.rec.eausr_id = eausr_id
        self.rec.role_id = role_id
        self.rec.func_id = func_id
        self.rec.action = action
        self.rec.src = src

        self.insert()

    def insert(self, irec: tAga = None):
        """
        Insert the record in the database with the record or irec if it is not None.

        :param irec: If not None use this record to insert into the database.
        """
        if irec:
            self.rec._copy_from(irec)

        with dAgaInsert(self._dbcon) as _qry:
            _qry.exec(self.rec)

        if irec:
            irec._copy_from(self.rec)

