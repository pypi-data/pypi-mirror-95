//
//  Copyright (c) 2018-2021 Renesas Inc.
//  Copyright (c) 2018-2021 EPAM Systems Inc.
//

syntax = "proto3";

option go_package = "gitpct.epam.com/epmd-aepr/aos_common/api/iamanager";

import "google/protobuf/empty.proto";

package iamanager;

service IAManager {
    rpc GetCertTypes(google.protobuf.Empty) returns (GetCertTypesRsp) {}
    rpc FinishProvisioning(google.protobuf.Empty) returns (google.protobuf.Empty) {}
    rpc Clear(ClearReq) returns (google.protobuf.Empty) {}
    rpc SetOwner(SetOwnerReq) returns (google.protobuf.Empty) {}
    rpc CreateKey(CreateKeyReq) returns (CreateKeyRsp) {}
    rpc ApplyCert(ApplyCertReq) returns (ApplyCertRsp) {}
    rpc GetCert(GetCertReq) returns (GetCertRsp) {}
    rpc GetSystemInfo(google.protobuf.Empty) returns (GetSystemInfoRsp) {}
    rpc SetUsers(SetUsersReq) returns (google.protobuf.Empty) {}
    rpc GetUsers(google.protobuf.Empty) returns (GetUsersRsp) {}
    rpc SubscribeUsersChanged(google.protobuf.Empty) returns (stream UsersChangedNtf) {}
}

message GetCertTypesRsp {
    repeated string types = 1;
}

message ClearReq {
    string type = 1;
}

message SetOwnerReq {
    string type = 1;
    string password = 2;
}

message CreateKeyReq {
    string type = 1;
    string password = 2;
}

message CreateKeyRsp {
    string type = 1;
    string csr = 2;
}

message ApplyCertReq {
    string type = 1;
    string cert = 2;
}

message ApplyCertRsp {
    string type = 1;
    string cert_url = 2;
}

message GetCertReq {
    string type = 1;
    bytes issuer = 2;
    string serial = 3;
}

message GetCertRsp {
    string type = 1;
    string cert_url = 2;
    string key_url = 3;
}

message GetSystemInfoRsp {
    string system_id = 1;
    string board_model = 2;
}

message SetUsersReq {
    repeated string users = 1;
}

message GetUsersRsp {
    repeated string users = 1;
}

message UsersChangedNtf {
    repeated string users = 1;
}