<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="xs3p/xs3p.xsl"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsd="http://www.w3.org/2001/XMLSchema">

  <xs:element name="domain">
    <xs:annotation>
      <xs:documentation>The domain element is the root element of the document.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="goal" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="parameters" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="default_question" type="has_question" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="dependency" minOccurs="0" maxOccurs="unbounded"/>
      </xs:choice>
      <xs:attribute name="name" type="xs:string" use="required"/>
      <xs:attribute name="is_super_domain" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>

  <xs:element name="goal">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="has_goal">
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="plan" type="plan" minOccurs="0" maxOccurs="1"/>
            <xs:element name="postcond" type="proposition" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="downdate_condition" type="condition" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="postplan" type="plan" minOccurs="0" maxOccurs="1"/>
            <xs:element name="proposition" type="proposition" minOccurs="0" maxOccurs="1"/>
            <xs:element name="preferred" type="proposition" minOccurs="0" maxOccurs="1"/>
            <xs:element ref="superaction" minOccurs="0" maxOccurs="unbounded"/>
          </xs:choice>
          <xs:attribute name="accommodate_without_feedback" type="xs:boolean"/>
          <xs:attribute name="io_status" type="io_status_type"/>
          <xs:attribute name="reraise_on_resume" type="xs:boolean"/>
          <xs:attribute name="restart_on_completion" type="xs:boolean"/>
          <xs:attribute name="max_answers" type="xs:integer"/>
          <xs:attribute name="alternatives_predicate" type="xs:string"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:complexType name="has_goal">
    <xs:attribute name="action" type="xs:string"/>
    <xs:attribute name="question_type" type="question_type"/>
    <xs:attribute name="predicate" type="xs:string"/>
    <xs:attribute name="type">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="perform"/>
          <xs:enumeration value="resolve"/>
          <xs:enumeration value="handle"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

  <xs:element name="log">
    <xs:complexType>
      <xs:attribute name="message" type="xs:string" use="required"/>
    </xs:complexType>
  </xs:element>

  <xs:complexType name="plan">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="forget" type="proposition" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="forget_all" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="log" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="invoke_service_query" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="findout" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="raise" type="has_question" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="bind" type="has_question" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="invoke_service_action" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="get_done" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="dev_perform" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="dev_query" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="assume_issue" type="has_question" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="assume_shared" type="has_predicate_proposition"
                  minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="assume_system_belief" type="has_predicate_proposition"
                  minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="inform" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="if" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="jumpto" type="has_goal" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="signal_action_completion" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="signal_action_failure" minOccurs="0" maxOccurs="unbounded"/>
    </xs:choice>
  </xs:complexType>

  <xs:element name="findout">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="has_question">
          <xs:attribute name="allow_answer_from_pcom" type="xs:boolean"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>


  <xs:element name="invoke_service_query">
    <xs:annotation>
      <xs:documentation xml:lang="en">
        Note: The attribute 'device' is not supported. Use 'service_interface.xml' instead.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="has_question">
          <xs:attribute name="device" type="xs:string"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="dev_query">
    <xs:annotation>
      <xs:documentation xml:lang="en">
        This element is deprecated, use the invoke_service_query element instead.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="has_question">
          <xs:attribute name="device" type="xs:string"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="inform">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="has_predicate_proposition">
          <xs:attribute name="insist" type="xs:boolean" use="optional"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="if">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="condition" type="proposition"/>
        <xs:element name="then" type="plan" minOccurs="0" maxOccurs="1"/>
        <xs:element name="else" type="plan" minOccurs="0" maxOccurs="1"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:element name="invoke_service_action">
    <xs:annotation>
      <xs:documentation xml:lang="en">
        Note: The attribute 'device' is not supported. Use 'service_interface.xml' instead.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attribute name="name" type="xs:string" use="required"/>
      <xs:attribute name="preconfirm" type="preconfirm"/>
      <xs:attribute name="postconfirm" type="xs:boolean"/>
      <xs:attribute name="downdate_plan" type="xs:boolean" default="true"/>
      <xs:attribute name="device" type="xs:string"/>
    </xs:complexType>
  </xs:element>

  <xs:element name="get_done">
    <xs:annotation>
      <xs:documentation xml:lang="en">
        This is for getting actions done in general, also by users
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attribute name="action" type="xs:string" use="required"/>
      <xs:attribute name="step" type="xs:integer" use="optional"/>
    </xs:complexType>
  </xs:element>

  <xs:element name="dev_perform">
    <xs:annotation>
      <xs:documentation xml:lang="en">
        This element is deprecated, use the invoke_service_action element instead.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attribute name="action" type="xs:string" use="required"/>
      <xs:attribute name="device" type="xs:string"/>
      <xs:attribute name="preconfirm" type="preconfirm"/>
      <xs:attribute name="postconfirm" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>

  <xs:simpleType name="preconfirm">
    <xs:restriction base="xs:string">
      <xs:enumeration value="assertive"/>
      <xs:enumeration value="interrogative"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="has_question">
    <xs:complexContent>
      <xs:extension base="proposition">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element name="alt" type="proposition"/>
        </xs:choice>
        <xs:attribute name="type" type="question_type"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="has_inner_question">
    <xs:attribute name="question_type" type="question_type"/>
    <xs:attribute name="predicate" type="xs:string"/>
  </xs:complexType>

  <xs:simpleType name="question_type">
    <xs:restriction base="xs:string">
      <xs:enumeration value="goal"/>
      <xs:enumeration value="wh_question"/>
      <xs:enumeration value="alt_question"/>
      <xs:enumeration value="yn_question"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="has_predicate_proposition">
    <xs:all minOccurs="1" maxOccurs="1">
      <xs:element name="proposition" type="predicate_proposition"/>
    </xs:all>
    <xs:attribute name="predicate" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="condition">
    <xs:choice minOccurs="1" maxOccurs="1">
      <xs:element ref="has_value"/>
      <xs:element name="is_shared_fact"/>
    </xs:choice>
  </xs:complexType>

  <xs:element name="has_value">
    <xs:complexType>
      <xs:attribute name="predicate" type="xs:string" use="required"/>
    </xs:complexType>
  </xs:element>

  <xs:element name="signal_action_failure">
    <xs:complexType>
      <xs:attribute name="reason" type="xs:string" use="required"/>
    </xs:complexType>
  </xs:element>

  <xs:complexType name="is_shared_fact">
    <xs:choice minOccurs="1" maxOccurs="1">
      <xs:element name="proposition" type="predicate_proposition"/>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="proposition">
    <xs:choice minOccurs="0" maxOccurs="1">
      <xs:element ref="perform"/>
      <xs:element name="resolve" type="has_question"/>
      <xs:element name="proposition" type="predicate_proposition"/>
    </xs:choice>
    <xs:attribute name="predicate" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="predicate_proposition">
    <xs:attribute name="predicate" type="xs:string" use="required"/>
    <xs:attribute name="value" type="xs:string"/>
  </xs:complexType>

  <xs:element name="dependency">
    <xs:complexType>
      <xs:choice minOccurs="1" maxOccurs="1">
        <xs:element name="question" type="question"/>
      </xs:choice>
      <xs:attribute name="type" type="question_type"/>
      <xs:attribute name="predicate" type="xs:string"/>
    </xs:complexType>
  </xs:element>

  <xs:complexType name="question">
    <xs:attribute name="type" type="question_type"/>
    <xs:attribute name="predicate" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:element name="perform">
    <xs:complexType>
      <xs:attribute name="action" type="xs:string"/>
    </xs:complexType>
  </xs:element>

  <xs:element name="parameters">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="has_inner_question">
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="service_query" type="has_question" minOccurs="0" maxOccurs="1"/>
            <xs:element name="alt" type="proposition" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="background" minOccurs="0" maxOccurs="unbounded">
              <xs:complexType>
                <xs:attribute name="predicate" type="xs:string" use="required"/>
              </xs:complexType>
            </xs:element>
            <xs:element name="ask_feature" minOccurs="0" maxOccurs="unbounded">
              <xs:complexType>
                <xs:attribute name="predicate" type="xs:string" use="required"/>
                <xs:attribute name="kpq" type="xs:boolean"/>
              </xs:complexType>
            </xs:element>
            <xs:element name="hint" minOccurs="0" maxOccurs="unbounded">
              <xs:complexType>
                <xs:all minOccurs="1" maxOccurs="1">
                  <xs:element ref="inform"/>
                </xs:all>
              </xs:complexType>
            </xs:element>
            <xs:element name="resolve" type="has_question" minOccurs="0" maxOccurs="1"/>
            <xs:element ref="perform" minOccurs="0" maxOccurs="1"/>
            <xs:element name="related_information" type="has_question" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="default" minOccurs="0" maxOccurs="1">
              <xs:complexType>
                <xs:complexContent>
                  <xs:extension base="has_question"/>
                </xs:complexContent>
              </xs:complexType>
            </xs:element>
          </xs:choice>

          <xs:attribute name="verbalize" type="xs:boolean"/>
          <xs:attribute name="incremental" type="xs:boolean"/>
          <xs:attribute name="allow_goal_accommodation" type="xs:boolean"/>
          <xs:attribute name="always_ground" type="xs:boolean"/>

          <xs:attribute name="max_spoken_alts">
            <xs:simpleType>
               <xs:restriction base="xs:integer">
                 <xs:minInclusive value="1"/>
               </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute name="max_reported_hit_count">
            <xs:simpleType>
               <xs:restriction base="xs:integer">
                 <xs:minInclusive value="1"/>
               </xs:restriction>
            </xs:simpleType>
          </xs:attribute>

          <xs:attribute name="graphical_type">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="list"/>
                <xs:enumeration value="text"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>

          <xs:attribute name="source">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="domain"/>
                <xs:enumeration value="service"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>

          <xs:attribute name="sort_order">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="alphabetic"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>

        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="superaction">
    <xs:complexType>
      <xs:attribute name="name" type="xs:string" use="required"/>
    </xs:complexType>
  </xs:element>

  <xs:simpleType name="io_status_type">
    <xs:restriction base="xs:string">
      <xs:enumeration value="default"/>
      <xs:enumeration value="excluded"/>
      <xs:enumeration value="hidden"/>
      <xs:enumeration value="silent"/>
      <xs:enumeration value="disabled"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>
