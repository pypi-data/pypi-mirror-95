{"version":3,"sources":["webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/components/sentryDocumentTitle.tsx","webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/views/settings/project/permissionAlert.tsx","webpack:///./app/components/links/linkWithConfirmation.tsx","webpack:///./app/data/forms/inboundFilters.tsx","webpack:///./app/views/settings/project/projectFilters/groupTombstones.tsx","webpack:///./app/views/settings/project/projectFilters/projectFiltersChart.tsx","webpack:///./app/views/settings/project/projectFilters/projectFiltersSettings.tsx","webpack:///./app/views/settings/project/projectFilters/index.tsx"],"names":["UnstyledSettingsPageHeader","this","props","icon","title","subtitle","action","tabs","noTitleStyles","body","isNarrow","TitleAndActions","TitleWrapper","Icon","Title","styled","Subtitle","Action","BodyWrapper","TabsWrapper","React","Component","defaultProps","p","space","theme","gray400","fontSizeLarge","SettingsPageHeader","SentryDocumentTitle","_title","objSlug","children","recreateRoute","to","options","lastRootIndex","routeIndex","routes","params","location","stepBack","paths","map","path","indexOf","findLastIndex","slice","baseRoute","search","hash","fullRoute","join","replaceRouterParams","PermissionAlert","access","hasAccess","type","size","t","LinkWithConfirmation","className","disabled","otherProps","href","classNames","PureComponent","route","newLineHelpText","globHelpText","tct","link","getOptionsData","data","formGroups","fields","name","multiline","autosize","maxRows","placeholder","label","help","Fragment","getData","customFilterFields","GroupTombstoneRow","onUndiscard","actor","alignItems","StyledBox","includeLink","hideIcons","AvatarContainer","user","hasTooltip","tooltip","email","ActionContainer","message","onConfirm","id","GroupTombstones","handleUndiscard","tombstoneId","orgId","projectId","api","requestPromise","method","then","addSuccessMessage","fetchData","addErrorMessage","paginate","state","tombstones","tombstonesPageLinks","length","key","pageLinks","renderEmpty","AsyncComponent","STAT_OPS","color","gray200","cors","orange400","purple300","blue300","red200","localhost","purple200","red300","ProjectFiltersChart","loading","error","statsError","formattedData","blankStats","getFilterStats","prevProps","project","rawData","seriesWithData","Set","Object","keys","stat","timestamp","value","add","setState","seriesName","filter","series","has","statOptions","until","Math","floor","Date","getTime","since","statEndpoint","slug","query","resolution","requests","assign","Promise","all","results","rawStatsData","i","formatData","isLoading","hasError","hasLoaded","colors","undefined","withPadding","height","onRetry","isGroupedByDate","stacked","labelYAxisExtents","description","withApi","LEGACY_BROWSER_SUBFILTERS","ie_pre_9","helpText","ie9","ie10","ie11","safari_pre_6","opera_pre_15","opera_mini_pre_8","android_pre_4","LEGACY_BROWSER_KEYS","LegacyBrowserFilterRow","initialSubfilters","handleToggleSubfilters","subfilter","e","subfilters","onToggle","active","BulkFilter","BulkFilterLabel","BulkFilterItem","onClick","bind","FilterGrid","FilterGridItemWrapper","FilterGridItem","FilterItem","FilterGridIcon","FilterTitle","FilterDescription","isActive","isDisabled","css","toggle","ProjectFiltersSettings","handleLegacyChange","onChange","onBlur","_filter","handleSubmit","response","ProjectActions","updateSuccess","renderDisabledCustomFilters","featureName","features","alert","PanelAlert","renderCustomFilters","hookName","renderDisabled","hasFeature","organization","featureProps","field","data-test-id","hooksDisabled","HookStore","get","prevState","reloadData","projectEndpoint","filtersEndpoint","filterList","fieldProps","NestedForm","apiMethod","apiEndpoint","initialData","saveOnBlur","inline","onSubmitSuccess","forms","filterGroups","renderFooter","Form","backgroundSecondary","subText","ProjectFilters","filterType","underlined","style","paddingTop"],"mappings":"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","file":"ProjectFilters.js","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {HeaderTitle} from 'app/styles/organization';\nimport space from 'app/styles/space';\n\ntype Props = {\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // The title\n  title: React.ReactNode;\n  subtitle?: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n  className?: string;\n\n  // CTA button\n  action?: React.ReactNode;\n\n  body?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass UnstyledSettingsPageHeader extends React.Component<Props> {\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {\n      icon,\n      title,\n      subtitle,\n      action,\n      tabs,\n      noTitleStyles,\n      body,\n      ...props\n    } = this.props;\n\n    // If Header is narrow, use align-items to center <Action>.\n    // Otherwise, use a fixed margin to prevent an odd alignment.\n    // This is needed as Actions could be a button or a dropdown.\n    const isNarrow = !subtitle;\n\n    return (\n      <div {...props}>\n        <TitleAndActions isNarrow={isNarrow}>\n          <TitleWrapper>\n            {icon && <Icon>{icon}</Icon>}\n            {title && (\n              <Title tabs={tabs} styled={noTitleStyles}>\n                <HeaderTitle>{title}</HeaderTitle>\n                {subtitle && <Subtitle>{subtitle}</Subtitle>}\n              </Title>\n            )}\n          </TitleWrapper>\n          {action && <Action isNarrow={isNarrow}>{action}</Action>}\n        </TitleAndActions>\n\n        {body && <BodyWrapper>{body}</BodyWrapper>}\n        {tabs && <TabsWrapper>{tabs}</TabsWrapper>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')<{isNarrow?: boolean}>`\n  display: flex;\n  align-items: ${p => (p.isNarrow ? 'center' : 'flex-start')};\n`;\nconst TitleWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p => !p.styled && `font-size: 20px; font-weight: 600;`};\n  margin: ${space(4)} ${space(2)} ${space(3)} 0;\n`;\nconst Subtitle = styled('div')`\n  color: ${p => p.theme.gray400};\n  font-weight: 400;\n  font-size: ${p => p.theme.fontSizeLarge};\n  padding: ${space(1.5)} 0 0;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{isNarrow?: boolean}>`\n  margin-top: ${p => (p.isNarrow ? '0' : space(4))};\n`;\n\nconst SettingsPageHeader = styled(UnstyledSettingsPageHeader)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nconst BodyWrapper = styled('div')`\n  flex: 1;\n  margin: 0 0 ${space(3)};\n`;\nconst TabsWrapper = styled('div')`\n  flex: 1;\n  margin: 0; /* sentry/components/navTabs has added margin */\n`;\n\nexport default SettingsPageHeader;\n","import React, {FunctionComponent} from 'react';\nimport DocumentTitle from 'react-document-title';\n\ntype DocumentTitleProps = {\n  // Main page title\n  title: string;\n  // Organization or project slug to give title some context\n  objSlug: string;\n  children?: React.ReactNode;\n};\n\nconst SentryDocumentTitle: FunctionComponent<DocumentTitleProps> = (\n  props: DocumentTitleProps\n) => {\n  const _title = `${props.title} - ${props.objSlug} - Sentry`;\n  return <DocumentTitle title={_title}>{props.children}</DocumentTitle>;\n};\n\nexport default SentryDocumentTitle;\n","import {Location} from 'history';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'app/utils/replaceRouterParams';\nimport {RouteWithName} from 'app/views/settings/components/settingsBreadcrumb/types';\n\ntype Options = {\n  routes: RouteWithName[];\n\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n  location?: Location;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(\n  to: string | RouteWithName,\n  options: Options\n): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","import React from 'react';\n\nimport Access from 'app/components/acl/access';\nimport Alert from 'app/components/alert';\nimport {IconWarning} from 'app/icons';\nimport {t} from 'app/locale';\n\ntype Props = React.ComponentPropsWithoutRef<typeof Alert> &\n  Pick<React.ComponentProps<typeof Access>, 'access'>;\n\nconst PermissionAlert = ({access = ['project:write'], ...props}: Props) => (\n  <Access access={access}>\n    {({hasAccess}) =>\n      !hasAccess && (\n        <Alert type=\"warning\" icon={<IconWarning size=\"xs\" />} {...props}>\n          {t(\n            'These settings can only be edited by users with the organization owner, manager, or admin role.'\n          )}\n        </Alert>\n      )\n    }\n  </Access>\n);\n\nexport default PermissionAlert;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport Button from 'app/components/button';\nimport Confirm from 'app/components/confirm';\n\ntype Props = {\n  message: React.ReactNode;\n  title: string;\n  onConfirm: () => void;\n  disabled?: boolean;\n  className?: string;\n  priority?: React.ComponentProps<typeof Button>['priority'];\n};\n\n/**\n * <Confirm> is a more generic version of this component\n */\nclass LinkWithConfirmation extends React.PureComponent<Props> {\n  render() {\n    const {className, disabled, title, children, ...otherProps} = this.props;\n    return (\n      <Confirm {...otherProps} disabled={disabled}>\n        <a href=\"#\" className={classNames(className || '', {disabled})} title={title}>\n          {children}\n        </a>\n      </Confirm>\n    );\n  }\n}\n\nexport default LinkWithConfirmation;\n","import React from 'react';\n\nimport ExternalLink from 'app/components/links/externalLink';\nimport {t, tct} from 'app/locale';\nimport {Field, JsonFormObject} from 'app/views/settings/components/forms/type';\n\n// Export route to make these forms searchable by label/help\nexport const route = '/settings/:orgId/projects/:projectId/filters/';\n\nconst newLineHelpText = t('Separate multiple entries with a newline.');\nconst globHelpText = tct('Allows [link:glob pattern matching].', {\n  link: <ExternalLink href=\"https://en.wikipedia.org/wiki/Glob_(programming)\" />,\n});\n\nconst getOptionsData = (data: object) => ({options: data});\n\nconst formGroups: JsonFormObject[] = [\n  {\n    // Form \"section\"/\"panel\"\n    title: t('Custom Filters'),\n    fields: [\n      {\n        name: 'filters:blacklisted_ips',\n        type: 'string',\n        multiline: true,\n        autosize: true,\n        maxRows: 10,\n\n        placeholder: 'e.g. 127.0.0.1 or 10.0.0.0/8',\n        label: t('IP Addresses'),\n        help: (\n          <React.Fragment>\n            {t('Filter events from these IP addresses. ')}\n            {newLineHelpText}\n          </React.Fragment>\n        ),\n        getData: getOptionsData,\n      },\n    ],\n  },\n];\n\nexport default formGroups;\n\n// These require a feature flag\nexport const customFilterFields: Field[] = [\n  {\n    name: 'filters:releases',\n    type: 'string',\n    multiline: true,\n    autosize: true,\n    maxRows: 10,\n\n    placeholder: 'e.g. 1.* or [!3].[0-9].*',\n    label: t('Releases'),\n    help: (\n      <React.Fragment>\n        {t('Filter events from these releases. ')}\n        {newLineHelpText} {globHelpText}\n      </React.Fragment>\n    ),\n    getData: getOptionsData,\n  },\n\n  {\n    name: 'filters:error_messages',\n    type: 'string',\n    multiline: true,\n    autosize: true,\n    maxRows: 10,\n\n    placeholder: 'e.g. TypeError* or *: integer division or modulo by zero',\n    label: t('Error Message'),\n    help: (\n      <React.Fragment>\n        {t('Filter events by error messages. ')}\n        {newLineHelpText} {globHelpText}\n      </React.Fragment>\n    ),\n    getData: getOptionsData,\n  },\n];\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport AsyncComponent from 'app/components/asyncComponent';\nimport Avatar from 'app/components/avatar';\nimport EventOrGroupHeader from 'app/components/eventOrGroupHeader';\nimport LinkWithConfirmation from 'app/components/links/linkWithConfirmation';\nimport Pagination from 'app/components/pagination';\nimport {Panel, PanelItem} from 'app/components/panels';\nimport Tooltip from 'app/components/tooltip';\nimport {IconDelete} from 'app/icons';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {GroupTombstone} from 'app/types';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\n\ntype RowProps = {\n  data: GroupTombstone;\n  onUndiscard: (id: string) => void;\n};\n\nfunction GroupTombstoneRow({data, onUndiscard}: RowProps) {\n  const actor = data.actor;\n\n  return (\n    <PanelItem alignItems=\"center\">\n      <StyledBox>\n        <EventOrGroupHeader\n          includeLink={false}\n          hideIcons\n          className=\"truncate\"\n          size=\"normal\"\n          data={data}\n        />\n      </StyledBox>\n      <AvatarContainer>\n        {actor && (\n          <Avatar\n            user={actor}\n            hasTooltip\n            tooltip={t('Discarded by %s', actor.name || actor.email)}\n          />\n        )}\n      </AvatarContainer>\n      <ActionContainer>\n        <Tooltip title={t('Undiscard')}>\n          <LinkWithConfirmation\n            title={t('Undiscard')}\n            className=\"group-remove btn btn-default btn-sm\"\n            message={t(\n              'Undiscarding this issue means that ' +\n                'incoming events that match this will no longer be discarded. ' +\n                'New incoming events will count toward your event quota ' +\n                'and will display on your issues dashboard. ' +\n                'Are you sure you wish to continue?'\n            )}\n            onConfirm={() => {\n              onUndiscard(data.id);\n            }}\n          >\n            <IconDelete className=\"undiscard\" />\n          </LinkWithConfirmation>\n        </Tooltip>\n      </ActionContainer>\n    </PanelItem>\n  );\n}\n\ntype Props = AsyncComponent['props'] & {\n  orgId: string;\n  projectId: string;\n};\n\ntype State = {\n  tombstones: GroupTombstone[];\n  tombstonesPageLinks: null | string;\n} & AsyncComponent['state'];\n\nclass GroupTombstones extends AsyncComponent<Props, State> {\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {orgId, projectId} = this.props;\n    return [\n      ['tombstones', `/projects/${orgId}/${projectId}/tombstones/`, {}, {paginate: true}],\n    ];\n  }\n\n  handleUndiscard = (tombstoneId: GroupTombstone['id']) => {\n    const {orgId, projectId} = this.props;\n    const path = `/projects/${orgId}/${projectId}/tombstones/${tombstoneId}/`;\n    this.api\n      .requestPromise(path, {\n        method: 'DELETE',\n      })\n      .then(() => {\n        addSuccessMessage(t('Events similar to these will no longer be filtered'));\n        this.fetchData();\n      })\n      .catch(() => {\n        addErrorMessage(t('We were unable to undiscard this issue'));\n        this.fetchData();\n      });\n  };\n\n  renderEmpty() {\n    return (\n      <Panel>\n        <EmptyMessage>{t('You have no discarded issues')}</EmptyMessage>\n      </Panel>\n    );\n  }\n\n  renderBody() {\n    const {tombstones, tombstonesPageLinks} = this.state;\n\n    return tombstones.length ? (\n      <React.Fragment>\n        <Panel>\n          {tombstones.map(data => (\n            <GroupTombstoneRow\n              key={data.id}\n              data={data}\n              onUndiscard={this.handleUndiscard}\n            />\n          ))}\n        </Panel>\n        {tombstonesPageLinks && <Pagination pageLinks={tombstonesPageLinks} />}\n      </React.Fragment>\n    ) : (\n      this.renderEmpty()\n    );\n  }\n}\n\nconst StyledBox = styled('div')`\n  flex: 1;\n  align-items: center;\n  min-width: 0; /* keep child content from stretching flex item */\n`;\n\nconst AvatarContainer = styled('div')`\n  margin: 0 ${space(4)};\n  width: ${space(3)};\n`;\n\nconst ActionContainer = styled('div')`\n  width: ${space(4)};\n`;\n\nexport default GroupTombstones;\n","import React from 'react';\n\nimport {Client} from 'app/api';\nimport MiniBarChart from 'app/components/charts/miniBarChart';\nimport LoadingError from 'app/components/loadingError';\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport Placeholder from 'app/components/placeholder';\nimport {t} from 'app/locale';\nimport {Project} from 'app/types';\nimport {Series} from 'app/types/echarts';\nimport theme from 'app/utils/theme';\nimport withApi from 'app/utils/withApi';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\n\ntype Props = {\n  api: Client;\n  project: Project;\n  params: {orgId: string; projectId: string};\n};\n\ntype State = {\n  loading: boolean;\n  error: boolean;\n  statsError: boolean;\n  formattedData: Series[];\n  blankStats: boolean;\n};\n\ntype RawStats = Record<string, [timestamp: number, value: number][]>;\n\nconst STAT_OPS = {\n  'browser-extensions': {title: t('Browser Extension'), color: theme.gray200},\n  cors: {title: 'CORS', color: theme.orange400},\n  'error-message': {title: t('Error Message'), color: theme.purple300},\n  'discarded-hash': {title: t('Discarded Issue'), color: theme.gray200},\n  'invalid-csp': {title: t('Invalid CSP'), color: theme.blue300},\n  'ip-address': {title: t('IP Address'), color: theme.red200},\n  'legacy-browsers': {title: t('Legacy Browser'), color: theme.gray200},\n  localhost: {title: t('Localhost'), color: theme.blue300},\n  'release-version': {title: t('Release'), color: theme.purple200},\n  'web-crawlers': {title: t('Web Crawler'), color: theme.red300},\n};\n\nclass ProjectFiltersChart extends React.Component<Props, State> {\n  state: State = {\n    loading: true,\n    error: false,\n    statsError: false,\n    formattedData: [],\n    blankStats: true,\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.project !== this.props.project) {\n      this.fetchData();\n    }\n  }\n\n  formatData(rawData: RawStats) {\n    const seriesWithData: Set<string> = new Set();\n    const transformed = Object.keys(STAT_OPS).map(stat => ({\n      data: rawData[stat].map(([timestamp, value]) => {\n        if (value > 0) {\n          seriesWithData.add(STAT_OPS[stat].title);\n          this.setState({blankStats: false});\n        }\n        return {name: timestamp * 1000, value};\n      }),\n      seriesName: STAT_OPS[stat].title,\n      color: STAT_OPS[stat].color,\n    }));\n\n    return transformed.filter((series: Series) => seriesWithData.has(series.seriesName));\n  }\n\n  getFilterStats() {\n    const statOptions = Object.keys(STAT_OPS);\n    const {project} = this.props;\n    const {orgId} = this.props.params;\n\n    const until = Math.floor(new Date().getTime() / 1000);\n    const since = until - 3600 * 24 * 30;\n\n    const statEndpoint = `/projects/${orgId}/${project.slug}/stats/`;\n    const query = {\n      since,\n      until,\n      resolution: '1d',\n    };\n    const requests = statOptions.map(stat =>\n      this.props.api.requestPromise(statEndpoint, {\n        query: Object.assign({stat}, query),\n      })\n    );\n    Promise.all(requests)\n      .then(results => {\n        const rawStatsData: RawStats = {};\n        for (let i = 0; i < statOptions.length; i++) {\n          rawStatsData[statOptions[i]] = results[i];\n        }\n\n        this.setState({\n          formattedData: this.formatData(rawStatsData),\n          error: false,\n          loading: false,\n        });\n      })\n      .catch(() => {\n        this.setState({error: true, loading: false});\n      });\n  }\n\n  fetchData = () => {\n    this.getFilterStats();\n  };\n\n  render() {\n    const {loading, error, formattedData} = this.state;\n    const isLoading = loading || !formattedData;\n    const hasError = !isLoading && error;\n    const hasLoaded = !isLoading && !error;\n    const colors = formattedData\n      ? formattedData.map(series => series.color || theme.gray200)\n      : undefined;\n\n    return (\n      <Panel>\n        <PanelHeader>{t('Errors filtered in the last 30 days (by day)')}</PanelHeader>\n\n        <PanelBody withPadding>\n          {isLoading && <Placeholder height=\"100px\" />}\n          {hasError && <LoadingError onRetry={this.fetchData} />}\n          {hasLoaded && !this.state.blankStats && (\n            <MiniBarChart\n              series={formattedData}\n              colors={colors}\n              height={100}\n              isGroupedByDate\n              stacked\n              labelYAxisExtents\n            />\n          )}\n          {hasLoaded && this.state.blankStats && (\n            <EmptyMessage\n              title={t('Nothing filtered in the last 30 days.')}\n              description={t(\n                'Issues filtered as a result of your settings below will be shown here.'\n              )}\n            />\n          )}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n\nexport {ProjectFiltersChart};\n\nexport default withApi(ProjectFiltersChart);\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport ProjectActions from 'app/actions/projectActions';\nimport Access from 'app/components/acl/access';\nimport Feature from 'app/components/acl/feature';\nimport FeatureDisabled from 'app/components/acl/featureDisabled';\nimport AsyncComponent from 'app/components/asyncComponent';\nimport {\n  Panel,\n  PanelAlert,\n  PanelBody,\n  PanelHeader,\n  PanelItem,\n} from 'app/components/panels';\nimport Switch from 'app/components/switchButton';\nimport filterGroups, {customFilterFields} from 'app/data/forms/inboundFilters';\nimport {t} from 'app/locale';\nimport HookStore from 'app/stores/hookStore';\nimport {Project} from 'app/types';\nimport FieldFromConfig from 'app/views/settings/components/forms/fieldFromConfig';\nimport Form from 'app/views/settings/components/forms/form';\nimport FormField from 'app/views/settings/components/forms/formField';\nimport JsonForm from 'app/views/settings/components/forms/jsonForm';\n\nconst LEGACY_BROWSER_SUBFILTERS = {\n  ie_pre_9: {\n    icon: 'internet-explorer',\n    helpText: 'Version 8 and lower',\n    title: 'Internet Explorer',\n  },\n  ie9: {\n    icon: 'internet-explorer',\n    helpText: 'Version 9',\n    title: 'Internet Explorer',\n  },\n  ie10: {\n    icon: 'internet-explorer',\n    helpText: 'Version 10',\n    title: 'Internet Explorer',\n  },\n  ie11: {\n    icon: 'internet-explorer',\n    helpText: 'Version 11',\n    title: 'Internet Explorer',\n  },\n  safari_pre_6: {\n    icon: 'safari',\n    helpText: 'Version 5 and lower',\n    title: 'Safari',\n  },\n  opera_pre_15: {\n    icon: 'opera',\n    helpText: 'Version 14 and lower',\n    title: 'Opera',\n  },\n  opera_mini_pre_8: {\n    icon: 'opera',\n    helpText: 'Version 8 and lower',\n    title: 'Opera Mini',\n  },\n  android_pre_4: {\n    icon: 'android',\n    helpText: 'Version 3 and lower',\n    title: 'Android',\n  },\n};\n\nconst LEGACY_BROWSER_KEYS = Object.keys(LEGACY_BROWSER_SUBFILTERS);\n\ntype FormFieldProps = React.ComponentProps<typeof FormField>;\n\ntype RowProps = {\n  data: {\n    active: string[] | boolean;\n  };\n  onToggle: (\n    data: RowProps['data'],\n    filters: RowState['subfilters'],\n    event: React.MouseEvent\n  ) => void;\n  disabled?: boolean;\n};\n\ntype RowState = {\n  loading: boolean;\n  error: boolean | Error;\n  subfilters: Set<string>;\n};\n\nclass LegacyBrowserFilterRow extends React.Component<RowProps, RowState> {\n  constructor(props) {\n    super(props);\n    let initialSubfilters;\n    if (props.data.active === true) {\n      initialSubfilters = new Set(LEGACY_BROWSER_KEYS);\n    } else if (props.data.active === false) {\n      initialSubfilters = new Set();\n    } else {\n      initialSubfilters = new Set(props.data.active);\n    }\n\n    this.state = {\n      loading: false,\n      error: false,\n      subfilters: initialSubfilters,\n    };\n  }\n\n  handleToggleSubfilters = (subfilter, e) => {\n    let {subfilters} = this.state;\n\n    if (subfilter === true) {\n      subfilters = new Set(LEGACY_BROWSER_KEYS);\n    } else if (subfilter === false) {\n      subfilters = new Set();\n    } else if (subfilters.has(subfilter)) {\n      subfilters.delete(subfilter);\n    } else {\n      subfilters.add(subfilter);\n    }\n\n    this.setState(\n      {\n        subfilters: new Set(subfilters),\n      },\n      () => {\n        this.props.onToggle(this.props.data, subfilters, e);\n      }\n    );\n  };\n\n  render() {\n    const {disabled} = this.props;\n    return (\n      <div>\n        {!disabled && (\n          <BulkFilter>\n            <BulkFilterLabel>{t('Filter')}:</BulkFilterLabel>\n            <BulkFilterItem onClick={this.handleToggleSubfilters.bind(this, true)}>\n              {t('All')}\n            </BulkFilterItem>\n            <BulkFilterItem onClick={this.handleToggleSubfilters.bind(this, false)}>\n              {t('None')}\n            </BulkFilterItem>\n          </BulkFilter>\n        )}\n\n        <FilterGrid>\n          {LEGACY_BROWSER_KEYS.map(key => {\n            const subfilter = LEGACY_BROWSER_SUBFILTERS[key];\n            return (\n              <FilterGridItemWrapper key={key}>\n                <FilterGridItem>\n                  <FilterItem>\n                    <FilterGridIcon className={`icon-${subfilter.icon}`} />\n                    <div>\n                      <FilterTitle>{subfilter.title}</FilterTitle>\n                      <FilterDescription>{subfilter.helpText}</FilterDescription>\n                    </div>\n                  </FilterItem>\n\n                  <Switch\n                    isActive={this.state.subfilters.has(key)}\n                    isDisabled={disabled}\n                    css={{flexShrink: 0, marginLeft: 6}}\n                    toggle={this.handleToggleSubfilters.bind(this, key)}\n                    size=\"lg\"\n                  />\n                </FilterGridItem>\n              </FilterGridItemWrapper>\n            );\n          })}\n        </FilterGrid>\n      </div>\n    );\n  }\n}\n\ntype Props = {\n  project: Project;\n  features: Set<string>;\n  params: {\n    orgId: string;\n    projectId: string;\n  };\n};\n\ntype State = {\n  hooksDisabled: ReturnType<typeof HookStore['get']>;\n} & AsyncComponent['state'];\n\nclass ProjectFiltersSettings extends AsyncComponent<Props, State> {\n  getDefaultState() {\n    return {\n      ...super.getDefaultState(),\n      hooksDisabled: HookStore.get('feature-disabled:custom-inbound-filters'),\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {orgId, projectId} = this.props.params;\n    return [['filterList', `/projects/${orgId}/${projectId}/filters/`]];\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    if (prevProps.project.slug !== this.props.project.slug) {\n      this.reloadData();\n    }\n    super.componentDidUpdate(prevProps, prevState);\n  }\n\n  handleLegacyChange = (\n    onChange: FormFieldProps['onChange'],\n    onBlur: FormFieldProps['onBlur'],\n    _filter,\n    subfilters: RowState['subfilters'],\n    e: React.MouseEvent\n  ) => {\n    onChange?.(subfilters, e);\n    onBlur?.(subfilters, e);\n  };\n\n  handleSubmit = (response: Project) => {\n    // This will update our project context\n    ProjectActions.updateSuccess(response);\n  };\n\n  renderDisabledCustomFilters = p => (\n    <FeatureDisabled\n      featureName={t('Custom Inbound Filters')}\n      features={p.features}\n      alert={PanelAlert}\n      message={t(\n        'Release and Error Message filtering are not enabled on your Sentry installation'\n      )}\n    />\n  );\n\n  renderCustomFilters = (disabled: boolean) => () => (\n    <Feature\n      features={['projects:custom-inbound-filters']}\n      hookName=\"feature-disabled:custom-inbound-filters\"\n      renderDisabled={({children, ...props}) => {\n        if (typeof children === 'function') {\n          return children({...props, renderDisabled: this.renderDisabledCustomFilters});\n        }\n        return null;\n      }}\n    >\n      {({hasFeature, organization, renderDisabled, ...featureProps}) => (\n        <React.Fragment>\n          {!hasFeature &&\n            typeof renderDisabled === 'function' &&\n            // XXX: children is set to null as we're doing tricksy things\n            // in the renderDisabled prop a few lines higher.\n            renderDisabled({organization, hasFeature, children: null, ...featureProps})}\n\n          {customFilterFields.map(field => (\n            <FieldFromConfig\n              key={field.name}\n              field={field}\n              disabled={disabled || !hasFeature}\n            />\n          ))}\n\n          {hasFeature && this.props.project.options?.['filters:error_messages'] && (\n            <PanelAlert type=\"warning\" data-test-id=\"error-message-disclaimer\">\n              {t(\n                \"Minidumps, errors in the minified production build of React, and Internet Explorer's i18n errors cannot be filtered by message.\"\n              )}\n            </PanelAlert>\n          )}\n        </React.Fragment>\n      )}\n    </Feature>\n  );\n\n  renderBody() {\n    const {features, params, project} = this.props;\n    const {orgId, projectId} = params;\n\n    const projectEndpoint = `/projects/${orgId}/${projectId}/`;\n    const filtersEndpoint = `${projectEndpoint}filters/`;\n\n    return (\n      <Access access={['project:write']}>\n        {({hasAccess}) => (\n          <React.Fragment>\n            <Panel>\n              <PanelHeader>{t('Filters')}</PanelHeader>\n              <PanelBody>\n                {this.state.filterList.map(filter => {\n                  const fieldProps = {\n                    name: filter.id,\n                    label: filter.name,\n                    help: filter.description,\n                    disabled: !hasAccess,\n                  };\n\n                  // Note by default, forms generate data in the format of:\n                  // { [fieldName]: [value] }\n                  // Endpoints for these filters expect data to be:\n                  // { 'active': [value] }\n                  return (\n                    <PanelItem key={filter.id} p={0}>\n                      <NestedForm\n                        apiMethod=\"PUT\"\n                        apiEndpoint={`${filtersEndpoint}${filter.id}/`}\n                        initialData={{[filter.id]: filter.active}}\n                        saveOnBlur\n                      >\n                        {filter.id !== 'legacy-browsers' ? (\n                          <FieldFromConfig\n                            key={filter.id}\n                            getData={data => ({active: data[filter.id]})}\n                            field={{\n                              type: 'boolean',\n                              ...fieldProps,\n                            }}\n                          />\n                        ) : (\n                          <FormField\n                            inline={false}\n                            {...fieldProps}\n                            getData={data => ({subfilters: [...data[filter.id]]})}\n                          >\n                            {({onChange, onBlur}) => (\n                              <LegacyBrowserFilterRow\n                                key={filter.id}\n                                data={filter}\n                                disabled={!hasAccess}\n                                onToggle={this.handleLegacyChange.bind(\n                                  this,\n                                  onChange,\n                                  onBlur\n                                )}\n                              />\n                            )}\n                          </FormField>\n                        )}\n                      </NestedForm>\n                    </PanelItem>\n                  );\n                })}\n              </PanelBody>\n            </Panel>\n\n            <Form\n              apiMethod=\"PUT\"\n              apiEndpoint={projectEndpoint}\n              initialData={project.options}\n              saveOnBlur\n              onSubmitSuccess={this.handleSubmit}\n            >\n              <JsonForm\n                features={features}\n                forms={filterGroups}\n                disabled={!hasAccess}\n                renderFooter={this.renderCustomFilters(!hasAccess)}\n              />\n            </Form>\n          </React.Fragment>\n        )}\n      </Access>\n    );\n  }\n}\n\nexport default ProjectFiltersSettings;\n\n// TODO(ts): Understand why styled is not correctly inheriting props here\nconst NestedForm = styled(Form)<Form['props']>`\n  flex: 1;\n`;\n\nconst FilterGrid = styled('div')`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst FilterGridItem = styled('div')`\n  display: flex;\n  align-items: center;\n  background: ${p => p.theme.backgroundSecondary};\n  border-radius: 3px;\n  flex: 1;\n  padding: 12px;\n  height: 100%;\n`;\n\n// We want this wrapper to maining 30% width\nconst FilterGridItemWrapper = styled('div')`\n  padding: 12px;\n  width: 50%;\n`;\n\nconst FilterItem = styled('div')`\n  display: flex;\n  flex: 1;\n  align-items: center;\n`;\n\nconst FilterGridIcon = styled('div')`\n  width: 38px;\n  height: 38px;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: 38px 38px;\n  margin-right: 6px;\n  flex-shrink: 0;\n`;\n\nconst FilterTitle = styled('div')`\n  font-size: 14px;\n  font-weight: bold;\n  line-height: 1;\n  white-space: nowrap;\n`;\n\nconst FilterDescription = styled('div')`\n  color: ${p => p.theme.subText};\n  font-size: 12px;\n  line-height: 1;\n  white-space: nowrap;\n`;\n\nconst BulkFilter = styled('div')`\n  text-align: right;\n  padding: 0 12px;\n`;\n\nconst BulkFilterLabel = styled('span')`\n  font-weight: bold;\n  margin-right: 6px;\n`;\n\nconst BulkFilterItem = styled('a')`\n  border-right: 1px solid #f1f2f3;\n  margin-right: 6px;\n  padding-right: 6px;\n\n  &:last-child {\n    border-right: none;\n    margin-right: 0;\n  }\n`;\n","import React from 'react';\nimport {Link, RouteComponentProps} from 'react-router';\n\nimport NavTabs from 'app/components/navTabs';\nimport SentryDocumentTitle from 'app/components/sentryDocumentTitle';\nimport {t} from 'app/locale';\nimport {Project} from 'app/types';\nimport recreateRoute from 'app/utils/recreateRoute';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\nimport PermissionAlert from 'app/views/settings/project/permissionAlert';\nimport GroupTombstones from 'app/views/settings/project/projectFilters/groupTombstones';\nimport ProjectFiltersChart from 'app/views/settings/project/projectFilters/projectFiltersChart';\nimport ProjectFiltersSettings from 'app/views/settings/project/projectFilters/projectFiltersSettings';\n\ntype Props = {\n  project: Project;\n} & RouteComponentProps<{projectId: string; orgId: string; filterType: string}, {}>;\n\nclass ProjectFilters extends React.Component<Props> {\n  render() {\n    const {project, params, location} = this.props;\n    const {orgId, projectId, filterType} = params;\n    if (!project) {\n      return null;\n    }\n\n    const features = new Set(project.features);\n\n    return (\n      <React.Fragment>\n        <SentryDocumentTitle title={t('Inbound Filters')} objSlug={projectId} />\n        <SettingsPageHeader title={t('Inbound Data Filters')} />\n        <PermissionAlert />\n\n        <TextBlock>\n          {t(\n            'Filters allow you to prevent Sentry from storing events in certain situations. Filtered events are tracked separately from rate limits, and do not apply to any project quotas.'\n          )}\n        </TextBlock>\n\n        <div>\n          <ProjectFiltersChart project={project} params={this.props.params} />\n\n          {features.has('discard-groups') && (\n            <NavTabs underlined style={{paddingTop: '30px'}}>\n              <li className={filterType === 'data-filters' ? 'active' : ''}>\n                <Link to={recreateRoute('data-filters/', {...this.props, stepBack: -1})}>\n                  {t('Data Filters')}\n                </Link>\n              </li>\n              <li className={filterType === 'discarded-groups' ? 'active' : ''}>\n                <Link\n                  to={recreateRoute('discarded-groups/', {...this.props, stepBack: -1})}\n                >\n                  {t('Discarded Issues')}\n                </Link>\n              </li>\n            </NavTabs>\n          )}\n\n          {filterType === 'discarded-groups' ? (\n            <GroupTombstones orgId={orgId} projectId={project.slug} location={location} />\n          ) : (\n            <ProjectFiltersSettings\n              project={project}\n              params={this.props.params}\n              features={features}\n            />\n          )}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ProjectFilters;\n"],"sourceRoot":""}