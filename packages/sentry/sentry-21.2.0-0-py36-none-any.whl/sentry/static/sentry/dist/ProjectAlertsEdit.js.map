{"version":3,"sources":["webpack:///./app/views/settings/incidentRules/details.tsx","webpack:///./app/views/settings/projectAlerts/edit.tsx"],"names":["IncidentRulesDetails","handleSubmitSuccess","router","props","orgId","params","push","actions","Map","this","ruleId","stateKey","data","name","onChangeTitle","rule","state","onSubmitSuccess","AsyncView","ProjectAlertsEditor","alertType","ruleName","handleChangeTitle","setState","defaultTitle","t","title","hasMetricAlerts","location","organization","project","projectId","pathname","includes","Fragment","getTitle","objSlug","orgSlug","slug","StyledPageHeader","React","Component","PageHeader","space"],"mappings":"g0CAmEeA,E,kLAtBbC,oBAAsB,WAAM,IACnBC,EAAU,EAAKC,MAAfD,OACAE,EAAS,EAAKD,MAAME,OAApBD,MAEPF,EAAOI,KAAP,yBAA8BF,EAA9B,oB,wDAtBA,2EAEEG,QAAS,IAAIC,Q,qCAIqC,MAC5BC,KAAKN,MAAME,OAA5BD,EAD6C,EAC7CA,MAAOM,EADsC,EACtCA,OAEd,MAAO,CAAC,CAAC,OAAD,yBAA2BN,EAA3B,wBAAgDM,EAAhD,S,0CAGyB,IAAjBC,EAAiB,EAAjBA,SAAUC,EAAO,EAAPA,KACT,SAAbD,GAAuBC,EAAKC,MAC9BJ,KAAKN,MAAMW,cAAcF,EAAKC,Q,mCAWrB,IACJH,EAAUD,KAAKN,MAAME,OAArBK,OACAK,EAAQN,KAAKO,MAAbD,KAEP,OACE,YAAC,IAAD,OACMN,KAAKN,MADX,CAEEO,OAAQA,EACRK,KAAMA,EACNE,gBAAiBR,KAAKR,2B,GApCKiB,K,sbCM7BC,E,kLACJH,MAAe,CACbI,UAAW,GACXC,SAAU,I,EAGZC,kBAAoB,SAAAD,GAClB,EAAKE,SAAS,CAACF,c,iDAGN,IACFA,EAAYZ,KAAKO,MAAjBK,SACDG,EAAeC,YAAE,mBAEvB,IAAKJ,EACH,OAAOG,EAGT,IAAME,EAAQ,GAAH,OAAML,GAEjB,gBAAUG,EAAV,aAA2BE,K,+BAGpB,MAC4DjB,KAAKN,MAAjEwB,EADA,EACAA,gBAAiBC,EADjB,EACiBA,SAAUvB,EAD3B,EAC2BA,OAAQwB,EADnC,EACmCA,aAAcC,EADjD,EACiDA,QACjDC,EAAa1B,EAAb0B,UACDX,EAAYQ,EAASI,SAASC,SAAS,yBACzC,SACA,QAEJ,OACE,YAAC,IAAMC,SAAP,KACE,YAAC,IAAD,CAAqBR,MAAOjB,KAAK0B,WAAYC,QAASL,IACtD,YAAC,IAAD,KACE,YAAC,IAAD,CACEJ,gBAAiBA,EACjBU,QAASR,EAAaS,KACtBZ,MAAOjB,KAAK0B,aAEd,YAACI,EAAD,KACE,YAAC,IAAD,KAAc9B,KAAK0B,eAElBR,GAAiC,UAAdP,IACpB,YAAC,IAAD,OACMX,KAAKN,MADX,CAEE2B,QAASA,EACThB,cAAeL,KAAKa,qBAGvBK,GAAiC,WAAdP,GAClB,YAAC,EAAD,OACMX,KAAKN,MADX,CAEE2B,QAASA,EACThB,cAAeL,KAAKa,2B,GArDAkB,IAAMC,WAAlCtB,E,kCA8DN,IAAMoB,EAAmB,YAAOG,IAAP,8CAAH,iBACHC,YAAM,GADH,KAIPxB","file":"ProjectAlertsEdit.js","sourcesContent":["import React from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport {Organization, Project} from 'app/types';\nimport AsyncView from 'app/views/asyncView';\nimport RuleForm from 'app/views/settings/incidentRules/ruleForm';\nimport {IncidentRule} from 'app/views/settings/incidentRules/types';\n\ntype RouteParams = {\n  orgId: string;\n  projectId: string;\n  ruleId: string;\n};\n\ntype Props = {\n  organization: Organization;\n  onChangeTitle: (data: string) => void;\n  project: Project;\n} & RouteComponentProps<RouteParams, {}>;\n\ntype State = {\n  rule: IncidentRule;\n  actions: Map<string, any>; // This is temp\n} & AsyncView['state'];\n\nclass IncidentRulesDetails extends AsyncView<Props, State> {\n  getDefaultState() {\n    return {\n      ...super.getDefaultState(),\n      actions: new Map(),\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {orgId, ruleId} = this.props.params;\n\n    return [['rule', `/organizations/${orgId}/alert-rules/${ruleId}/`]];\n  }\n\n  onRequestSuccess({stateKey, data}) {\n    if (stateKey === 'rule' && data.name) {\n      this.props.onChangeTitle(data.name);\n    }\n  }\n\n  handleSubmitSuccess = () => {\n    const {router} = this.props;\n    const {orgId} = this.props.params;\n\n    router.push(`/organizations/${orgId}/alerts/rules/`);\n  };\n\n  renderBody() {\n    const {ruleId} = this.props.params;\n    const {rule} = this.state;\n\n    return (\n      <RuleForm\n        {...this.props}\n        ruleId={ruleId}\n        rule={rule}\n        onSubmitSuccess={this.handleSubmitSuccess}\n      />\n    );\n  }\n}\n\nexport default IncidentRulesDetails;\n","import React from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport PageHeading from 'app/components/pageHeading';\nimport SentryDocumentTitle from 'app/components/sentryDocumentTitle';\nimport {t} from 'app/locale';\nimport {PageContent, PageHeader} from 'app/styles/organization';\nimport space from 'app/styles/space';\nimport {Organization, Project} from 'app/types';\nimport BuilderBreadCrumbs from 'app/views/alerts/builder/builderBreadCrumbs';\nimport IncidentRulesDetails from 'app/views/settings/incidentRules/details';\nimport IssueEditor from 'app/views/settings/projectAlerts/issueRuleEditor';\n\ntype RouteParams = {\n  orgId: string;\n  projectId: string;\n  ruleId: string;\n};\n\ntype Props = RouteComponentProps<RouteParams, {}> & {\n  organization: Organization;\n  project: Project;\n  hasMetricAlerts: boolean;\n};\n\ntype State = {\n  alertType: string;\n  ruleName: string;\n};\n\nclass ProjectAlertsEditor extends React.Component<Props, State> {\n  state: State = {\n    alertType: '',\n    ruleName: '',\n  };\n\n  handleChangeTitle = ruleName => {\n    this.setState({ruleName});\n  };\n\n  getTitle() {\n    const {ruleName} = this.state;\n    const defaultTitle = t('Edit Alert Rule');\n\n    if (!ruleName) {\n      return defaultTitle;\n    }\n\n    const title = `${ruleName}`;\n\n    return `${defaultTitle}: ${title}`;\n  }\n\n  render() {\n    const {hasMetricAlerts, location, params, organization, project} = this.props;\n    const {projectId} = params;\n    const alertType = location.pathname.includes('/alerts/metric-rules/')\n      ? 'metric'\n      : 'issue';\n\n    return (\n      <React.Fragment>\n        <SentryDocumentTitle title={this.getTitle()} objSlug={projectId} />\n        <PageContent>\n          <BuilderBreadCrumbs\n            hasMetricAlerts={hasMetricAlerts}\n            orgSlug={organization.slug}\n            title={this.getTitle()}\n          />\n          <StyledPageHeader>\n            <PageHeading>{this.getTitle()}</PageHeading>\n          </StyledPageHeader>\n          {(!hasMetricAlerts || alertType === 'issue') && (\n            <IssueEditor\n              {...this.props}\n              project={project}\n              onChangeTitle={this.handleChangeTitle}\n            />\n          )}\n          {hasMetricAlerts && alertType === 'metric' && (\n            <IncidentRulesDetails\n              {...this.props}\n              project={project}\n              onChangeTitle={this.handleChangeTitle}\n            />\n          )}\n        </PageContent>\n      </React.Fragment>\n    );\n  }\n}\n\nconst StyledPageHeader = styled(PageHeader)`\n  margin-bottom: ${space(4)};\n`;\n\nexport default ProjectAlertsEditor;\n"],"sourceRoot":""}