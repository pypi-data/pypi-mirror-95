{"version":3,"sources":["webpack:///./app/views/sharedGroupDetails/sharedGroupHeader.tsx","webpack:///./app/views/sharedGroupDetails/index.tsx"],"names":["SharedGroupHeader","group","Wrapper","Details","Title","title","isUnhandled","message","culprit","space","p","theme","border","fontSizeExtraLarge","props","breakpoints","headerFontSize","overflowEllipsis","SharedGroupDetails","state","getInitialState","handleRetry","setState","fetchData","loading","error","this","document","body","classList","add","remove","params","api","shareId","requestPromise","onRetry","location","permalink","latestEvent","project","getTitle","className","to","t","Container","organization","event","isShare","React","Component","childContextTypes","SentryTypes","Group","withApi"],"mappings":"8aAgBMA,EAAoB,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAF,OACxB,YAACC,EAAD,KACE,YAACC,EAAD,KACE,YAACC,EAAD,KAAQH,EAAMI,OACd,YAAC,IAAD,KACGJ,EAAMK,aAAe,YAAC,IAAD,MACtB,YAAC,IAAD,CAAcC,QAASN,EAAMO,cAN/BR,E,gCAYSA,QAETE,EAAU,YAAO,MAAP,qCAAH,WACAO,YAAM,GADN,IACYA,YAAM,GADlB,IACwBA,YAAM,GAD9B,IACoCA,YAAM,GAD1C,mBAEM,SAAAC,GAAC,0BAAiBA,EAAEC,MAAMC,UAFhC,qEAKGH,YAAM,GALT,KAQPN,EAAU,YAAO,MAAP,qCAAH,0DAMPC,EAAQ,YAAO,KAAP,mCAAH,4BAEKK,YAAM,GAFX,wDAKI,SAAAC,GAAC,OAAIA,EAAEC,MAAME,qBALjB,uBAMY,SAAAC,GAAK,OAAIA,EAAMH,MAAMI,YAAY,KAN7C,gBAOM,SAAAL,GAAC,OAAIA,EAAEC,MAAMK,iBAPnB,oBASLC,IATK,M,4aCdLC,E,oLAKJC,MAAe,EAAKC,kB,EAuCpBC,YAAc,WACZ,EAAKC,SAAS,EAAKF,mBACnB,EAAKG,a,wDAtCL,MAAO,CACLtB,MAAO,KACPuB,SAAS,EACTC,OAAO,K,wCAKT,MAAO,CACLxB,MAAOyB,KAAKP,MAAMlB,S,2CAKpB0B,SAASC,KAAKC,UAAUC,IAAI,kB,0CAI5BJ,KAAKH,c,6CAILI,SAASC,KAAKC,UAAUE,OAAO,kB,6IAITL,KAAKZ,MAApBkB,E,EAAAA,OAAQC,E,EAAAA,IACRC,EAAWF,EAAXE,Q,kBAEeD,EAAIE,eAAJ,yBAAqCD,EAArC,M,OAAdjC,E,OACNyB,KAAKJ,SAAS,CAACE,SAAS,EAAOvB,U,gDAE/ByB,KAAKJ,SAAS,CAACE,SAAS,EAAOC,OAAO,I,uIAS/B,IACFxB,EAASyB,KAAKP,MAAdlB,MAEP,OAAIA,EACKA,EAAMI,MAGR,W,+BAGA,MACyBqB,KAAKP,MAA9BlB,EADA,EACAA,MAAOuB,EADP,EACOA,QAASC,EADhB,EACgBA,MAEvB,GAAID,EACF,OAAO,YAAC,UAAD,MAGT,IAAKvB,EACH,OAAO,YAAC,IAAD,MAGT,GAAIwB,EACF,OAAO,YAAC,IAAD,CAAcW,QAASV,KAAKL,cAZ9B,IAeAgB,EAAYX,KAAKZ,MAAjBuB,SACAC,EAAmCrC,EAAnCqC,UAAWC,EAAwBtC,EAAxBsC,YAAaC,EAAWvC,EAAXuC,QACzBnC,EAAQqB,KAAKe,WAEnB,OACE,YAAC,IAAD,CAAepC,MAAOA,GACpB,mBAAKqC,UAAU,OACb,mBAAKA,UAAU,eACf,mBAAKA,UAAU,aACb,mBAAKA,UAAU,iBACb,mBAAKA,UAAU,cACb,YAAC,IAAD,CAAMA,UAAU,OAAOC,GAAG,KACxB,oBAAMD,UAAU,2BAEjBJ,GACC,YAAC,IAAD,CAAMI,UAAU,UAAUC,GAAIL,GAC3BM,YAAE,aAIT,mBAAKF,UAAU,WACb,YAAC,EAAD,CAAmBzC,MAAOA,IAC1B,YAAC4C,EAAD,CAAWH,UAAU,0CACnB,YAAC,IAAD,CACEL,SAAUA,EACVS,aAAcN,EAAQM,aACtB7C,MAAOA,EACP8C,MAAOR,EACPC,QAASA,EACTQ,SAAO,KAGX,YAAC,IAAD,e,GA1GiBC,IAAMC,WAAjChC,E,iCAAAA,EACGiC,kBAAoB,CACzBlD,MAAOmD,IAAYC,OAkHvB,IAAMR,EAAY,YAAO,MAAP,uCAAH,aACApC,YAAM,GADN,KAKA6C,sBAAQpC","file":"SharedGroupDetails.js","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\n\nimport EventMessage from 'app/components/events/eventMessage';\nimport overflowEllipsis from 'app/styles/overflowEllipsis';\nimport space from 'app/styles/space';\nimport {Group} from 'app/types';\n\nimport UnhandledTag, {\n  TagAndMessageWrapper,\n} from '../organizationGroupDetails/unhandledTag';\n\ntype Props = {\n  group: Group;\n};\n\nconst SharedGroupHeader = ({group}: Props) => (\n  <Wrapper>\n    <Details>\n      <Title>{group.title}</Title>\n      <TagAndMessageWrapper>\n        {group.isUnhandled && <UnhandledTag />}\n        <EventMessage message={group.culprit} />\n      </TagAndMessageWrapper>\n    </Details>\n  </Wrapper>\n);\n\nexport default SharedGroupHeader;\n\nconst Wrapper = styled('div')`\n  padding: ${space(3)} ${space(4)} ${space(3)} ${space(4)};\n  border-bottom: ${p => `1px solid ${p.theme.border}`};\n  box-shadow: 0 2px 0 rgba(0, 0, 0, 0.03);\n  position: relative;\n  margin: 0 0 ${space(3)};\n`;\n\nconst Details = styled('div')`\n  max-width: 960px;\n  margin: 0 auto;\n`;\n\n// TODO(style): the color #161319 is not yet in the color object of the theme\nconst Title = styled('h3')`\n  color: #161319;\n  margin: 0 0 ${space(1)};\n  overflow-wrap: break-word;\n  line-height: 1.2;\n  font-size: ${p => p.theme.fontSizeExtraLarge};\n  @media (min-width: ${props => props.theme.breakpoints[0]}) {\n    font-size: ${p => p.theme.headerFontSize};\n    line-height: 1.1;\n    ${overflowEllipsis};\n  }\n`;\n","import React from 'react';\nimport DocumentTitle from 'react-document-title';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {Client} from 'app/api';\nimport NotFound from 'app/components/errors/notFound';\nimport {BorderlessEventEntries} from 'app/components/events/eventEntries';\nimport Footer from 'app/components/footer';\nimport Link from 'app/components/links/link';\nimport LoadingError from 'app/components/loadingError';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport {t} from 'app/locale';\nimport SentryTypes from 'app/sentryTypes';\nimport space from 'app/styles/space';\nimport {Group} from 'app/types';\nimport withApi from 'app/utils/withApi';\n\nimport SharedGroupHeader from './sharedGroupHeader';\n\ntype Props = RouteComponentProps<{shareId: string}, {}> & {\n  api: Client;\n};\n\ntype State = {\n  group: Group | null;\n  loading: boolean;\n  error: boolean;\n};\n\nclass SharedGroupDetails extends React.Component<Props, State> {\n  static childContextTypes = {\n    group: SentryTypes.Group,\n  };\n\n  state: State = this.getInitialState();\n\n  getInitialState() {\n    return {\n      group: null,\n      loading: true,\n      error: false,\n    };\n  }\n\n  getChildContext() {\n    return {\n      group: this.state.group,\n    };\n  }\n\n  componentWillMount() {\n    document.body.classList.add('shared-group');\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentWillUnmount() {\n    document.body.classList.remove('shared-group');\n  }\n\n  async fetchData() {\n    const {params, api} = this.props;\n    const {shareId} = params;\n    try {\n      const group = await api.requestPromise(`/shared/issues/${shareId}/`);\n      this.setState({loading: false, group});\n    } catch {\n      this.setState({loading: false, error: true});\n    }\n  }\n\n  handleRetry = () => {\n    this.setState(this.getInitialState());\n    this.fetchData();\n  };\n\n  getTitle() {\n    const {group} = this.state;\n\n    if (group) {\n      return group.title;\n    }\n\n    return 'Sentry';\n  }\n\n  render() {\n    const {group, loading, error} = this.state;\n\n    if (loading) {\n      return <LoadingIndicator />;\n    }\n\n    if (!group) {\n      return <NotFound />;\n    }\n\n    if (error) {\n      return <LoadingError onRetry={this.handleRetry} />;\n    }\n\n    const {location} = this.props;\n    const {permalink, latestEvent, project} = group;\n    const title = this.getTitle();\n\n    return (\n      <DocumentTitle title={title}>\n        <div className=\"app\">\n          <div className=\"pattern-bg\" />\n          <div className=\"container\">\n            <div className=\"box box-modal\">\n              <div className=\"box-header\">\n                <Link className=\"logo\" to=\"/\">\n                  <span className=\"icon-sentry-logo-full\" />\n                </Link>\n                {permalink && (\n                  <Link className=\"details\" to={permalink}>\n                    {t('Details')}\n                  </Link>\n                )}\n              </div>\n              <div className=\"content\">\n                <SharedGroupHeader group={group} />\n                <Container className=\"group-overview event-details-container\">\n                  <BorderlessEventEntries\n                    location={location}\n                    organization={project.organization}\n                    group={group}\n                    event={latestEvent}\n                    project={project}\n                    isShare\n                  />\n                </Container>\n                <Footer />\n              </div>\n            </div>\n          </div>\n        </div>\n      </DocumentTitle>\n    );\n  }\n}\n\nconst Container = styled('div')`\n  padding: 0 ${space(4)};\n`;\n\nexport {SharedGroupDetails};\nexport default withApi(SharedGroupDetails);\n"],"sourceRoot":""}