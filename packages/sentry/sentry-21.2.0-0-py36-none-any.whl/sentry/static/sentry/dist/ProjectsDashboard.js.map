{"version":3,"sources":["webpack:///./app/components/sentryDocumentTitle.tsx","webpack:///./app/utils/discover/charts.tsx","webpack:///./images/spot/breadcrumbs-generic.svg","webpack:///./images/spot/code-arguments-tags-mirrored.svg","webpack:///./images/spot/releases.svg","webpack:///./app/utils/withTeamsForUser.tsx","webpack:///./app/utils/getProjectsByTeams.tsx","webpack:///./app/components/resourceCard.tsx","webpack:///./app/views/projectsDashboard/resources.tsx","webpack:///./app/views/projectsDashboard/noEvents.tsx","webpack:///./app/views/projectsDashboard/chart.tsx","webpack:///./app/views/projectsDashboard/deploys.tsx","webpack:///./app/views/projectsDashboard/projectCard.tsx","webpack:///./app/views/projectsDashboard/teamMembers.tsx","webpack:///./app/views/projectsDashboard/teamSection.tsx","webpack:///./app/views/projectsDashboard/index.tsx"],"names":["SentryDocumentTitle","props","_title","title","objSlug","children","tooltipFormatter","value","seriesName","aggregateOutputType","toLocaleString","formatPercentage","getDuration","toString","axisLabelFormatter","abbreviation","formatAbbreviatedNumber","axisDuration","WEEK","label","toFixed","t","DAY","HOUR","MINUTE","SECOND","module","exports","withTeamsForUser","WrappedComponent","state","teams","loadingTeams","error","this","fetchTeams","setState","metric","mark","name","api","requestPromise","getUsersTeamsEndpoint","teamsWithProjects","measure","start","data","route","organization_id","parseInt","organization","id","projects","projectsByTeam","isSuperuser","teamlessProjects","usersTeams","Set","filter","team","isMember","map","slug","size","forEach","project","length","push","has","hasOwnProperty","getProjectsByTeams","ConfigStore","get","teamProjects","React","Component","displayName","getDisplayName","ResourceCard","link","imgUrl","ResourceCardWrapper","onClick","analytics","StyledLink","href","StyledImg","src","alt","StyledTitle","Panel","space","ExternalLink","p","theme","textColor","fontSizeLarge","Resources","trackAnalyticsEvent","eventKey","eventName","ResourcesWrapper","data-test-id","withMargins","ResourceCards","releasesImg","breadcrumbsImg","docsImg","border","breakpoints","NoEvents","seriesCount","Container","EmptyText","gray300","Chart","firstEvent","stats","transactionStats","series","hasTransactions","undefined","transactionSeries","cursor","type","barMinHeight","xAxisIndex","yAxisIndex","itemStyle","color","gray200","opacity","emphasis","purple300","chartOptions","colors","height","isGroupedByDate","showTimeInTooltip","grid","top","bottom","left","right","tooltip","trigger","xAxes","Array","from","_i","index","gridIndex","boundaryGap","axisLine","show","axisTick","axisLabel","axisPointer","lineStyle","width","yAxes","interval","Infinity","max","Math","margin","showMaxLabel","showMinLabel","chartLabel","fontFamily","text","family","inside","lineHeight","formatter","textBorderColor","backgroundSecondary","textBorderWidth","splitLine","zlevel","zIndex","header","options","animation","Fragment","Deploys","deploys","Object","entries","latestDeploys","environment","sort","a","b","Date","dateFinished","getTime","slice","DeployRows","deploy","key","version","Deploy","Environment","projectId","tooltipRawVersion","truncate","DeployTime","getDynamicText","fixed","date","NoDeploys","GetStarted","external","DeployContainer","fontSizeMedium","ProjectCard","loadStatsForProject","orgId","query","hasPerformance","hasProjectAccess","totalErrors","reduce","sum","totalTransactions","zeroTransactions","hasFirstEvent","Boolean","firstTransactionEvent","projectLink","features","includes","StyledProjectCard","CardHeader","HeaderRow","StyledIdBadge","avatarSize","to","SummaryLinks","tn","TransactionsLink","position","ChartContainer","LoadingCard","ProjectCardContainer","createReactClass","mixins","Reflux","listenTo","ProjectsStatsStore","getInitialState","projectDetails","onProjectStoreUpdate","itemsBySlug","render","background","borderRadius","dropShadowLight","IdBadge","subText","formText","Link","withOrganization","withApi","TeamMembers","teamId","renderBody","members","users","user","AsyncComponent","TeamSection","showBorder","access","hasTeamAccess","TeamSectionWrapper","TeamTitleBar","TeamName","ProjectCards","PageHeading","Dashboard","reset","params","message","filteredTeams","team1","team2","localeCompare","uniqBy","flatten","teamObj","favorites","isBookmarked","canCreateProjects","hasTeamAdminAccess","showEmptyMessage","showResources","ProjectsHeader","disabled","icon","isCircled","once","debounce","offset","TeamLink","sortProjects","OrganizationDashboard","OrganizationDashboardWrapper","withProfiler"],"mappings":"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","file":"ProjectsDashboard.js","sourcesContent":["import React, {FunctionComponent} from 'react';\nimport DocumentTitle from 'react-document-title';\n\ntype DocumentTitleProps = {\n  // Main page title\n  title: string;\n  // Organization or project slug to give title some context\n  objSlug: string;\n  children?: React.ReactNode;\n};\n\nconst SentryDocumentTitle: FunctionComponent<DocumentTitleProps> = (\n  props: DocumentTitleProps\n) => {\n  const _title = `${props.title} - ${props.objSlug} - Sentry`;\n  return <DocumentTitle title={_title}>{props.children}</DocumentTitle>;\n};\n\nexport default SentryDocumentTitle;\n","import {t} from 'app/locale';\nimport {aggregateOutputType} from 'app/utils/discover/fields';\nimport {\n  DAY,\n  formatAbbreviatedNumber,\n  formatPercentage,\n  getDuration,\n  HOUR,\n  MINUTE,\n  SECOND,\n  WEEK,\n} from 'app/utils/formatters';\n\n/**\n * Formatter for chart tooltips that handle a variety of discover result values\n */\nexport function tooltipFormatter(value: number, seriesName: string = ''): string {\n  switch (aggregateOutputType(seriesName)) {\n    case 'integer':\n    case 'number':\n      return value.toLocaleString();\n    case 'percentage':\n      return formatPercentage(value, 2);\n    case 'duration':\n      return getDuration(value / 1000, 2, true);\n    default:\n      return value.toString();\n  }\n}\n\n/**\n * Formatter for chart axis labels that handle a variety of discover result values\n * This function is *very similar* to tooltipFormatter but outputs data with less precision.\n */\nexport function axisLabelFormatter(\n  value: number,\n  seriesName: string,\n  abbreviation: boolean = false\n): string {\n  switch (aggregateOutputType(seriesName)) {\n    case 'integer':\n    case 'number':\n      return abbreviation ? formatAbbreviatedNumber(value) : value.toLocaleString();\n    case 'percentage':\n      return formatPercentage(value, 0);\n    case 'duration':\n      return axisDuration(value);\n    default:\n      return value.toString();\n  }\n}\n\n/**\n * Specialized duration formatting for axis labels.\n * In that context we are ok sacrificing accuracy for more\n * consistent sizing.\n *\n * @param value Number of milliseconds to format.\n */\nexport function axisDuration(value: number): string {\n  if (value === 0) {\n    return '0';\n  }\n  if (value >= WEEK) {\n    const label = (value / WEEK).toFixed(0);\n    return t('%swk', label);\n  }\n  if (value >= DAY) {\n    const label = (value / DAY).toFixed(0);\n    return t('%sd', label);\n  }\n  if (value >= HOUR) {\n    const label = (value / HOUR).toFixed(0);\n    return t('%shr', label);\n  }\n  if (value >= MINUTE) {\n    const label = (value / MINUTE).toFixed(0);\n    return t('%smin', label);\n  }\n  if (value >= SECOND) {\n    const label = (value / SECOND).toFixed(0);\n    return t('%ss', label);\n  }\n  const label = (value / SECOND).toFixed(1);\n  return t('%ss', label);\n}\n","module.exports = __webpack_public_path__ + \"breadcrumbs-generic.8e69b7.svg\";","module.exports = __webpack_public_path__ + \"code-arguments-tags-mirrored.064162.svg\";","module.exports = __webpack_public_path__ + \"releases.0588cc.svg\";","import React from 'react';\n\nimport {Client} from 'app/api';\nimport ConfigStore from 'app/stores/configStore';\nimport {Organization, Project, Team, TeamWithProjects} from 'app/types';\nimport getDisplayName from 'app/utils/getDisplayName';\nimport getProjectsByTeams from 'app/utils/getProjectsByTeams';\n\nimport {metric} from './analytics';\n\n// We require these props when using this HOC\ntype DependentProps = {\n  api: Client;\n  organization: Organization;\n};\n\ntype InjectedTeamsProps = {\n  teams: TeamWithProjects[];\n  loadingTeams: boolean;\n  error: Error | null;\n};\n\nconst withTeamsForUser = <P extends InjectedTeamsProps>(\n  WrappedComponent: React.ComponentType<P>\n) =>\n  class extends React.Component<\n    Omit<P, keyof InjectedTeamsProps> & Partial<InjectedTeamsProps> & DependentProps,\n    InjectedTeamsProps\n  > {\n    static displayName = `withUsersTeams(${getDisplayName(WrappedComponent)})`;\n\n    state = {\n      teams: [],\n      loadingTeams: true,\n      error: null,\n    };\n\n    componentDidMount() {\n      this.fetchTeams();\n    }\n\n    async fetchTeams() {\n      this.setState({\n        loadingTeams: true,\n      });\n\n      try {\n        metric.mark({name: 'user-teams-fetch-start'});\n        const teamsWithProjects: TeamWithProjects[] = await this.props.api.requestPromise(\n          this.getUsersTeamsEndpoint()\n        );\n        this.setState(\n          {\n            teams: teamsWithProjects,\n            loadingTeams: false,\n          },\n          () => {\n            metric.measure({\n              name: 'app.component.perf',\n              start: 'user-teams-fetch-start',\n              data: {\n                name: 'user-teams',\n                route: '/organizations/:orgid/user-teams',\n                organization_id: parseInt(this.props.organization.id, 10),\n              },\n            });\n          }\n        );\n      } catch (error) {\n        this.setState({\n          error,\n          loadingTeams: false,\n        });\n      }\n    }\n\n    populateTeamsWithProjects(teams: Team[], projects: Project[]) {\n      const {isSuperuser} = ConfigStore.get('user');\n      const {projectsByTeam} = getProjectsByTeams(teams, projects, isSuperuser);\n      const teamsWithProjects: TeamWithProjects[] = teams.map(team => {\n        const teamProjects = projectsByTeam[team.slug] || [];\n        return {...team, projects: teamProjects};\n      });\n      this.setState({\n        teams: teamsWithProjects,\n        loadingTeams: false,\n      });\n    }\n\n    getUsersTeamsEndpoint() {\n      return `/organizations/${this.props.organization.slug}/user-teams/`;\n    }\n\n    render() {\n      return <WrappedComponent {...(this.props as P & DependentProps)} {...this.state} />;\n    }\n  };\n\nexport default withTeamsForUser;\n","import {Project, Team} from 'app/types';\n\nexport default function getProjectsByTeams(\n  teams: Team[],\n  projects: Project[],\n  isSuperuser: boolean = false\n): {projectsByTeam: {[teamSlug: string]: Project[]}; teamlessProjects: Project[]} {\n  const projectsByTeam = {};\n  const teamlessProjects: Project[] = [];\n  let usersTeams = new Set(teams.filter(team => team.isMember).map(team => team.slug));\n\n  if (usersTeams.size === 0 && isSuperuser) {\n    usersTeams = new Set(teams.map(team => team.slug));\n  }\n\n  projects.forEach(project => {\n    if (!project.teams.length && project.isMember) {\n      teamlessProjects.push(project);\n    } else {\n      project.teams.forEach(team => {\n        if (!usersTeams.has(team.slug)) {\n          return;\n        }\n        if (!projectsByTeam.hasOwnProperty(team.slug)) {\n          projectsByTeam[team.slug] = [];\n        }\n        projectsByTeam[team.slug].push(project);\n      });\n    }\n  });\n\n  return {projectsByTeam, teamlessProjects};\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport ExternalLink from 'app/components/links/externalLink';\nimport {Panel} from 'app/components/panels';\nimport space from 'app/styles/space';\nimport {analytics} from 'app/utils/analytics';\n\ntype Props = {\n  title: string;\n  link: string;\n  imgUrl: string;\n};\n\nconst ResourceCard = ({title, link, imgUrl}: Props) => (\n  <ResourceCardWrapper\n    onClick={() => analytics('orgdash.resource_clicked', {link, title})}\n  >\n    <StyledLink href={link}>\n      <StyledImg src={imgUrl} alt={title} />\n      <StyledTitle>{title}</StyledTitle>\n    </StyledLink>\n  </ResourceCardWrapper>\n);\n\nexport default ResourceCard;\n\nconst ResourceCardWrapper = styled(Panel)`\n  display: flex;\n  flex: 1;\n  align-items: center;\n  padding: ${space(3)};\n  margin-bottom: 0;\n`;\n\nconst StyledLink = styled(ExternalLink)`\n  flex: 1;\n`;\n\nconst StyledImg = styled('img')`\n  display: block;\n  margin: 0 auto ${space(3)} auto;\n  height: 160px;\n`;\n\nconst StyledTitle = styled('div')`\n  color: ${p => p.theme.textColor};\n  font-size: ${p => p.theme.fontSizeLarge};\n  text-align: center;\n  font-weight: bold;\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport breadcrumbsImg from 'sentry-images/spot/breadcrumbs-generic.svg';\nimport docsImg from 'sentry-images/spot/code-arguments-tags-mirrored.svg';\nimport releasesImg from 'sentry-images/spot/releases.svg';\n\nimport PageHeading from 'app/components/pageHeading';\nimport ResourceCard from 'app/components/resourceCard';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {Organization} from 'app/types';\nimport {trackAnalyticsEvent} from 'app/utils/analytics';\n\ntype Props = {\n  organization: Organization;\n};\n\nclass Resources extends React.Component<Props> {\n  componentDidMount() {\n    const {organization} = this.props;\n    trackAnalyticsEvent({\n      eventKey: 'orgdash.resources_shown',\n      eventName: 'Projects Dashboard: Resources Shown',\n      organization: organization.id,\n    });\n  }\n\n  render() {\n    return (\n      <ResourcesWrapper data-test-id=\"resources\">\n        <PageHeading withMargins>{t('Resources')}</PageHeading>\n        <ResourceCards>\n          <ResourceCard\n            link=\"https://blog.sentry.io/2018/03/06/the-sentry-workflow\"\n            imgUrl={releasesImg}\n            title={t('The Sentry Workflow')}\n          />\n          <ResourceCard\n            link=\"https://sentry.io/vs/logging/\"\n            imgUrl={breadcrumbsImg}\n            title={t('Sentry vs Logging')}\n          />\n          <ResourceCard\n            link=\"https://docs.sentry.io/\"\n            imgUrl={docsImg}\n            title={t('Docs')}\n          />\n        </ResourceCards>\n      </ResourcesWrapper>\n    );\n  }\n}\n\nexport default Resources;\n\nconst ResourcesWrapper = styled('div')`\n  border-top: 1px solid ${p => p.theme.border};\n  padding: 25px 30px 10px 30px;\n`;\n\nconst ResourceCards = styled('div')`\n  display: grid;\n  grid-template-columns: minmax(100px, 1fr);\n  grid-gap: ${space(3)};\n\n  @media (min-width: ${p => p.theme.breakpoints[1]}) {\n    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\n  }\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {t} from 'app/locale';\n\ntype Props = {\n  seriesCount: number;\n};\n\nconst NoEvents = ({seriesCount}: Props) => (\n  <Container>\n    <EmptyText seriesCount={seriesCount}>{t('No activity yet.')}</EmptyText>\n  </Container>\n);\n\nexport default NoEvents;\n\nconst Container = styled('div')`\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n`;\n\nconst EmptyText = styled('div')<Props>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-left: 4px;\n  margin-right: 4px;\n  height: ${p => (p.seriesCount > 1 ? '90px' : '150px')};\n  color: ${p => p.theme.gray300};\n`;\n","import React from 'react';\n\nimport BaseChart from 'app/components/charts/baseChart';\nimport {t} from 'app/locale';\nimport {Project} from 'app/types';\nimport {axisLabelFormatter} from 'app/utils/discover/charts';\nimport theme from 'app/utils/theme';\n\nimport NoEvents from './noEvents';\n\ntype BaseChartProps = React.ComponentProps<typeof BaseChart>;\n\ntype Props = {\n  firstEvent: boolean;\n  stats: Project['stats'];\n  transactionStats?: Project['transactionStats'];\n};\n\nconst Chart = ({firstEvent, stats, transactionStats}: Props) => {\n  const series: BaseChartProps['series'] = [];\n  const hasTransactions = transactionStats !== undefined;\n\n  if (transactionStats) {\n    const transactionSeries = transactionStats.map(([timestamp, value]) => [\n      timestamp * 1000,\n      value,\n    ]);\n\n    series.push({\n      cursor: 'normal' as const,\n      name: t('Transactions'),\n      type: 'bar',\n      data: transactionSeries,\n      barMinHeight: 1,\n      xAxisIndex: 1,\n      yAxisIndex: 1,\n      itemStyle: {\n        color: theme.gray200,\n        opacity: 0.8,\n        emphasis: {\n          color: theme.gray200,\n          opacity: 1.0,\n        },\n      },\n    });\n  }\n\n  if (stats) {\n    series.push({\n      cursor: 'normal' as const,\n      name: t('Errors'),\n      type: 'bar',\n      data: stats.map(([timestamp, value]) => [timestamp * 1000, value]),\n      barMinHeight: 1,\n      xAxisIndex: 0,\n      yAxisIndex: 0,\n      itemStyle: {\n        color: theme.purple300,\n        opacity: 0.6,\n        emphasis: {\n          color: theme.purple300,\n          opacity: 0.8,\n        },\n      },\n    });\n  }\n  const grid = hasTransactions\n    ? [\n        {\n          top: 10,\n          bottom: 60,\n          left: 2,\n          right: 2,\n        },\n        {\n          top: 105,\n          bottom: 0,\n          left: 2,\n          right: 2,\n        },\n      ]\n    : [\n        {\n          top: 10,\n          bottom: 0,\n          left: 2,\n          right: 2,\n        },\n      ];\n\n  const chartOptions = {\n    series,\n    colors: [],\n    height: 150,\n    isGroupedByDate: true,\n    showTimeInTooltip: true,\n    grid,\n    tooltip: {\n      trigger: 'axis' as const,\n    },\n    xAxes: Array.from(new Array(series.length)).map((_i, index) => ({\n      gridIndex: index,\n      boundaryGap: true,\n      axisLine: {\n        show: false,\n      },\n      axisTick: {\n        show: false,\n      },\n      axisLabel: {\n        show: false,\n      },\n      axisPointer: {\n        type: 'line' as const,\n        label: {\n          show: false,\n        },\n        lineStyle: {\n          width: 0,\n        },\n      },\n    })),\n    yAxes: Array.from(new Array(series.length)).map((_i, index) => ({\n      gridIndex: index,\n      interval: Infinity,\n      max(value: {max: number}) {\n        // This keeps small datasets from looking 'scary'\n        // by having full bars for < 10 values.\n        return Math.max(10, value.max);\n      },\n      axisLabel: {\n        margin: 2,\n        showMaxLabel: true,\n        showMinLabel: false,\n        color: theme.chartLabel,\n        fontFamily: theme.text.family,\n        inside: true,\n        lineHeight: 12,\n        formatter: (value: number) => axisLabelFormatter(value, 'count()', true),\n        textBorderColor: theme.backgroundSecondary,\n        textBorderWidth: 1,\n      },\n      splitLine: {\n        show: false,\n      },\n      zlevel: theme.zIndex.header,\n    })),\n    axisPointer: {\n      // Link each x-axis together.\n      link: [{xAxisIndex: [0, 1]}],\n    },\n    options: {\n      animation: false,\n    },\n  };\n\n  return (\n    <React.Fragment>\n      <BaseChart {...chartOptions} />\n      {!firstEvent && <NoEvents seriesCount={series.length} />}\n    </React.Fragment>\n  );\n};\n\nexport default Chart;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport Button from 'app/components/button';\nimport TextOverflow from 'app/components/textOverflow';\nimport TimeSince from 'app/components/timeSince';\nimport Version from 'app/components/version';\nimport {IconReleases} from 'app/icons';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {Deploy as DeployType, Project} from 'app/types';\nimport getDynamicText from 'app/utils/getDynamicText';\n\nconst DEPLOY_COUNT = 2;\n\ntype Props = {\n  project: Project;\n};\n\nconst Deploys = ({project}: Props) => {\n  const flattenedDeploys = Object.entries(project.latestDeploys || {}).map(\n    ([environment, value]): Pick<\n      DeployType,\n      'version' | 'dateFinished' | 'environment'\n    > => ({environment, ...value})\n  );\n\n  const deploys = (flattenedDeploys || [])\n    .sort(\n      (a, b) => new Date(b.dateFinished).getTime() - new Date(a.dateFinished).getTime()\n    )\n    .slice(0, DEPLOY_COUNT);\n\n  if (!deploys.length) {\n    return <NoDeploys />;\n  }\n\n  return (\n    <DeployRows>\n      {deploys.map(deploy => (\n        <Deploy\n          key={`${deploy.environment}-${deploy.version}`}\n          deploy={deploy}\n          project={project}\n        />\n      ))}\n    </DeployRows>\n  );\n};\n\nexport default Deploys;\n\ntype DeployProps = Props & {\n  deploy: Pick<DeployType, 'version' | 'dateFinished' | 'environment'>;\n};\n\nconst Deploy = ({deploy, project}: DeployProps) => (\n  <React.Fragment>\n    <IconReleases size=\"sm\" />\n    <TextOverflow>\n      <Environment>{deploy.environment}</Environment>\n      <Version\n        version={deploy.version}\n        projectId={project.id}\n        tooltipRawVersion\n        truncate\n      />\n    </TextOverflow>\n\n    <DeployTime>\n      {getDynamicText({\n        fixed: '3 hours ago',\n        value: <TimeSince date={deploy.dateFinished} />,\n      })}\n    </DeployTime>\n  </React.Fragment>\n);\n\nconst NoDeploys = () => (\n  <GetStarted>\n    <Button size=\"small\" href=\"https://docs.sentry.io/learn/releases/\" external>\n      {t('Track deploys')}\n    </Button>\n  </GetStarted>\n);\nconst DeployContainer = styled('div')`\n  padding: ${space(2)};\n  height: 115px;\n`;\n\nconst DeployRows = styled(DeployContainer)`\n  display: grid;\n  grid-template-columns: 30px 1fr 1fr;\n  grid-template-rows: auto;\n  grid-column-gap: ${space(1)};\n  grid-row-gap: ${space(1)};\n  font-size: ${p => p.theme.fontSizeMedium};\n  line-height: 1.2;\n`;\n\nconst Environment = styled('div')`\n  color: ${p => p.theme.textColor};\n  margin: 0;\n`;\n\nconst DeployTime = styled('div')`\n  color: ${p => p.theme.gray300};\n  overflow: hidden;\n  text-align: right;\n  text-overflow: ellipsis;\n`;\n\nconst GetStarted = styled(DeployContainer)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport createReactClass from 'create-react-class';\nimport Reflux from 'reflux';\n\nimport {loadStatsForProject} from 'app/actionCreators/projects';\nimport {Client} from 'app/api';\nimport IdBadge from 'app/components/idBadge';\nimport Link from 'app/components/links/link';\nimport BookmarkStar from 'app/components/projects/bookmarkStar';\nimport QuestionTooltip from 'app/components/questionTooltip';\nimport {t, tn} from 'app/locale';\nimport ProjectsStatsStore from 'app/stores/projectsStatsStore';\nimport space from 'app/styles/space';\nimport {Organization, Project} from 'app/types';\nimport {formatAbbreviatedNumber} from 'app/utils/formatters';\nimport withApi from 'app/utils/withApi';\nimport withOrganization from 'app/utils/withOrganization';\n\nimport Chart from './chart';\nimport Deploys from './deploys';\n\ntype Props = {\n  api: Client;\n  organization: Organization;\n  project: Project;\n  hasProjectAccess: boolean;\n};\n\nclass ProjectCard extends React.Component<Props> {\n  componentDidMount() {\n    const {organization, project, api} = this.props;\n\n    // fetch project stats\n    loadStatsForProject(api, project.id, {\n      orgId: organization.slug,\n      projectId: project.id,\n      query: {\n        transactionStats: this.hasPerformance ? '1' : undefined,\n      },\n    });\n  }\n\n  get hasPerformance() {\n    return this.props.organization.features.includes('performance-view');\n  }\n\n  render() {\n    const {organization, project, hasProjectAccess} = this.props;\n    const {id, stats, slug, transactionStats} = project;\n    const totalErrors =\n      stats !== undefined\n        ? formatAbbreviatedNumber(stats.reduce((sum, [_, value]) => sum + value, 0))\n        : '0';\n\n    const totalTransactions =\n      transactionStats !== undefined\n        ? formatAbbreviatedNumber(\n            transactionStats.reduce((sum, [_, value]) => sum + value, 0)\n          )\n        : '0';\n    const zeroTransactions = totalTransactions === '0';\n    const hasFirstEvent = Boolean(project.firstEvent || project.firstTransactionEvent);\n    const projectLink = organization.features.includes('project-detail')\n      ? `/organizations/${organization.slug}/projects/${slug}/?project=${id}`\n      : `/organizations/${organization.slug}/issues/?project=${id}`;\n\n    return (\n      <div data-test-id={slug}>\n        {stats ? (\n          <StyledProjectCard>\n            <CardHeader>\n              <HeaderRow>\n                <StyledIdBadge\n                  project={project}\n                  avatarSize={18}\n                  displayName={\n                    hasProjectAccess ? (\n                      <Link to={projectLink}>\n                        <strong>{slug}</strong>\n                      </Link>\n                    ) : (\n                      <span>{slug}</span>\n                    )\n                  }\n                />\n                <BookmarkStar organization={organization} project={project} />\n              </HeaderRow>\n              <SummaryLinks>\n                <Link\n                  data-test-id=\"project-errors\"\n                  to={`/organizations/${organization.slug}/issues/?project=${project.id}`}\n                >\n                  {tn('%s error', '%s errors', totalErrors)}\n                </Link>\n                {this.hasPerformance && (\n                  <React.Fragment>\n                    <em>|</em>\n                    <TransactionsLink\n                      data-test-id=\"project-transactions\"\n                      to={`/organizations/${organization.slug}/performance/?project=${project.id}`}\n                    >\n                      {tn('%s transaction', '%s transactions', totalTransactions)}\n\n                      {zeroTransactions && (\n                        <QuestionTooltip\n                          title={t(\n                            'Click here to learn more about performance monitoring'\n                          )}\n                          position=\"top\"\n                          size=\"xs\"\n                        />\n                      )}\n                    </TransactionsLink>\n                  </React.Fragment>\n                )}\n              </SummaryLinks>\n            </CardHeader>\n            <ChartContainer>\n              <Chart\n                firstEvent={hasFirstEvent}\n                stats={stats}\n                transactionStats={transactionStats}\n              />\n            </ChartContainer>\n            <Deploys project={project} />\n          </StyledProjectCard>\n        ) : (\n          <LoadingCard />\n        )}\n      </div>\n    );\n  }\n}\n\ntype ContainerProps = {\n  api: Client;\n  project: Project;\n  organization: Organization;\n  hasProjectAccess: boolean;\n};\n\ntype ContainerState = {\n  projectDetails: Project | null;\n};\n\nconst ProjectCardContainer = createReactClass<ContainerProps, ContainerState>({\n  mixins: [Reflux.listenTo(ProjectsStatsStore, 'onProjectStoreUpdate') as any],\n  getInitialState(): ContainerState {\n    const {project} = this.props;\n    const initialState = ProjectsStatsStore.getInitialState() || {};\n    return {\n      projectDetails: initialState[project.slug] || null,\n    };\n  },\n  onProjectStoreUpdate(itemsBySlug: typeof ProjectsStatsStore['itemsBySlug']) {\n    const {project} = this.props;\n\n    // Don't update state if we already have stats\n    if (!itemsBySlug[project.slug]) {\n      return;\n    }\n    if (itemsBySlug[project.slug] === this.state.projectDetails) {\n      return;\n    }\n\n    this.setState({\n      projectDetails: itemsBySlug[project.slug],\n    });\n  },\n  render() {\n    const {project, ...props} = this.props;\n    const {projectDetails} = this.state;\n    return (\n      <ProjectCard\n        {...props}\n        project={{\n          ...project,\n          ...(projectDetails || {}),\n        }}\n      />\n    );\n  },\n});\n\nconst ChartContainer = styled('div')`\n  position: relative;\n  background: ${p => p.theme.backgroundSecondary};\n`;\n\nconst CardHeader = styled('div')`\n  margin: ${space(1.5)} ${space(2)};\n`;\n\nconst HeaderRow = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst StyledProjectCard = styled('div')`\n  background-color: ${p => p.theme.background};\n  border: 1px solid ${p => p.theme.border};\n  border-radius: ${p => p.theme.borderRadius};\n  box-shadow: ${p => p.theme.dropShadowLight};\n`;\n\nconst LoadingCard = styled('div')`\n  border: 1px solid transparent;\n  background-color: ${p => p.theme.backgroundSecondary};\n  height: 334px;\n`;\n\nconst StyledIdBadge = styled(IdBadge)`\n  overflow: hidden;\n  white-space: nowrap;\n`;\n\nconst SummaryLinks = styled('div')`\n  display: flex;\n  align-items: center;\n\n  color: ${p => p.theme.subText};\n  font-size: ${p => p.theme.fontSizeMedium};\n\n  /* Need to offset for the project icon and margin */\n  margin-left: 26px;\n\n  a {\n    color: ${p => p.theme.formText};\n    :hover {\n      color: ${p => p.theme.subText};\n    }\n  }\n  em {\n    font-style: normal;\n    margin: 0 ${space(0.5)};\n  }\n`;\n\nconst TransactionsLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  > span {\n    margin-left: ${space(0.5)};\n  }\n`;\n\nexport {ProjectCard};\nexport default withOrganization(withApi(ProjectCardContainer));\n","import React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\nimport AvatarList from 'app/components/avatar/avatarList';\nimport {Member} from 'app/types';\n\ntype Props = AsyncComponent['props'] & {\n  teamId: string;\n  orgId: string;\n};\n\ntype State = AsyncComponent['state'] & {\n  members?: Member[];\n};\n\nclass TeamMembers extends AsyncComponent<Props, State> {\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {orgId, teamId} = this.props;\n    return [['members', `/teams/${orgId}/${teamId}/members/`]];\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderBody(): React.ReactNode {\n    const {members} = this.state;\n    if (!members) {\n      return null;\n    }\n\n    const users = members.filter(({user}) => !!user).map(({user}) => user);\n    return <AvatarList users={users} />;\n  }\n}\n\nexport default TeamMembers;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport PageHeading from 'app/components/pageHeading';\nimport space from 'app/styles/space';\nimport {Project, Scope, Team} from 'app/types';\n\nimport ProjectCard from './projectCard';\nimport TeamMembers from './teamMembers';\n\ntype Props = {\n  team: Team;\n  orgId: string;\n  showBorder: boolean;\n  access: Set<Scope>;\n  title: React.ReactNode;\n  projects: Project[];\n};\n\nconst TeamSection = ({team, projects, title, showBorder, orgId, access}: Props) => {\n  const hasTeamAccess = access.has('team:read');\n  const hasProjectAccess = access.has('project:read');\n\n  return (\n    <TeamSectionWrapper data-test-id=\"team\" showBorder={showBorder}>\n      <TeamTitleBar>\n        <TeamName>{title}</TeamName>\n        {hasTeamAccess && team && <TeamMembers teamId={team.slug} orgId={orgId} />}\n      </TeamTitleBar>\n      <ProjectCards>\n        {projects.map(project => (\n          <ProjectCard\n            data-test-id={project.slug}\n            key={project.slug}\n            project={project}\n            hasProjectAccess={hasProjectAccess}\n          />\n        ))}\n      </ProjectCards>\n    </TeamSectionWrapper>\n  );\n};\n\nconst ProjectCards = styled('div')`\n  display: grid;\n  grid-template-columns: minmax(100px, 1fr);\n  grid-gap: ${space(3)};\n\n  @media (min-width: ${p => p.theme.breakpoints[0]}) {\n    grid-template-columns: repeat(2, minmax(100px, 1fr));\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints[2]}) {\n    grid-template-columns: repeat(3, minmax(100px, 1fr));\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints[3]}) {\n    grid-template-columns: repeat(4, minmax(100px, 1fr));\n  }\n`;\n\nconst TeamSectionWrapper = styled('div')<{showBorder: boolean}>`\n  border-bottom: ${p => (p.showBorder ? '1px solid ' + p.theme.border : 0)};\n  padding: 0 ${space(4)} ${space(4)};\n`;\n\nconst TeamTitleBar = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: ${space(3)} 0 ${space(2)};\n`;\n\nconst TeamName = styled(PageHeading)`\n  font-size: 20px;\n  line-height: 24px; /* We need this so that header doesn't flicker when lazy loading because avatarList height > this */\n`;\n\nexport default TeamSection;\n","import React from 'react';\nimport LazyLoad from 'react-lazyload';\nimport {Link, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport {withProfiler} from '@sentry/react';\nimport flatten from 'lodash/flatten';\nimport uniqBy from 'lodash/uniqBy';\n\nimport {Client} from 'app/api';\nimport Button from 'app/components/button';\nimport IdBadge from 'app/components/idBadge';\nimport LoadingError from 'app/components/loadingError';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport NoProjectMessage from 'app/components/noProjectMessage';\nimport PageHeading from 'app/components/pageHeading';\nimport SentryDocumentTitle from 'app/components/sentryDocumentTitle';\nimport {IconAdd} from 'app/icons';\nimport {t} from 'app/locale';\nimport ProjectsStatsStore from 'app/stores/projectsStatsStore';\nimport space from 'app/styles/space';\nimport {Organization, TeamWithProjects} from 'app/types';\nimport {sortProjects} from 'app/utils';\nimport withApi from 'app/utils/withApi';\nimport withOrganization from 'app/utils/withOrganization';\nimport withTeamsForUser from 'app/utils/withTeamsForUser';\n\nimport Resources from './resources';\nimport TeamSection from './teamSection';\n\ntype Props = {\n  api: Client;\n  organization: Organization;\n  teams: TeamWithProjects[];\n  loadingTeams: boolean;\n  error: Error | null;\n} & RouteComponentProps<{orgId: string}, {}>;\n\nclass Dashboard extends React.Component<Props> {\n  componentWillUnmount() {\n    ProjectsStatsStore.reset();\n  }\n\n  render() {\n    const {teams, params, organization, loadingTeams, error} = this.props;\n\n    if (loadingTeams) {\n      return <LoadingIndicator />;\n    }\n\n    if (error) {\n      return <LoadingError message=\"An error occurred while fetching your projects\" />;\n    }\n\n    const filteredTeams = teams.filter(team => team.projects.length);\n    filteredTeams.sort((team1, team2) => team1.slug.localeCompare(team2.slug));\n\n    const projects = uniqBy(flatten(teams.map(teamObj => teamObj.projects)), 'id');\n    const favorites = projects.filter(project => project.isBookmarked);\n\n    const access = new Set(organization.access);\n    const canCreateProjects = access.has('project:admin');\n    const hasTeamAdminAccess = access.has('team:admin');\n\n    const showEmptyMessage = projects.length === 0 && favorites.length === 0;\n    const showResources = projects.length === 1 && !projects[0].firstEvent;\n\n    if (showEmptyMessage) {\n      return (\n        <NoProjectMessage organization={organization} projects={projects}>\n          {null}\n        </NoProjectMessage>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <SentryDocumentTitle\n          title={t('Projects Dashboard')}\n          objSlug={organization.slug}\n        />\n        {projects.length > 0 && (\n          <ProjectsHeader>\n            <PageHeading>Projects</PageHeading>\n            <Button\n              size=\"small\"\n              disabled={!canCreateProjects}\n              title={\n                !canCreateProjects\n                  ? t('You do not have permission to create projects')\n                  : undefined\n              }\n              to={`/organizations/${organization.slug}/projects/new/`}\n              icon={<IconAdd size=\"xs\" isCircled />}\n              data-test-id=\"create-project\"\n            >\n              {t('Create Project')}\n            </Button>\n          </ProjectsHeader>\n        )}\n\n        {filteredTeams.map((team, index) => {\n          const showBorder = index !== teams.length - 1;\n          return (\n            <LazyLoad key={team.slug} once debounce={50} height={300} offset={300}>\n              <TeamSection\n                orgId={params.orgId}\n                team={team}\n                showBorder={showBorder}\n                title={\n                  hasTeamAdminAccess ? (\n                    <TeamLink to={`/settings/${organization.slug}/teams/${team.slug}/`}>\n                      <IdBadge team={team} avatarSize={22} />\n                    </TeamLink>\n                  ) : (\n                    <IdBadge team={team} avatarSize={22} />\n                  )\n                }\n                projects={sortProjects(team.projects)}\n                access={access}\n              />\n            </LazyLoad>\n          );\n        })}\n\n        {showResources && <Resources organization={organization} />}\n      </React.Fragment>\n    );\n  }\n}\n\nconst OrganizationDashboard = (props: Props) => (\n  <OrganizationDashboardWrapper>\n    <Dashboard {...props} />\n  </OrganizationDashboardWrapper>\n);\n\nconst TeamLink = styled(Link)`\n  display: flex;\n  align-items: center;\n`;\n\nconst ProjectsHeader = styled('div')`\n  padding: ${space(3)} ${space(4)} 0 ${space(4)};\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst OrganizationDashboardWrapper = styled('div')`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n\nexport {Dashboard};\nexport default withApi(\n  withOrganization(withTeamsForUser(withProfiler(OrganizationDashboard)))\n);\n"],"sourceRoot":""}