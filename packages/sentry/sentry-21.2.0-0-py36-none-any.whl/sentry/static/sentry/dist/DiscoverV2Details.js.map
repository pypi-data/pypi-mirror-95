{"version":3,"sources":["webpack:///./app/views/eventsV2/breadcrumb.tsx","webpack:///./app/views/eventsV2/eventDetails/linkedIssue.tsx","webpack:///./app/views/eventsV2/eventDetails/content.tsx","webpack:///./app/views/eventsV2/eventDetails/index.tsx"],"names":["DiscoverBreadcrumb","crumbs","this","props","eventView","event","organization","location","discoverTarget","features","includes","pathname","getDiscoverLandingUrl","query","generateBlankQueryStringObject","getGlobalSelectionQuery","push","to","label","t","isValid","getResultsViewUrlTarget","slug","name","getCrumbs","React","Component","defaultProps","undefined","LinkedIssue","groupId","height","bottomGutter","error","disableLog","disableReport","errors","state","hasNotFound","Object","values","find","resp","status","type","icon","size","eventId","group","issueUrl","permalink","Section","StyledIssueCard","IssueCardHeader","StyledLink","data-test-id","StyledShortId","shortId","avatar","project","avatarSize","hideName","StyledSeenByList","seenBy","maxVisibleAvatars","IssueCardBody","statsPeriod","data","IssueCardFooter","lastSeen","firstSeen","AsyncComponent","space","p","theme","border","borderRadius","Link","backgroundSecondary","SeenByList","ShortId","fontSizeMedium","textColor","gray300","fontSizeSmall","EventDetailsContent","loading","reloading","isSidebarVisible","toggleSidebar","setState","generateTagKey","tag","key","FIELD_TAGS","generateTagUrl","eventReference","id","tagKey","getExpandedResults","value","params","eventSlug","getEventsAPIPayload","field","renderContent","trackAnalyticsEvent","eventKey","eventName","event_type","organization_id","parseInt","transactionName","tags","transactionSummaryTarget","transactionSummaryRouteWithQuery","orgSlug","transaction","projectID","hasQuickTraceView","eventJsonUrl","projectId","eventID","Fragment","gap","onClick","href","external","bytes","hasFeature","disabled","priority","fullWidth","orgId","slugs","projects","initiallyLoaded","getViewChildTransactionTarget","childTransactionProps","eventDetailsRoute","generateQueryStringObject","showExampleCommit","showTagSummary","groupID","generateUrl","notFound","permissionDenied","message","title","generateTitle","objSlug","split","EventHeader","getMessage","EventHeaderContainer","TitleWrapper","MessageWrapper","breakpoints","headerFontSize","EventDetails","getEventSlug","trim","getEventView","EventView","fromLocation","getDocumentTitle","String","length","documentTitle","join","StyledPageContent","withOrganization","PageContent"],"mappings":"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","file":"DiscoverV2Details.js","sourcesContent":["import React from 'react';\nimport {Location} from 'history';\n\nimport Breadcrumbs, {Crumb} from 'app/components/breadcrumbs';\nimport {t} from 'app/locale';\nimport {Organization} from 'app/types';\nimport {Event} from 'app/types/event';\nimport EventView from 'app/utils/discover/eventView';\nimport {getDiscoverLandingUrl} from 'app/utils/discover/urls';\n\ntype DefaultProps = {\n  event: Event | undefined;\n};\n\ntype Props = DefaultProps & {\n  eventView: EventView;\n  organization: Organization;\n  location: Location;\n};\n\nclass DiscoverBreadcrumb extends React.Component<Props> {\n  static defaultProps: DefaultProps = {\n    event: undefined,\n  };\n\n  getCrumbs() {\n    const crumbs: Crumb[] = [];\n    const {eventView, event, organization, location} = this.props;\n    const discoverTarget = organization.features.includes('discover-query')\n      ? {\n          pathname: getDiscoverLandingUrl(organization),\n          query: {\n            ...location.query,\n            ...eventView.generateBlankQueryStringObject(),\n            ...eventView.getGlobalSelectionQuery(),\n          },\n        }\n      : null;\n\n    crumbs.push({\n      to: discoverTarget,\n      label: t('Discover'),\n    });\n\n    if (eventView && eventView.isValid()) {\n      crumbs.push({\n        to: eventView.getResultsViewUrlTarget(organization.slug),\n        label: eventView.name || '',\n      });\n    }\n\n    if (event) {\n      crumbs.push({\n        label: t('Event Detail'),\n      });\n    }\n\n    return crumbs;\n  }\n\n  render() {\n    return <Breadcrumbs crumbs={this.getCrumbs()} />;\n  }\n}\n\nexport default DiscoverBreadcrumb;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport Alert from 'app/components/alert';\nimport AsyncComponent from 'app/components/asyncComponent';\nimport {SectionHeading} from 'app/components/charts/styles';\nimport Times from 'app/components/group/times';\nimport ProjectBadge from 'app/components/idBadge/projectBadge';\nimport Link from 'app/components/links/link';\nimport Placeholder from 'app/components/placeholder';\nimport SeenByList from 'app/components/seenByList';\nimport ShortId from 'app/components/shortId';\nimport GroupChart from 'app/components/stream/groupChart';\nimport {IconWarning} from 'app/icons';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {Group} from 'app/types';\n\ntype Props = {\n  groupId: string;\n  eventId: string;\n};\n\ntype State = {\n  group: Group;\n};\n\nclass LinkedIssue extends AsyncComponent<\n  Props & AsyncComponent['props'],\n  State & AsyncComponent['state']\n> {\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {groupId} = this.props;\n    const groupUrl = `/issues/${groupId}/`;\n\n    return [['group', groupUrl]];\n  }\n\n  renderLoading() {\n    return <Placeholder height=\"120px\" bottomGutter={2} />;\n  }\n\n  renderError(error?: Error, disableLog = false, disableReport = false): React.ReactNode {\n    const {errors} = this.state;\n    const hasNotFound = Object.values(errors).find(resp => resp && resp.status === 404);\n    if (hasNotFound) {\n      return (\n        <Alert type=\"warning\" icon={<IconWarning size=\"md\" />}>\n          {t('The linked issue cannot be found. It may have been deleted, or merged.')}\n        </Alert>\n      );\n    }\n\n    return super.renderError(error, disableLog, disableReport);\n  }\n\n  renderBody() {\n    const {eventId} = this.props;\n    const {group} = this.state;\n    const issueUrl = `${group.permalink}events/${eventId}/`;\n\n    return (\n      <Section>\n        <SectionHeading>{t('Event Issue')}</SectionHeading>\n        <StyledIssueCard>\n          <IssueCardHeader>\n            <StyledLink to={issueUrl} data-test-id=\"linked-issue\">\n              <StyledShortId\n                shortId={group.shortId}\n                avatar={<ProjectBadge project={group.project} avatarSize={16} hideName />}\n              />\n            </StyledLink>\n            <StyledSeenByList seenBy={group.seenBy} maxVisibleAvatars={5} />\n          </IssueCardHeader>\n          <IssueCardBody>\n            <GroupChart statsPeriod=\"30d\" data={group} height={56} />\n          </IssueCardBody>\n          <IssueCardFooter>\n            <Times lastSeen={group.lastSeen} firstSeen={group.firstSeen} />\n          </IssueCardFooter>\n        </StyledIssueCard>\n      </Section>\n    );\n  }\n}\n\nconst Section = styled('div')`\n  margin-bottom: ${space(4)};\n`;\n\nconst StyledIssueCard = styled('div')`\n  border: 1px solid ${p => p.theme.border};\n  border-radius: ${p => p.theme.borderRadius};\n`;\n\nconst IssueCardHeader = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: ${space(1)};\n`;\n\nconst StyledLink = styled(Link)`\n  justify-content: flex-start;\n`;\n\nconst IssueCardBody = styled('div')`\n  background: ${p => p.theme.backgroundSecondary};\n  padding-top: ${space(1)};\n`;\n\nconst StyledSeenByList = styled(SeenByList)`\n  margin: 0;\n`;\n\nconst StyledShortId = styled(ShortId)`\n  font-size: ${p => p.theme.fontSizeMedium};\n  color: ${p => p.theme.textColor};\n`;\n\nconst IssueCardFooter = styled('div')`\n  color: ${p => p.theme.gray300};\n  font-size: ${p => p.theme.fontSizeSmall};\n  padding: ${space(0.5)} ${space(1)};\n`;\n\nexport default LinkedIssue;\n","import React from 'react';\nimport {Params} from 'react-router/lib/Router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport Feature from 'app/components/acl/feature';\nimport AsyncComponent from 'app/components/asyncComponent';\nimport Button from 'app/components/button';\nimport ButtonBar from 'app/components/buttonBar';\nimport NotFound from 'app/components/errors/notFound';\nimport EventOrGroupTitle from 'app/components/eventOrGroupTitle';\nimport {BorderlessEventEntries} from 'app/components/events/eventEntries';\nimport EventMessage from 'app/components/events/eventMessage';\nimport EventMetadata from 'app/components/events/eventMetadata';\nimport EventVitals from 'app/components/events/eventVitals';\nimport * as SpanEntryContext from 'app/components/events/interfaces/spans/context';\nimport OpsBreakdown from 'app/components/events/opsBreakdown';\nimport RootSpanStatus from 'app/components/events/rootSpanStatus';\nimport FileSize from 'app/components/fileSize';\nimport * as Layout from 'app/components/layouts/thirds';\nimport LoadingError from 'app/components/loadingError';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport SentryDocumentTitle from 'app/components/sentryDocumentTitle';\nimport TagsTable from 'app/components/tagsTable';\nimport {IconOpen} from 'app/icons';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {Organization, Project} from 'app/types';\nimport {Event, EventTag} from 'app/types/event';\nimport {trackAnalyticsEvent} from 'app/utils/analytics';\nimport EventView from 'app/utils/discover/eventView';\nimport {FIELD_TAGS} from 'app/utils/discover/fields';\nimport {eventDetailsRoute} from 'app/utils/discover/urls';\nimport {getMessage} from 'app/utils/events';\nimport Projects from 'app/utils/projects';\nimport EventMetas from 'app/views/performance/transactionDetails/eventMetas';\nimport {transactionSummaryRouteWithQuery} from 'app/views/performance/transactionSummary/utils';\n\nimport DiscoverBreadcrumb from '../breadcrumb';\nimport {generateTitle, getExpandedResults} from '../utils';\n\nimport LinkedIssue from './linkedIssue';\n\ntype Props = {\n  organization: Organization;\n  location: Location;\n  params: Params;\n  eventSlug: string;\n  eventView: EventView;\n};\n\ntype State = {\n  event: Event | undefined;\n  isSidebarVisible: boolean;\n} & AsyncComponent['state'];\n\nclass EventDetailsContent extends AsyncComponent<Props, State> {\n  state: State = {\n    // AsyncComponent state\n    loading: true,\n    reloading: false,\n    error: false,\n    errors: [],\n    event: undefined,\n\n    // local state\n    isSidebarVisible: true,\n  };\n\n  toggleSidebar = () => {\n    this.setState({isSidebarVisible: !this.state.isSidebarVisible});\n  };\n\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {organization, params, location, eventView} = this.props;\n    const {eventSlug} = params;\n\n    const query = eventView.getEventsAPIPayload(location);\n\n    // Fields aren't used, reduce complexity by omitting from query entirely\n    query.field = [];\n\n    const url = `/organizations/${organization.slug}/events/${eventSlug}/`;\n\n    // Get a specific event. This could be coming from\n    // a paginated group or standalone event.\n    return [['event', url, {query}]];\n  }\n\n  get projectId() {\n    return this.props.eventSlug.split(':')[0];\n  }\n\n  generateTagKey = (tag: EventTag) => {\n    // Some tags may be normalized from context, but not all of them are.\n    // This supports a user making a custom tag with the same name as one\n    // that comes from context as all of these are also tags.\n    if (tag.key in FIELD_TAGS) {\n      return `tags[${tag.key}]`;\n    }\n    return tag.key;\n  };\n\n  generateTagUrl = (tag: EventTag) => {\n    const {eventView, organization} = this.props;\n    const {event} = this.state;\n    if (!event) {\n      return '';\n    }\n    const eventReference = {...event};\n    if (eventReference.id) {\n      delete (eventReference as any).id;\n    }\n    const tagKey = this.generateTagKey(tag);\n    const nextView = getExpandedResults(eventView, {[tagKey]: tag.value}, eventReference);\n    return nextView.getResultsViewUrlTarget(organization.slug);\n  };\n\n  renderBody() {\n    const {event} = this.state;\n\n    if (!event) {\n      return <NotFound />;\n    }\n\n    return this.renderContent(event);\n  }\n\n  renderContent(event: Event) {\n    const {organization, location, eventView} = this.props;\n    const {isSidebarVisible} = this.state;\n\n    // metrics\n    trackAnalyticsEvent({\n      eventKey: 'discover_v2.event_details',\n      eventName: 'Discoverv2: Opened Event Details',\n      event_type: event.type,\n      organization_id: parseInt(organization.id, 10),\n    });\n\n    const transactionName = event.tags.find(tag => tag.key === 'transaction')?.value;\n    const transactionSummaryTarget =\n      event.type === 'transaction' && transactionName\n        ? transactionSummaryRouteWithQuery({\n            orgSlug: organization.slug,\n            transaction: transactionName,\n            projectID: event.projectID,\n            query: location.query,\n          })\n        : null;\n\n    const hasQuickTraceView =\n      event.type === 'transaction' &&\n      organization.features.includes('trace-view-quick') &&\n      organization.features.includes('trace-view-summary');\n\n    const eventJsonUrl = `/api/0/projects/${organization.slug}/${this.projectId}/events/${event.eventID}/json/`;\n\n    return (\n      <React.Fragment>\n        <Layout.Header>\n          <Layout.HeaderContent>\n            <DiscoverBreadcrumb\n              eventView={eventView}\n              event={event}\n              organization={organization}\n              location={location}\n            />\n            <EventHeader event={event} />\n          </Layout.HeaderContent>\n          <Layout.HeaderActions>\n            <ButtonBar gap={1}>\n              <Button onClick={this.toggleSidebar}>\n                {isSidebarVisible ? 'Hide Details' : 'Show Details'}\n              </Button>\n              {hasQuickTraceView && (\n                <Button icon={<IconOpen />} href={eventJsonUrl} external>\n                  {t('JSON')} (<FileSize bytes={event.size} />)\n                </Button>\n              )}\n              {transactionSummaryTarget && (\n                <Feature organization={organization} features={['performance-view']}>\n                  {({hasFeature}) => (\n                    <Button\n                      disabled={!hasFeature}\n                      priority=\"primary\"\n                      to={transactionSummaryTarget}\n                    >\n                      {t('Go to Summary')}\n                    </Button>\n                  )}\n                </Feature>\n              )}\n            </ButtonBar>\n          </Layout.HeaderActions>\n        </Layout.Header>\n        <Layout.Body>\n          {hasQuickTraceView && (\n            <Layout.Main fullWidth>\n              <EventMetas\n                event={event}\n                organization={organization}\n                projectId={this.projectId}\n                location={location}\n              />\n            </Layout.Main>\n          )}\n          <Layout.Main fullWidth={!isSidebarVisible}>\n            <Projects orgId={organization.slug} slugs={[this.projectId]}>\n              {({projects, initiallyLoaded}) =>\n                initiallyLoaded ? (\n                  <SpanEntryContext.Provider\n                    value={{\n                      getViewChildTransactionTarget: childTransactionProps => {\n                        const childTransactionLink = eventDetailsRoute({\n                          eventSlug: childTransactionProps.eventSlug,\n                          orgSlug: organization.slug,\n                        });\n\n                        return {\n                          pathname: childTransactionLink,\n                          query: eventView.generateQueryStringObject(),\n                        };\n                      },\n                    }}\n                  >\n                    <BorderlessEventEntries\n                      organization={organization}\n                      event={event}\n                      project={projects[0] as Project}\n                      location={location}\n                      showExampleCommit={false}\n                      showTagSummary={false}\n                    />\n                  </SpanEntryContext.Provider>\n                ) : (\n                  <LoadingIndicator />\n                )\n              }\n            </Projects>\n          </Layout.Main>\n          {isSidebarVisible && (\n            <Layout.Side>\n              {!hasQuickTraceView && (\n                <React.Fragment>\n                  <EventMetadata\n                    event={event}\n                    organization={organization}\n                    projectId={this.projectId}\n                  />\n                  <RootSpanStatus event={event} />\n                </React.Fragment>\n              )}\n              <OpsBreakdown event={event} />\n              <EventVitals event={event} />\n              {event.groupID && (\n                <LinkedIssue groupId={event.groupID} eventId={event.eventID} />\n              )}\n              <TagsTable\n                generateUrl={this.generateTagUrl}\n                event={event}\n                query={eventView.query}\n              />\n            </Layout.Side>\n          )}\n        </Layout.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderError(error: Error) {\n    const notFound = Object.values(this.state.errors).find(\n      resp => resp && resp.status === 404\n    );\n    const permissionDenied = Object.values(this.state.errors).find(\n      resp => resp && resp.status === 403\n    );\n\n    if (notFound) {\n      return <NotFound />;\n    }\n    if (permissionDenied) {\n      return (\n        <LoadingError message={t('You do not have permission to view that event.')} />\n      );\n    }\n\n    return super.renderError(error, true, true);\n  }\n\n  renderComponent() {\n    const {eventView, organization} = this.props;\n    const {event} = this.state;\n\n    const title = generateTitle({eventView, event, organization});\n\n    return (\n      <SentryDocumentTitle title={title} objSlug={organization.slug}>\n        {super.renderComponent()}\n      </SentryDocumentTitle>\n    );\n  }\n}\n\nconst EventHeader = ({event}: {event: Event}) => {\n  const message = getMessage(event);\n  return (\n    <EventHeaderContainer data-test-id=\"event-header\">\n      <TitleWrapper>\n        <EventOrGroupTitle data={event} />\n      </TitleWrapper>\n      {message && (\n        <MessageWrapper>\n          <EventMessage message={message} />\n        </MessageWrapper>\n      )}\n    </EventHeaderContainer>\n  );\n};\n\nconst EventHeaderContainer = styled('div')`\n  max-width: ${p => p.theme.breakpoints[0]};\n`;\n\nconst TitleWrapper = styled('div')`\n  font-size: ${p => p.theme.headerFontSize};\n  margin-top: 20px;\n`;\n\nconst MessageWrapper = styled('div')`\n  margin-top: ${space(1)};\n`;\n\nexport default EventDetailsContent;\n","import React from 'react';\nimport {Params} from 'react-router/lib/Router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport LightWeightNoProjectMessage from 'app/components/lightWeightNoProjectMessage';\nimport SentryDocumentTitle from 'app/components/sentryDocumentTitle';\nimport {t} from 'app/locale';\nimport {PageContent} from 'app/styles/organization';\nimport {Organization} from 'app/types';\nimport EventView from 'app/utils/discover/eventView';\nimport withOrganization from 'app/utils/withOrganization';\n\nimport EventDetailsContent from './content';\n\ntype Props = {\n  organization: Organization;\n  location: Location;\n  params: Params;\n};\n\nclass EventDetails extends React.Component<Props> {\n  getEventSlug = (): string => {\n    const {eventSlug} = this.props.params;\n\n    if (typeof eventSlug === 'string') {\n      return eventSlug.trim();\n    }\n\n    return '';\n  };\n\n  getEventView = (): EventView => {\n    const {location} = this.props;\n\n    return EventView.fromLocation(location);\n  };\n\n  getDocumentTitle = (name: string | undefined): Array<string> =>\n    typeof name === 'string' && String(name).trim().length > 0\n      ? [String(name).trim(), t('Discover')]\n      : [t('Discover')];\n\n  render() {\n    const {organization, location, params} = this.props;\n    const eventView = this.getEventView();\n\n    const documentTitle = this.getDocumentTitle(eventView.name).join(' - ');\n\n    return (\n      <SentryDocumentTitle title={documentTitle} objSlug={organization.slug}>\n        <StyledPageContent>\n          <LightWeightNoProjectMessage organization={organization}>\n            <EventDetailsContent\n              organization={organization}\n              location={location}\n              params={params}\n              eventView={eventView}\n              eventSlug={this.getEventSlug()}\n            />\n          </LightWeightNoProjectMessage>\n        </StyledPageContent>\n      </SentryDocumentTitle>\n    );\n  }\n}\n\nexport default withOrganization(EventDetails);\n\nconst StyledPageContent = styled(PageContent)`\n  padding: 0;\n`;\n"],"sourceRoot":""}