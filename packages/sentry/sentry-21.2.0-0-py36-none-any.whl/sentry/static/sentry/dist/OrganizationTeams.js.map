{"version":3,"sources":["webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/components/sentryDocumentTitle.tsx","webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/actionCreators/teams.tsx","webpack:///./app/utils/withTeams.tsx","webpack:///./app/views/settings/organizationTeams/allTeamsRow.tsx","webpack:///./app/views/settings/organizationTeams/allTeamsList.tsx","webpack:///./app/views/settings/organizationTeams/organizationTeams.tsx","webpack:///./app/views/settings/organizationTeams/index.tsx"],"names":["UnstyledSettingsPageHeader","this","props","icon","title","subtitle","action","tabs","noTitleStyles","body","isNarrow","TitleAndActions","TitleWrapper","Icon","Title","styled","Subtitle","Action","BodyWrapper","TabsWrapper","React","Component","defaultProps","p","space","theme","gray400","fontSizeLarge","SettingsPageHeader","SentryDocumentTitle","_title","objSlug","children","recreateRoute","to","options","lastRootIndex","routeIndex","routes","params","location","stepBack","paths","map","path","indexOf","findLastIndex","slice","baseRoute","search","hash","fullRoute","join","replaceRouterParams","doCallback","name","args","callIfFunction","fetchTeamDetails","api","TeamActions","fetchDetails","teamId","request","orgId","success","data","fetchDetailsSuccess","error","fetchDetailsError","updateTeamSuccess","updateSuccess","updateTeam","endpoint","update","method","updateError","joinTeam","memberId","id","uniqueId","leaveTeam","createTeam","team","requestPromise","then","createTeamSuccess","addSuccessMessage","tct","slug","organization","err","createTeamError","addErrorMessage","removeTeam","removeTeamSuccess","removeTeamError","withTeams","WrappedComponent","createReactClass","displayName","getDisplayName","mixins","Reflux","listenTo","TeamStore","getInitialState","teams","getAll","onTeamUpdate","setState","render","state","AllTeamsRow","loading","handleRequestAccess","a","successMessage","errorMessage","_err","handleJoinTeam","Promise","resolve","reject","Error","handleLeaveTeam","urlPrefix","openMembership","display","avatarSize","description","tn","memberCount","canViewTeam","hasAccess","TeamPanelItem","TeamNameWrapper","TeamLink","Spacer","size","disabled","isMember","onClick","t","isPending","Link","withApi","PanelItem","AllTeamsList","teamList","access","teamNodes","key","length","canCreateTeam","has","root","noMargin","teamCreate","link","StyledButton","priority","openCreateTeamModal","Fragment","Button","OrganizationTeams","allTeams","activeTeams","features","canCreateTeams","undefined","isCircled","teamRoute","find","activeTeamIds","Set","otherTeams","filter","data-test-id","OrganizationTeamsContainer","fetchStats","loadStats","query","since","Date","getTime","toString","stat","group","sortArray","withOrganization"],"mappings":"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","file":"OrganizationTeams.js","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {HeaderTitle} from 'app/styles/organization';\nimport space from 'app/styles/space';\n\ntype Props = {\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // The title\n  title: React.ReactNode;\n  subtitle?: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n  className?: string;\n\n  // CTA button\n  action?: React.ReactNode;\n\n  body?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass UnstyledSettingsPageHeader extends React.Component<Props> {\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {\n      icon,\n      title,\n      subtitle,\n      action,\n      tabs,\n      noTitleStyles,\n      body,\n      ...props\n    } = this.props;\n\n    // If Header is narrow, use align-items to center <Action>.\n    // Otherwise, use a fixed margin to prevent an odd alignment.\n    // This is needed as Actions could be a button or a dropdown.\n    const isNarrow = !subtitle;\n\n    return (\n      <div {...props}>\n        <TitleAndActions isNarrow={isNarrow}>\n          <TitleWrapper>\n            {icon && <Icon>{icon}</Icon>}\n            {title && (\n              <Title tabs={tabs} styled={noTitleStyles}>\n                <HeaderTitle>{title}</HeaderTitle>\n                {subtitle && <Subtitle>{subtitle}</Subtitle>}\n              </Title>\n            )}\n          </TitleWrapper>\n          {action && <Action isNarrow={isNarrow}>{action}</Action>}\n        </TitleAndActions>\n\n        {body && <BodyWrapper>{body}</BodyWrapper>}\n        {tabs && <TabsWrapper>{tabs}</TabsWrapper>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')<{isNarrow?: boolean}>`\n  display: flex;\n  align-items: ${p => (p.isNarrow ? 'center' : 'flex-start')};\n`;\nconst TitleWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p => !p.styled && `font-size: 20px; font-weight: 600;`};\n  margin: ${space(4)} ${space(2)} ${space(3)} 0;\n`;\nconst Subtitle = styled('div')`\n  color: ${p => p.theme.gray400};\n  font-weight: 400;\n  font-size: ${p => p.theme.fontSizeLarge};\n  padding: ${space(1.5)} 0 0;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{isNarrow?: boolean}>`\n  margin-top: ${p => (p.isNarrow ? '0' : space(4))};\n`;\n\nconst SettingsPageHeader = styled(UnstyledSettingsPageHeader)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nconst BodyWrapper = styled('div')`\n  flex: 1;\n  margin: 0 0 ${space(3)};\n`;\nconst TabsWrapper = styled('div')`\n  flex: 1;\n  margin: 0; /* sentry/components/navTabs has added margin */\n`;\n\nexport default SettingsPageHeader;\n","import React, {FunctionComponent} from 'react';\nimport DocumentTitle from 'react-document-title';\n\ntype DocumentTitleProps = {\n  // Main page title\n  title: string;\n  // Organization or project slug to give title some context\n  objSlug: string;\n  children?: React.ReactNode;\n};\n\nconst SentryDocumentTitle: FunctionComponent<DocumentTitleProps> = (\n  props: DocumentTitleProps\n) => {\n  const _title = `${props.title} - ${props.objSlug} - Sentry`;\n  return <DocumentTitle title={_title}>{props.children}</DocumentTitle>;\n};\n\nexport default SentryDocumentTitle;\n","import {Location} from 'history';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'app/utils/replaceRouterParams';\nimport {RouteWithName} from 'app/views/settings/components/settingsBreadcrumb/types';\n\ntype Options = {\n  routes: RouteWithName[];\n\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n  location?: Location;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(\n  to: string | RouteWithName,\n  options: Options\n): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","import {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport TeamActions from 'app/actions/teamActions';\nimport {Client} from 'app/api';\nimport {tct} from 'app/locale';\nimport {Team} from 'app/types';\nimport {callIfFunction} from 'app/utils/callIfFunction';\nimport {uniqueId} from 'app/utils/guid';\n\ntype CallbackOptions = {\n  success?: Function;\n  error?: Function;\n};\n\nconst doCallback = (\n  params: CallbackOptions = {},\n  name: keyof CallbackOptions,\n  ...args: any[]\n) => {\n  callIfFunction(params[name], ...args);\n};\n\n/**\n * Note these are both slugs\n */\ntype OrgSlug = {orgId: string};\ntype OrgAndTeamSlug = OrgSlug & {teamId: string};\n\ntype TeamData = {data: Team};\n\n/**\n * This is the actual internal id, not username or email\n */\ntype MemberId = {memberId: string};\n\n// Fetch teams for org\nexport function fetchTeams(api: Client, params: OrgSlug, options: CallbackOptions) {\n  TeamActions.fetchAll(params.orgId);\n  return api.request(`/teams/${params.orgId}/`, {\n    success: data => {\n      TeamActions.fetchAllSuccess(params.orgId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.fetchAllError(params.orgId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function fetchTeamDetails(\n  api: Client,\n  params: OrgAndTeamSlug,\n  options?: CallbackOptions\n) {\n  TeamActions.fetchDetails(params.teamId);\n  return api.request(`/teams/${params.orgId}/${params.teamId}/`, {\n    success: data => {\n      TeamActions.fetchDetailsSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.fetchDetailsError(params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function updateTeamSuccess(teamId: OrgAndTeamSlug['teamId'], data: Team) {\n  TeamActions.updateSuccess(teamId, data);\n}\n\nexport function updateTeam(\n  api: Client,\n  params: OrgAndTeamSlug & TeamData,\n  options: CallbackOptions\n) {\n  const endpoint = `/teams/${params.orgId}/${params.teamId}/`;\n  TeamActions.update(params.teamId, params.data);\n\n  return api.request(endpoint, {\n    method: 'PUT',\n    data: params.data,\n    success: data => {\n      updateTeamSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.updateError(params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function joinTeam(\n  api: Client,\n  params: OrgAndTeamSlug & Partial<MemberId>,\n  options: CallbackOptions\n) {\n  const endpoint = `/organizations/${params.orgId}/members/${\n    params.memberId ?? 'me'\n  }/teams/${params.teamId}/`;\n  const id = uniqueId();\n\n  TeamActions.update(id, params.teamId);\n\n  return api.request(endpoint, {\n    method: 'POST',\n    success: data => {\n      TeamActions.updateSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.updateError(id, params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function leaveTeam(\n  api: Client,\n  params: OrgAndTeamSlug & Partial<MemberId>,\n  options: CallbackOptions\n) {\n  const endpoint = `/organizations/${params.orgId}/members/${\n    params.memberId || 'me'\n  }/teams/${params.teamId}/`;\n  const id = uniqueId();\n\n  TeamActions.update(id, params.teamId);\n\n  return api.request(endpoint, {\n    method: 'DELETE',\n    success: data => {\n      TeamActions.updateSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.updateError(id, params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function createTeam(api: Client, team: Pick<Team, 'slug'>, params: OrgSlug) {\n  TeamActions.createTeam(team);\n\n  return api\n    .requestPromise(`/organizations/${params.orgId}/teams/`, {\n      method: 'POST',\n      data: team,\n    })\n    .then(\n      data => {\n        TeamActions.createTeamSuccess(data);\n        addSuccessMessage(\n          tct('[team] has been added to the [organization] organization', {\n            team: `#${data.slug}`,\n            organization: params.orgId,\n          })\n        );\n        return data;\n      },\n      err => {\n        TeamActions.createTeamError(team.slug, err);\n        addErrorMessage(\n          tct('Unable to create [team] in the [organization] organization', {\n            team: `#${team.slug}`,\n            organization: params.orgId,\n          })\n        );\n        throw err;\n      }\n    );\n}\n\nexport function removeTeam(api: Client, params: OrgAndTeamSlug) {\n  TeamActions.removeTeam(params.teamId);\n\n  return api\n    .requestPromise(`/teams/${params.orgId}/${params.teamId}/`, {\n      method: 'DELETE',\n    })\n    .then(\n      data => {\n        TeamActions.removeTeamSuccess(params.teamId, data);\n        addSuccessMessage(\n          tct('[team] has been removed from the [organization] organization', {\n            team: `#${params.teamId}`,\n            organization: params.orgId,\n          })\n        );\n        return data;\n      },\n      err => {\n        TeamActions.removeTeamError(params.teamId, err);\n        addErrorMessage(\n          tct('Unable to remove [team] from the [organization] organization', {\n            team: `#${params.teamId}`,\n            organization: params.orgId,\n          })\n        );\n        throw err;\n      }\n    );\n}\n","import React from 'react';\nimport createReactClass from 'create-react-class';\nimport Reflux from 'reflux';\n\nimport TeamStore from 'app/stores/teamStore';\nimport {Team} from 'app/types';\nimport getDisplayName from 'app/utils/getDisplayName';\n\ntype InjectedTeamsProps = {\n  teams: Team[];\n};\n\ntype State = {\n  teams: Team[];\n};\n\n/**\n * Higher order component that uses TeamStore and provides a list of teams\n */\nconst withTeams = <P extends InjectedTeamsProps>(\n  WrappedComponent: React.ComponentType<P>\n) =>\n  createReactClass<Omit<P, keyof InjectedTeamsProps>, State>({\n    displayName: `withTeams(${getDisplayName(WrappedComponent)})`,\n    mixins: [Reflux.listenTo(TeamStore, 'onTeamUpdate') as any],\n\n    getInitialState() {\n      return {\n        teams: TeamStore.getAll(),\n      };\n    },\n\n    onTeamUpdate() {\n      this.setState({\n        teams: TeamStore.getAll(),\n      });\n    },\n    render() {\n      return (\n        <WrappedComponent {...(this.props as P)} teams={this.state.teams as Team[]} />\n      );\n    },\n  });\n\nexport default withTeams;\n","import React from 'react';\nimport {Link} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport {joinTeam, leaveTeam} from 'app/actionCreators/teams';\nimport {Client} from 'app/api';\nimport Button from 'app/components/button';\nimport IdBadge from 'app/components/idBadge';\nimport {PanelItem} from 'app/components/panels';\nimport {t, tct, tn} from 'app/locale';\nimport space from 'app/styles/space';\nimport {Organization, Team} from 'app/types';\nimport withApi from 'app/utils/withApi';\n\ntype Props = {\n  api: Client;\n  urlPrefix: string;\n  organization: Organization;\n  team: Team;\n  openMembership: boolean;\n};\n\ntype State = {\n  loading: boolean;\n  error: boolean;\n};\n\nclass AllTeamsRow extends React.Component<Props, State> {\n  state = {\n    loading: false,\n    error: false,\n  };\n\n  handleRequestAccess = async () => {\n    const {team} = this.props;\n\n    try {\n      this.joinTeam({\n        successMessage: tct('You have requested access to [team]', {\n          team: `#${team.slug}`,\n        }),\n\n        errorMessage: tct('Unable to request access to [team]', {\n          team: `#${team.slug}`,\n        }),\n      });\n\n      // TODO: Ideally we would update team so that `isPending` is true\n    } catch (_err) {\n      // No need to do anything\n    }\n  };\n\n  handleJoinTeam = () => {\n    const {team} = this.props;\n\n    this.joinTeam({\n      successMessage: tct('You have joined [team]', {\n        team: `#${team.slug}`,\n      }),\n      errorMessage: tct('Unable to join [team]', {\n        team: `#${team.slug}`,\n      }),\n    });\n  };\n\n  joinTeam = ({successMessage, errorMessage}) => {\n    const {api, organization, team} = this.props;\n\n    this.setState({\n      loading: true,\n    });\n\n    return new Promise((resolve, reject) =>\n      joinTeam(\n        api,\n        {\n          orgId: organization.slug,\n          teamId: team.slug,\n        },\n        {\n          success: () => {\n            this.setState({\n              loading: false,\n              error: false,\n            });\n            addSuccessMessage(successMessage);\n            resolve();\n          },\n          error: () => {\n            this.setState({\n              loading: false,\n              error: true,\n            });\n            addErrorMessage(errorMessage);\n            reject(new Error('Unable to join team'));\n          },\n        }\n      )\n    );\n  };\n\n  handleLeaveTeam = () => {\n    const {api, organization, team} = this.props;\n\n    this.setState({\n      loading: true,\n    });\n\n    leaveTeam(\n      api,\n      {\n        orgId: organization.slug,\n        teamId: team.slug,\n      },\n      {\n        success: () => {\n          this.setState({\n            loading: false,\n            error: false,\n          });\n          addSuccessMessage(\n            tct('You have left [team]', {\n              team: `#${team.slug}`,\n            })\n          );\n        },\n        error: () => {\n          this.setState({\n            loading: false,\n            error: true,\n          });\n          addErrorMessage(\n            tct('Unable to leave [team]', {\n              team: `#${team.slug}`,\n            })\n          );\n        },\n      }\n    );\n  };\n\n  render() {\n    const {team, urlPrefix, openMembership} = this.props;\n    const display = (\n      <IdBadge\n        team={team}\n        avatarSize={36}\n        description={tn('%s Member', '%s Members', team.memberCount)}\n      />\n    );\n\n    // You can only view team details if you have access to team -- this should account\n    // for your role + org open membership\n    const canViewTeam = team.hasAccess;\n\n    return (\n      <TeamPanelItem>\n        <TeamNameWrapper>\n          {canViewTeam ? (\n            <TeamLink to={`${urlPrefix}teams/${team.slug}/`}>{display}</TeamLink>\n          ) : (\n            display\n          )}\n        </TeamNameWrapper>\n        <Spacer>\n          {this.state.loading ? (\n            <Button size=\"small\" disabled>\n              ...\n            </Button>\n          ) : team.isMember ? (\n            <Button size=\"small\" onClick={this.handleLeaveTeam}>\n              {t('Leave Team')}\n            </Button>\n          ) : team.isPending ? (\n            <Button size=\"small\" disabled>\n              {t('Request Pending')}\n            </Button>\n          ) : openMembership ? (\n            <Button size=\"small\" onClick={this.handleJoinTeam}>\n              {t('Join Team')}\n            </Button>\n          ) : (\n            <Button size=\"small\" onClick={this.handleRequestAccess}>\n              {t('Request Access')}\n            </Button>\n          )}\n        </Spacer>\n      </TeamPanelItem>\n    );\n  }\n}\n\nconst TeamLink = styled(Link)`\n  display: inline-block;\n\n  &.focus-visible {\n    margin: -${space(1)};\n    padding: ${space(1)};\n    background: #f2eff5;\n    border-radius: 3px;\n    outline: none;\n  }\n`;\n\nexport {AllTeamsRow};\nexport default withApi(AllTeamsRow);\n\nconst TeamPanelItem = styled(PanelItem)`\n  padding: 0;\n  align-items: center;\n`;\n\nconst Spacer = styled('div')`\n  padding: ${space(2)};\n`;\n\nconst TeamNameWrapper = styled(Spacer)`\n  flex: 1;\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {openCreateTeamModal} from 'app/actionCreators/modal';\nimport Button from 'app/components/button';\nimport {tct} from 'app/locale';\nimport {Organization, Team} from 'app/types';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\n\nimport AllTeamsRow from './allTeamsRow';\n\ntype Props = {\n  urlPrefix: string;\n  access: Record<string, any>;\n  organization: Organization;\n  teamList: Array<Team>;\n  openMembership: boolean;\n};\n\nfunction AllTeamsList({\n  organization,\n  urlPrefix,\n  openMembership,\n  teamList,\n  access,\n}: Props) {\n  const teamNodes = teamList.map(team => (\n    <AllTeamsRow\n      urlPrefix={urlPrefix}\n      team={team}\n      organization={organization}\n      openMembership={openMembership}\n      key={team.slug}\n    />\n  ));\n\n  if (!teamNodes.length) {\n    const canCreateTeam = access.has('project:admin');\n\n    return (\n      <EmptyMessage>\n        {tct('No teams here. [teamCreate]', {\n          root: <TextBlock noMargin />,\n          teamCreate: canCreateTeam\n            ? tct('You can always [link:create one].', {\n                link: (\n                  <StyledButton\n                    priority=\"link\"\n                    onClick={() =>\n                      openCreateTeamModal({\n                        organization,\n                      })\n                    }\n                  />\n                ),\n              })\n            : null,\n        })}\n      </EmptyMessage>\n    );\n  }\n\n  return <React.Fragment>{teamNodes}</React.Fragment>;\n}\n\nexport default AllTeamsList;\n\nconst StyledButton = styled(Button)`\n  font-size: ${p => p.theme.fontSizeLarge};\n`;\n","import React from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport {openCreateTeamModal} from 'app/actionCreators/modal';\nimport Button from 'app/components/button';\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport SentryDocumentTitle from 'app/components/sentryDocumentTitle';\nimport {IconAdd} from 'app/icons';\nimport {t} from 'app/locale';\nimport {Organization, Team} from 'app/types';\nimport recreateRoute from 'app/utils/recreateRoute';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\n\nimport AllTeamsList from './allTeamsList';\n\ntype Props = {\n  access: Set<string>;\n  features: Set<string>;\n  allTeams: Team[];\n  activeTeams: Team[];\n  organization: Organization;\n} & RouteComponentProps<{orgId: string}, {}>;\n\nfunction OrganizationTeams({\n  allTeams,\n  activeTeams,\n  organization,\n  access,\n  features,\n  routes,\n  params,\n}: Props) {\n  if (!organization) {\n    return null;\n  }\n  const canCreateTeams = access.has('project:admin');\n\n  const action = (\n    <Button\n      priority=\"primary\"\n      size=\"small\"\n      disabled={!canCreateTeams}\n      title={\n        !canCreateTeams ? t('You do not have permission to create teams') : undefined\n      }\n      onClick={() =>\n        openCreateTeamModal({\n          organization,\n        })\n      }\n      icon={<IconAdd size=\"xs\" isCircled />}\n    >\n      {t('Create Team')}\n    </Button>\n  );\n\n  const teamRoute = routes.find(({path}) => path === 'teams/');\n  const urlPrefix = teamRoute\n    ? recreateRoute(teamRoute, {routes, params, stepBack: -2})\n    : '';\n\n  const activeTeamIds = new Set(activeTeams.map(team => team.id));\n  const otherTeams = allTeams.filter(team => !activeTeamIds.has(team.id));\n  const title = t('Teams');\n\n  return (\n    <div data-test-id=\"team-list\">\n      <SentryDocumentTitle title={title} objSlug={organization.slug} />\n      <SettingsPageHeader title={title} action={action} />\n      <Panel>\n        <PanelHeader>{t('Your Teams')}</PanelHeader>\n        <PanelBody>\n          <AllTeamsList\n            urlPrefix={urlPrefix}\n            organization={organization}\n            teamList={activeTeams}\n            access={access}\n            openMembership={false}\n          />\n        </PanelBody>\n      </Panel>\n      <Panel>\n        <PanelHeader>{t('Other Teams')}</PanelHeader>\n        <PanelBody>\n          <AllTeamsList\n            urlPrefix={urlPrefix}\n            organization={organization}\n            teamList={otherTeams}\n            access={access}\n            openMembership={\n              !!(features.has('open-membership') || access.has('org:write'))\n            }\n          />\n        </PanelBody>\n      </Panel>\n    </div>\n  );\n}\n\nexport default OrganizationTeams;\n","import React from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport {loadStats} from 'app/actionCreators/projects';\nimport {Client} from 'app/api';\nimport {Organization, Team} from 'app/types';\nimport {sortArray} from 'app/utils';\nimport withApi from 'app/utils/withApi';\nimport withOrganization from 'app/utils/withOrganization';\nimport withTeams from 'app/utils/withTeams';\n\nimport OrganizationTeams from './organizationTeams';\n\ntype Props = {\n  api: Client;\n  organization: Organization;\n  teams: Team[];\n} & RouteComponentProps<{orgId: string}, {}>;\n\nclass OrganizationTeamsContainer extends React.Component<Props> {\n  componentDidMount() {\n    this.fetchStats();\n  }\n\n  fetchStats() {\n    loadStats(this.props.api, {\n      orgId: this.props.params.orgId,\n      query: {\n        since: (new Date().getTime() / 1000 - 3600 * 24).toString(),\n        stat: 'generated',\n        group: 'project',\n      },\n    });\n  }\n\n  render() {\n    const {organization, teams} = this.props;\n\n    if (!organization) {\n      return null;\n    }\n    const allTeams = sortArray(teams, team => team.name);\n    const activeTeams = allTeams.filter(team => team.isMember);\n\n    return (\n      <OrganizationTeams\n        {...this.props}\n        access={new Set(organization.access)}\n        features={new Set(organization.features)}\n        organization={organization}\n        allTeams={allTeams}\n        activeTeams={activeTeams}\n      />\n    );\n  }\n}\n\nexport {OrganizationTeamsContainer};\n\nexport default withApi(withOrganization(withTeams(OrganizationTeamsContainer)));\n"],"sourceRoot":""}