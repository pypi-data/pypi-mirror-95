{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/components/pullRequestLink.tsx","webpack:///./app/components/issueLink.tsx","webpack:///./app/views/organizationActivity/activityFeedItem.tsx","webpack:///./app/views/organizationActivity/index.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","routeTitleGen","routeName","orgSlug","withSentry","tmpl","PullRequestLink","pullRequest","repository","inline","displayId","name","id","externalUrl","className","href","repo","provider","includes","split","pop","size","renderIcon","IssueLink","children","orgId","issue","to","card","message","getMessage","classNames","isBookmarked","hasSeen","isResolved","status","streamPath","hovercardBody","Section","Title","data","HovercardEventMessage","level","levelIndicatorSize","annotations","Fragment","logger","pathname","query","map","annotation","i","key","dangerouslySetInnerHTML","__html","Grid","GridHeader","t","StyledTimeSince","date","firstSeen","lastSeen","value","count","userCount","body","header","shortId","p","theme","fontSizeMedium","space","overflowEllipsis","gray300","EventMessage","TimeSince","ActivityItem","state","clipped","props","defaultClipped","activityBubbleRef","React","createRef","formatProjectActivity","author","item","organization","slug","project","basePath","issueLink","versionLink","version","projectSlug","releaseVersion","projectId","type","tct","commitId","commit","ignoreDuration","duration","seconds","ignoreCount","ignoreWindow","ignoreUserCount","ignoreUserWindow","tn","fingerprints","length","source","assignee","assigneeType","team","TeamStore","getById","user","MemberListStore","email","assigneeEmail","help","issues","link","environment","current","offsetHeight","clipHeight","setState","avatar","undefined","hasBubble","bubbleProps","marked","text","location","ActivityAuthor","Bubble","ref","Meta","Project","dateCreated","Component","defaultProps","innerBorder","textColor","fontSizeRelativeSmall","backgroundSecondary","border","OrganizationActivity","params","routeTitle","renderBody","error","disableLog","disableReport","errors","notFound","Object","values","find","resp","loading","activity","activityPageLinks","withMargins","renderEmpty","data-test-id","mini","css","marginBottom","borderRadius","pageLinks","withOrganization"],"mappings":"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","file":"OrganizationActivity.js","sourcesContent":["import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true\n): string {\n  const tmpl = `${routeName} - ${orgSlug}`;\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import React from 'react';\n\nimport ExternalLink from 'app/components/links/externalLink';\nimport {IconBitbucket, IconGithub, IconGitlab} from 'app/icons';\nimport {PullRequest, Repository} from 'app/types';\n\nfunction renderIcon(repo: Repository) {\n  if (!repo.provider) {\n    return null;\n  }\n\n  const {id} = repo.provider;\n  const providerId = id.includes(':') ? id.split(':').pop() : id;\n\n  switch (providerId) {\n    case 'github':\n      return <IconGithub size=\"xs\" />;\n    case 'gitlab':\n      return <IconGitlab size=\"xs\" />;\n    case 'bitbucket':\n      return <IconBitbucket size=\"xs\" />;\n    default:\n      return null;\n  }\n}\n\ntype Props = {\n  pullRequest: PullRequest;\n  repository: Repository;\n  inline?: boolean;\n};\n\nconst PullRequestLink = ({pullRequest, repository, inline}: Props) => {\n  const displayId = `${repository.name} #${pullRequest.id}: ${pullRequest.title}`;\n\n  return pullRequest.externalUrl ? (\n    <ExternalLink\n      className={inline ? 'inline-commit' : 'btn btn-default btn-sm'}\n      href={pullRequest.externalUrl}\n    >\n      {renderIcon(repository)}\n      {inline ? '' : ' '}\n      {displayId}\n    </ExternalLink>\n  ) : (\n    <span>{displayId}</span>\n  );\n};\n\nexport default PullRequestLink;\n","import React from 'react';\nimport {Link} from 'react-router';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\n\nimport Count from 'app/components/count';\nimport EventOrGroupTitle from 'app/components/eventOrGroupTitle';\nimport EventAnnotation from 'app/components/events/eventAnnotation';\nimport EventMessage from 'app/components/events/eventMessage';\nimport Hovercard from 'app/components/hovercard';\nimport TimeSince from 'app/components/timeSince';\nimport {t} from 'app/locale';\nimport overflowEllipsis from 'app/styles/overflowEllipsis';\nimport space from 'app/styles/space';\nimport {Group} from 'app/types';\nimport {getMessage} from 'app/utils/events';\n\ntype Props = {\n  orgId: string;\n  issue: Group;\n  to: string;\n  card: boolean;\n  children: React.ReactNode;\n};\n\nconst IssueLink = ({children, orgId, issue, to, card = true}: Props) => {\n  if (!card) {\n    return <Link to={to}>{children}</Link>;\n  }\n\n  const message = getMessage(issue);\n\n  const className = classNames({\n    isBookmarked: issue.isBookmarked,\n    hasSeen: issue.hasSeen,\n    isResolved: issue.status === 'resolved',\n  });\n\n  const streamPath = `/organizations/${orgId}/issues/`;\n\n  const hovercardBody = (\n    <div className={className}>\n      <Section>\n        <Title>\n          <EventOrGroupTitle data={issue} />\n        </Title>\n\n        <HovercardEventMessage\n          level={issue.level}\n          levelIndicatorSize=\"9px\"\n          message={message}\n          annotations={\n            <React.Fragment>\n              {issue.logger && (\n                <EventAnnotation>\n                  <Link\n                    to={{\n                      pathname: streamPath,\n                      query: {query: `logger:${issue.logger}`},\n                    }}\n                  >\n                    {issue.logger}\n                  </Link>\n                </EventAnnotation>\n              )}\n              {issue.annotations.map((annotation, i) => (\n                <EventAnnotation key={i} dangerouslySetInnerHTML={{__html: annotation}} />\n              ))}\n            </React.Fragment>\n          }\n        />\n      </Section>\n\n      <Grid>\n        <div>\n          <GridHeader>{t('First Seen')}</GridHeader>\n          <StyledTimeSince date={issue.firstSeen} />\n        </div>\n        <div>\n          <GridHeader>{t('Last Seen')}</GridHeader>\n          <StyledTimeSince date={issue.lastSeen} />\n        </div>\n        <div>\n          <GridHeader>{t('Occurrences')}</GridHeader>\n          <Count value={issue.count} />\n        </div>\n        <div>\n          <GridHeader>{t('Users Affected')}</GridHeader>\n          <Count value={issue.userCount} />\n        </div>\n      </Grid>\n    </div>\n  );\n\n  return (\n    <Hovercard body={hovercardBody} header={issue.shortId}>\n      <Link to={to}>{children}</Link>\n    </Hovercard>\n  );\n};\n\nexport default IssueLink;\n\nconst Title = styled('h3')`\n  font-size: ${p => p.theme.fontSizeMedium};\n  margin: 0 0 ${space(0.5)};\n  ${overflowEllipsis};\n\n  em {\n    font-style: normal;\n    font-weight: 400;\n    color: ${p => p.theme.gray300};\n    font-size: 90%;\n  }\n`;\n\nconst Section = styled('section')`\n  margin-bottom: ${space(2)};\n`;\n\nconst Grid = styled('div')`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: ${space(2)};\n`;\nconst HovercardEventMessage = styled(EventMessage)`\n  font-size: 12px;\n`;\n\nconst GridHeader = styled('h5')`\n  color: ${p => p.theme.gray300};\n  font-size: 11px;\n  margin-bottom: ${space(0.5)};\n  text-transform: uppercase;\n`;\n\nconst StyledTimeSince = styled(TimeSince)`\n  color: inherit;\n`;\n","import React from 'react';\nimport {Link} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport ActivityAvatar from 'app/components/activity/item/avatar';\nimport CommitLink from 'app/components/commitLink';\nimport Duration from 'app/components/duration';\nimport IssueLink from 'app/components/issueLink';\nimport ExternalLink from 'app/components/links/externalLink';\nimport PullRequestLink from 'app/components/pullRequestLink';\nimport TimeSince from 'app/components/timeSince';\nimport Version from 'app/components/version';\nimport VersionHoverCard from 'app/components/versionHoverCard';\nimport {t, tct, tn} from 'app/locale';\nimport MemberListStore from 'app/stores/memberListStore';\nimport TeamStore from 'app/stores/teamStore';\nimport space from 'app/styles/space';\nimport {Activity, Organization} from 'app/types';\nimport marked from 'app/utils/marked';\n\nconst defaultProps = {\n  defaultClipped: false,\n  clipHeight: 68,\n};\ntype DefaultProps = typeof defaultProps;\n\ntype Props = {\n  className?: string;\n  organization: Organization;\n  item: Activity;\n} & DefaultProps;\n\ntype State = {\n  clipped: Props['defaultClipped'];\n};\n\nclass ActivityItem extends React.Component<Props, State> {\n  static defaultProps = defaultProps;\n\n  state = {\n    clipped: this.props.defaultClipped,\n  };\n\n  componentDidMount() {\n    if (this.activityBubbleRef.current) {\n      const bubbleHeight = this.activityBubbleRef.current.offsetHeight;\n\n      if (bubbleHeight > this.props.clipHeight) {\n        // okay if this causes re-render; cannot determine until\n        // rendered first anyways\n        // eslint-disable-next-line react/no-did-mount-set-state\n        this.setState({clipped: true});\n      }\n    }\n  }\n\n  activityBubbleRef = React.createRef<HTMLDivElement>();\n\n  formatProjectActivity = (author, item) => {\n    const data = item.data;\n    const {organization} = this.props;\n    const orgId = organization.slug;\n    const project = item.project;\n    const issue = item.issue;\n    const basePath = `/organizations/${orgId}/issues/`;\n\n    const issueLink = issue ? (\n      <IssueLink orgId={orgId} issue={issue} to={`${basePath}${issue.id}/`} card>\n        {issue.shortId}\n      </IssueLink>\n    ) : null;\n\n    const versionLink = data.version ? (\n      <VersionHoverCard\n        organization={organization}\n        projectSlug={project.slug}\n        releaseVersion={data.version}\n      >\n        <Version version={data.version} projectId={project.id} />\n      </VersionHoverCard>\n    ) : null;\n\n    switch (item.type) {\n      case 'note':\n        return tct('[author] commented on [issue]', {\n          author,\n          issue: (\n            <IssueLink\n              card\n              orgId={orgId}\n              issue={issue}\n              to={`${basePath}${issue.id}/activity/#event_${item.id}`}\n            >\n              {issue.shortId}\n            </IssueLink>\n          ),\n        });\n      case 'set_resolved':\n        return tct('[author] marked [issue] as resolved', {\n          author,\n          issue: issueLink,\n        });\n      case 'set_resolved_by_age':\n        return tct('[author] marked [issue] as resolved due to age', {\n          author,\n          issue: issueLink,\n        });\n      case 'set_resolved_in_release':\n        if (data.version) {\n          return tct('[author] marked [issue] as resolved in [version]', {\n            author,\n            version: versionLink,\n            issue: issueLink,\n          });\n        }\n        return tct('[author] marked [issue] as resolved in the upcoming release', {\n          author,\n          issue: issueLink,\n        });\n      case 'set_resolved_in_commit':\n        return tct('[author] marked [issue] as resolved in [version]', {\n          author,\n          version: (\n            <CommitLink\n              inline\n              commitId={data.commit && data.commit.id}\n              repository={data.commit && data.commit.repository}\n            />\n          ),\n          issue: issueLink,\n        });\n      case 'set_resolved_in_pull_request':\n        return tct('[author] marked [issue] as resolved in [version]', {\n          author,\n          version: (\n            <PullRequestLink\n              inline\n              pullRequest={data.pullRequest}\n              repository={data.pullRequest && data.pullRequest.repository}\n            />\n          ),\n          issue: issueLink,\n        });\n      case 'set_unresolved':\n        return tct('[author] marked [issue] as unresolved', {\n          author,\n          issue: issueLink,\n        });\n      case 'set_ignored':\n        if (data.ignoreDuration) {\n          return tct('[author] ignored [issue] for [duration]', {\n            author,\n            duration: <Duration seconds={data.ignoreDuration * 60} />,\n            issue: issueLink,\n          });\n        } else if (data.ignoreCount && data.ignoreWindow) {\n          return tct(\n            '[author] ignored [issue] until it happens [count] time(s) in [duration]',\n            {\n              author,\n              count: data.ignoreCount,\n              duration: <Duration seconds={data.ignoreWindow * 60} />,\n              issue: issueLink,\n            }\n          );\n        } else if (data.ignoreCount) {\n          return tct('[author] ignored [issue] until it happens [count] time(s)', {\n            author,\n            count: data.ignoreCount,\n            issue: issueLink,\n          });\n        } else if (data.ignoreUserCount && data.ignoreUserWindow) {\n          return tct(\n            '[author] ignored [issue] until it affects [count] user(s) in [duration]',\n            {\n              author,\n              count: data.ignoreUserCount,\n              duration: <Duration seconds={data.ignoreUserWindow * 60} />,\n              issue: issueLink,\n            }\n          );\n        } else if (data.ignoreUserCount) {\n          return tct('[author] ignored [issue] until it affects [count] user(s)', {\n            author,\n            count: data.ignoreUserCount,\n            issue: issueLink,\n          });\n        }\n        return tct('[author] ignored [issue]', {\n          author,\n          issue: issueLink,\n        });\n      case 'set_public':\n        return tct('[author] made [issue] public', {\n          author,\n          issue: issueLink,\n        });\n      case 'set_private':\n        return tct('[author] made [issue] private', {\n          author,\n          issue: issueLink,\n        });\n      case 'set_regression':\n        if (data.version) {\n          return tct('[author] marked [issue] as a regression in [version]', {\n            author,\n            version: versionLink,\n            issue: issueLink,\n          });\n        }\n        return tct('[author] marked [issue] as a regression', {\n          author,\n          issue: issueLink,\n        });\n      case 'create_issue':\n        return tct('[author] linked [issue] on [provider]', {\n          author,\n          provider: data.provider,\n          issue: issueLink,\n        });\n      case 'unmerge_destination':\n        return tn(\n          '%2$s migrated %1$s fingerprint from %3$s to %4$s',\n          '%2$s migrated %1$s fingerprints from %3$s to %4$s',\n          data.fingerprints.length,\n          author,\n          data.source ? (\n            <a href={`${basePath}${data.source.id}`}>{data.source.shortId}</a>\n          ) : (\n            t('a group')\n          ),\n          issueLink\n        );\n      case 'first_seen':\n        return tct('[author] saw [link:issue]', {\n          author,\n          issue: issueLink,\n        });\n      case 'assigned':\n        let assignee;\n\n        if (data.assigneeType === 'team') {\n          const team = TeamStore.getById(data.assignee);\n          assignee = team ? team.slug : '<unknown-team>';\n\n          return tct('[author] assigned [issue] to #[assignee]', {\n            author,\n            issue: issueLink,\n            assignee,\n          });\n        }\n\n        if (item.user && data.assignee === item.user.id) {\n          return tct('[author] assigned [issue] to themselves', {\n            author,\n            issue: issueLink,\n          });\n        }\n        assignee = MemberListStore.getById(data.assignee);\n        if (assignee && assignee.email) {\n          return tct('[author] assigned [issue] to [assignee]', {\n            author,\n            assignee: <span title={assignee.email}>{assignee.name}</span>,\n            issue: issueLink,\n          });\n        } else if (data.assigneeEmail) {\n          return tct('[author] assigned [issue] to [assignee]', {\n            author,\n            assignee: data.assigneeEmail,\n            issue: issueLink,\n          });\n        }\n        return tct('[author] assigned [issue] to an [help:unknown user]', {\n          author,\n          help: <span title={data.assignee} />,\n          issue: issueLink,\n        });\n      case 'unassigned':\n        return tct('[author] unassigned [issue]', {\n          author,\n          issue: issueLink,\n        });\n      case 'merge':\n        return tct('[author] merged [count] [link:issues]', {\n          author,\n          count: data.issues.length + 1,\n          link: <Link to={`${basePath}${issue.id}/`} />,\n        });\n      case 'release':\n        return tct('[author] released version [version]', {\n          author,\n          version: versionLink,\n        });\n      case 'deploy':\n        return tct('[author] deployed version [version] to [environment].', {\n          author,\n          version: versionLink,\n          environment: data.environment || 'Default Environment',\n        });\n      case 'mark_reviewed':\n        return tct('[author] marked [issue] as reviewed', {\n          author,\n          issue: issueLink,\n        });\n      default:\n        return ''; // should never hit (?)\n    }\n  };\n\n  render() {\n    const {className, item} = this.props;\n\n    const avatar = (\n      <ActivityAvatar\n        type={!item.user ? 'system' : 'user'}\n        user={item.user ?? undefined}\n        size={36}\n      />\n    );\n    const author = {\n      name: item.user ? item.user.name : 'Sentry',\n      avatar,\n    };\n\n    const hasBubble = ['note', 'create_issue'].includes(item.type);\n    const bubbleProps = {\n      ...(item.type === 'note'\n        ? {dangerouslySetInnerHTML: {__html: marked(item.data.text)}}\n        : {}),\n      ...(item.type === 'create_issue'\n        ? {\n            children: (\n              <ExternalLink href={item.data.location}>{item.data.title}</ExternalLink>\n            ),\n          }\n        : {}),\n    };\n\n    return (\n      <div className={className}>\n        {author.avatar}\n        <div>\n          {this.formatProjectActivity(\n            <span>\n              <ActivityAuthor>{author.name}</ActivityAuthor>\n            </span>,\n            item\n          )}\n          {hasBubble && (\n            <Bubble\n              ref={this.activityBubbleRef}\n              clipped={this.state.clipped}\n              {...bubbleProps}\n            />\n          )}\n          <Meta>\n            <Project>{item.project.slug}</Project>\n            <StyledTimeSince date={item.dateCreated} />\n          </Meta>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default styled(ActivityItem)`\n  display: grid;\n  grid-gap: ${space(1)};\n  grid-template-columns: max-content auto;\n  position: relative;\n  margin: 0;\n  padding: ${space(1)};\n  border-bottom: 1px solid ${p => p.theme.innerBorder};\n  line-height: 1.4;\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nconst ActivityAuthor = styled('span')`\n  font-weight: 600;\n`;\n\nconst Meta = styled('div')`\n  color: ${p => p.theme.textColor};\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n`;\nconst Project = styled('span')`\n  font-weight: bold;\n`;\n\nconst Bubble = styled('div')<{clipped: boolean}>`\n  background: ${p => p.theme.backgroundSecondary};\n  margin: ${space(0.5)} 0;\n  padding: ${space(1)} ${space(2)};\n  border: 1px solid ${p => p.theme.border};\n  border-radius: 3px;\n  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.04);\n  position: relative;\n  overflow: hidden;\n\n  a {\n    max-width: 100%;\n    overflow-x: hidden;\n    text-overflow: ellipsis;\n  }\n\n  p {\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n\n  ${p =>\n    p.clipped &&\n    `\n    max-height: 68px;\n\n    &:after {\n      position: absolute;\n      content: '';\n      display: block;\n      bottom: 0;\n      right: 0;\n      left: 0;\n      height: 36px;\n      background-image: linear-gradient(180deg, rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 1));\n      border-bottom: 6px solid #fff;\n      border-radius: 0 0 3px 3px;\n      pointer-events: none;\n    }\n  `}\n`;\n\nconst StyledTimeSince = styled(TimeSince)`\n  color: ${p => p.theme.gray300};\n  padding-left: ${space(1)};\n`;\n","import React from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport EmptyStateWarning from 'app/components/emptyStateWarning';\nimport ErrorBoundary from 'app/components/errorBoundary';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport PageHeading from 'app/components/pageHeading';\nimport Pagination from 'app/components/pagination';\nimport {Panel} from 'app/components/panels';\nimport {t} from 'app/locale';\nimport {PageContent} from 'app/styles/organization';\nimport space from 'app/styles/space';\nimport {Activity, Organization} from 'app/types';\nimport routeTitle from 'app/utils/routeTitle';\nimport withOrganization from 'app/utils/withOrganization';\nimport AsyncView from 'app/views/asyncView';\n\nimport ActivityFeedItem from './activityFeedItem';\n\ntype Props = {\n  organization: Organization;\n} & RouteComponentProps<{orgId: string}, {}> &\n  AsyncView['props'];\n\ntype State = {\n  activity: Activity[];\n} & AsyncView['state'];\n\nclass OrganizationActivity extends AsyncView<Props, State> {\n  getTitle() {\n    const {orgId} = this.props.params;\n    return routeTitle(t('Activity'), orgId);\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['activity', `/organizations/${this.props.params.orgId}/activity/`]];\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderEmpty() {\n    return (\n      <EmptyStateWarning>\n        <p>{t('Nothing to show here, move along.')}</p>\n      </EmptyStateWarning>\n    );\n  }\n\n  renderError(error?: Error, disableLog = false, disableReport = false): React.ReactNode {\n    const {errors} = this.state;\n    const notFound = Object.values(errors).find(resp => resp && resp.status === 404);\n    if (notFound) {\n      return this.renderBody();\n    }\n    return super.renderError(error, disableLog, disableReport);\n  }\n\n  renderBody() {\n    const {loading, activity, activityPageLinks} = this.state;\n\n    return (\n      <PageContent>\n        <PageHeading withMargins>{t('Activity')}</PageHeading>\n        <Panel>\n          {loading && <LoadingIndicator />}\n          {!loading && !activity?.length && this.renderEmpty()}\n          {!loading && activity?.length > 0 && (\n            <div data-test-id=\"activity-feed-list\">\n              {activity.map(item => (\n                <ErrorBoundary\n                  mini\n                  css={{marginBottom: space(1), borderRadius: 0}}\n                  key={item.id}\n                >\n                  <ActivityFeedItem organization={this.props.organization} item={item} />\n                </ErrorBoundary>\n              ))}\n            </div>\n          )}\n        </Panel>\n        {activityPageLinks && (\n          <Pagination pageLinks={activityPageLinks} {...this.props} />\n        )}\n      </PageContent>\n    );\n  }\n}\n\nexport default withOrganization(OrganizationActivity);\n"],"sourceRoot":""}