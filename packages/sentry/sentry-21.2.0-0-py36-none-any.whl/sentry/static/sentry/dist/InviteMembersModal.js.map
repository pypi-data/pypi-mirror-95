{"version":3,"sources":["webpack:///./app/components/modals/inviteMembersModal/renderEmailValue.tsx","webpack:///./app/components/modals/inviteMembersModal/inviteRowControl.tsx","webpack:///./app/components/modals/inviteMembersModal/index.tsx","webpack:///./app/utils/withTeams.tsx","webpack:///./app/components/roleSelectControl.tsx"],"names":["renderEmailValue","status","valueProps","children","props","error","emailLabel","undefined","disabled","title","EmailLabel","sent","SendingIndicator","size","EmailValue","p","css","theme","red300","red100","green300","space","LoadingIndicator","defaultProps","hideMessage","InviteRowControl","className","emails","role","teams","roleOptions","roleDisabledUnallowed","teamOptions","inviteStatus","onRemove","onChangeEmails","onChangeRole","onChangeTeams","disableRemove","deprecatedSelectControl","data-test-id","placeholder","t","value","options","map","label","valueComponent","onBlur","e","target","shouldKeyDownEventCreateNewOption","keyCode","includes","onBlurResetsInput","onCloseResetsInput","onChange","multiple","creatable","clearable","noMenu","roles","disableUnallowed","slug","borderless","icon","onClick","InviteModalHook","HookOrDefault","hookName","defaultComponent","onSendInvites","sendInvites","canSend","InviteMembersModal","sessionId","reset","setState","pendingInvites","inviteTemplate","complete","sendingInvites","trackAnalyticsEvent","eventKey","eventName","organization_id","organization","id","modal_session","sendInvite","invite","a","data","email","state","endpoint","willInvite","api","requestPromise","method","errorResponse","responseJSON","emailError","Array","isArray","Promise","all","invites","addInviteRow","this","uniqueId","source","can_invite","orgId","initialData","initial","index","Set","splice","Footer","closeModal","allTeams","member","disableInputs","headerInfo","Fragment","Heading","position","Subtext","InviteeHeadings","i","StyledInviteRow","key","MEMBER_ROLES","removeInviteRow","opts","setEmails","v","setRole","setTeams","length","AddButton","priority","isCircled","FooterContent","statusMessage","isValidInvites","inviteButtonLabel","reduce","acc","row","inv","hasDuplicateEmails","StatusMessage","mini","relative","statuses","Object","values","sentCount","filter","errorCount","tctComponents","tn","failed","tct","access","numberInvites","inviteText","requestText","AsyncComponent","headerFontSize","subText","inviteRowGrid","fontSizeSmall","Button","fontSizeMedium","gray400","modalCss","withLatestContext","withTeams","WrappedComponent","createReactClass","displayName","getDisplayName","mixins","Reflux","listenTo","TeamStore","getInitialState","getAll","onTeamUpdate","render","RoleSelectControl","r","name","allowed","description","desc","components","Option","optionProps","RoleItem","styles","control","provided","borderBottomLeftRadius","borderRadius","borderBottomRightRadius","menu","marginTop","width","overflow"],"mappings":"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","file":"InviteMembersModal.js","sourcesContent":["import React from 'react';\nimport {Value} from 'react-select-legacy';\nimport {css} from '@emotion/core';\nimport styled from '@emotion/styled';\n\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport Tooltip from 'app/components/tooltip';\nimport {IconCheckmark, IconWarning} from 'app/icons';\nimport space from 'app/styles/space';\n\nimport {InviteStatus} from './types';\n\nfunction renderEmailValue(status: InviteStatus[string], valueProps) {\n  const {children, ...props} = valueProps;\n  const error = status && status.error;\n\n  const emailLabel =\n    status === undefined ? (\n      children\n    ) : (\n      <Tooltip disabled={!error} title={error}>\n        <EmailLabel>\n          {children}\n          {!status.sent && !status.error && <SendingIndicator />}\n          {status.error && <IconWarning size=\"10px\" />}\n          {status.sent && <IconCheckmark size=\"10px\" />}\n        </EmailLabel>\n      </Tooltip>\n    );\n\n  return (\n    <EmailValue status={status}>\n      <Value {...props}>{emailLabel}</Value>\n    </EmailValue>\n  );\n}\n\nconst EmailValue = styled('div')<{status: InviteStatus[string]}>`\n  display: initial;\n\n  .Select--multi.is-disabled & .Select-value {\n    ${p =>\n      p.status &&\n      p.status.error &&\n      css`\n        color: ${p.theme.red300};\n        border-color: ${p.theme.red300};\n        background-color: ${p.theme.red100};\n      `};\n  }\n\n  .Select-value svg {\n    color: ${p => (p.status && p.status.sent ? p.theme.green300 : 'inherit')};\n  }\n`;\n\nconst EmailLabel = styled('div')`\n  display: inline-grid;\n  grid-auto-flow: column;\n  grid-gap: ${space(0.5)};\n  align-items: center;\n`;\n\nconst SendingIndicator = styled(LoadingIndicator)`\n  margin: 0;\n  .loading-indicator {\n    border-width: 2px;\n  }\n`;\n\nSendingIndicator.defaultProps = {\n  hideMessage: true,\n  size: 14,\n};\n\nexport default renderEmailValue;\n","import React from 'react';\n\nimport Button from 'app/components/button';\nimport SelectControl from 'app/components/forms/selectControl';\nimport RoleSelectControl from 'app/components/roleSelectControl';\nimport {IconClose} from 'app/icons/iconClose';\nimport {t} from 'app/locale';\nimport {MemberRole, SelectValue, Team} from 'app/types';\n\nimport renderEmailValue from './renderEmailValue';\nimport {InviteStatus} from './types';\n\ntype SelectOption = SelectValue<string>;\n\ntype Props = {\n  className?: string;\n  disabled: boolean;\n  disableRemove: boolean;\n  emails: string[];\n  role: string;\n  teams: string[];\n  roleOptions: MemberRole[];\n  roleDisabledUnallowed: boolean;\n  teamOptions: Team[];\n  inviteStatus: InviteStatus;\n  onRemove: () => void;\n\n  onChangeEmails: (emails: SelectOption[]) => void;\n  onChangeRole: (role: SelectOption) => void;\n  onChangeTeams: (teams?: SelectOption[] | null) => void;\n};\n\nconst InviteRowControl = ({\n  className,\n  disabled,\n  emails,\n  role,\n  teams,\n  roleOptions,\n  roleDisabledUnallowed,\n  teamOptions,\n  inviteStatus,\n  onRemove,\n  onChangeEmails,\n  onChangeRole,\n  onChangeTeams,\n  disableRemove,\n}: Props) => (\n  <div className={className}>\n    <div>\n      <SelectControl\n        deprecatedSelectControl\n        data-test-id=\"select-emails\"\n        disabled={disabled}\n        placeholder={t('Enter one or more emails')}\n        value={emails}\n        options={emails.map(value => ({\n          value,\n          label: value,\n        }))}\n        valueComponent={props => renderEmailValue(inviteStatus[props.value.value], props)}\n        onBlur={e =>\n          e.target.value &&\n          onChangeEmails([\n            ...emails.map(value => ({value, label: value})),\n            {label: e.target.value, value: e.target.value},\n          ])\n        }\n        shouldKeyDownEventCreateNewOption={({keyCode}) =>\n          // Keycodes are ENTER, SPACE, TAB, COMMA\n          [13, 32, 9, 188].includes(keyCode)\n        }\n        onBlurResetsInput={false}\n        onCloseResetsInput={false}\n        onChange={onChangeEmails}\n        multiple\n        creatable\n        clearable\n        noMenu\n      />\n    </div>\n    <div>\n      <RoleSelectControl\n        data-test-id=\"select-role\"\n        disabled={disabled}\n        value={role}\n        roles={roleOptions}\n        disableUnallowed={roleDisabledUnallowed}\n        onChange={onChangeRole}\n      />\n    </div>\n    <div>\n      <SelectControl\n        data-test-id=\"select-teams\"\n        disabled={disabled}\n        placeholder={t('Add to teams\\u2026')}\n        value={teams}\n        options={teamOptions.map(({slug}) => ({\n          value: slug,\n          label: `#${slug}`,\n        }))}\n        onChange={onChangeTeams}\n        multiple\n        clearable\n      />\n    </div>\n    <Button\n      borderless\n      icon={<IconClose />}\n      size=\"zero\"\n      onClick={onRemove}\n      disabled={disableRemove}\n    />\n  </div>\n);\n\nexport default InviteRowControl;\n","import React from 'react';\nimport {css} from '@emotion/core';\nimport styled from '@emotion/styled';\n\nimport {ModalRenderProps} from 'app/actionCreators/modal';\nimport AsyncComponent from 'app/components/asyncComponent';\nimport Button from 'app/components/button';\nimport HookOrDefault from 'app/components/hookOrDefault';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport QuestionTooltip from 'app/components/questionTooltip';\nimport {MEMBER_ROLES} from 'app/constants';\nimport {IconAdd, IconCheckmark, IconWarning} from 'app/icons';\nimport {t, tct, tn} from 'app/locale';\nimport space from 'app/styles/space';\nimport {Organization, Team} from 'app/types';\nimport {trackAnalyticsEvent} from 'app/utils/analytics';\nimport {uniqueId} from 'app/utils/guid';\nimport withLatestContext from 'app/utils/withLatestContext';\nimport withTeams from 'app/utils/withTeams';\n\nimport InviteRowControl from './inviteRowControl';\nimport {InviteRow, InviteStatus, NormalizedInvite} from './types';\n\ntype Props = AsyncComponent['props'] &\n  ModalRenderProps & {\n    organization: Organization;\n    teams: Team[];\n    source?: string;\n    initialData?: Partial<InviteRow>[];\n  };\n\ntype State = AsyncComponent['state'] & {\n  pendingInvites: InviteRow[];\n  sendingInvites: boolean;\n  complete: boolean;\n  inviteStatus: InviteStatus;\n};\n\nconst DEFAULT_ROLE = 'member';\n\nconst InviteModalHook = HookOrDefault({\n  hookName: 'member-invite-modal:customization',\n  defaultComponent: ({onSendInvites, children}) =>\n    children({sendInvites: onSendInvites, canSend: true}),\n});\n\ntype InviteModalRenderFunc = React.ComponentProps<typeof InviteModalHook>['children'];\n\nclass InviteMembersModal extends AsyncComponent<Props, State> {\n  get inviteTemplate(): InviteRow {\n    return {\n      emails: new Set(),\n      teams: new Set(),\n      role: DEFAULT_ROLE,\n    };\n  }\n\n  /**\n   * Used for analytics tracking of the modals usage.\n   */\n  sessionId = '';\n\n  componentDidMount() {\n    this.sessionId = uniqueId();\n\n    const {organization, source} = this.props;\n\n    trackAnalyticsEvent({\n      eventKey: 'invite_modal.opened',\n      eventName: 'Invite Modal: Opened',\n      organization_id: organization.id,\n      modal_session: this.sessionId,\n      can_invite: this.willInvite,\n      source,\n    });\n  }\n\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const orgId = this.props.organization.slug;\n\n    return [['member', `/organizations/${orgId}/members/me/`]];\n  }\n\n  getDefaultState() {\n    const state = super.getDefaultState();\n    const {initialData} = this.props;\n\n    const pendingInvites = initialData\n      ? initialData.map(initial => ({\n          ...this.inviteTemplate,\n          ...initial,\n        }))\n      : [this.inviteTemplate];\n\n    return {\n      ...state,\n      pendingInvites,\n      inviteStatus: {},\n      complete: false,\n      sendingInvites: false,\n    };\n  }\n\n  reset = () => {\n    this.setState({\n      pendingInvites: [this.inviteTemplate],\n      inviteStatus: {},\n      complete: false,\n      sendingInvites: false,\n    });\n\n    trackAnalyticsEvent({\n      eventKey: 'invite_modal.add_more',\n      eventName: 'Invite Modal: Add More',\n      organization_id: this.props.organization.id,\n      modal_session: this.sessionId,\n    });\n  };\n\n  sendInvite = async (invite: NormalizedInvite) => {\n    const {slug} = this.props.organization;\n    const data = {\n      email: invite.email,\n      teams: [...invite.teams],\n      role: invite.role,\n    };\n\n    this.setState(state => ({\n      inviteStatus: {...state.inviteStatus, [invite.email]: {sent: false}},\n    }));\n\n    const endpoint = this.willInvite\n      ? `/organizations/${slug}/members/`\n      : `/organizations/${slug}/invite-requests/`;\n\n    try {\n      await this.api.requestPromise(endpoint, {method: 'POST', data});\n    } catch (err) {\n      const errorResponse = err.responseJSON;\n\n      // Use the email error message if available. This inconsistently is\n      // returned as either a list of errors for the field, or a single error.\n      const emailError =\n        !errorResponse || !errorResponse.email\n          ? false\n          : Array.isArray(errorResponse.email)\n          ? errorResponse.email[0]\n          : errorResponse.email;\n\n      const error = emailError || t('Could not invite user');\n\n      this.setState(state => ({\n        inviteStatus: {...state.inviteStatus, [invite.email]: {sent: false, error}},\n      }));\n      return;\n    }\n\n    this.setState(state => ({\n      inviteStatus: {...state.inviteStatus, [invite.email]: {sent: true}},\n    }));\n  };\n\n  sendInvites = async () => {\n    this.setState({sendingInvites: true});\n    await Promise.all(this.invites.map(this.sendInvite));\n    this.setState({sendingInvites: false, complete: true});\n\n    trackAnalyticsEvent({\n      eventKey: this.willInvite\n        ? 'invite_modal.invites_sent'\n        : 'invite_modal.requests_sent',\n      eventName: this.willInvite\n        ? 'Invite Modal: Invites Sent'\n        : 'Invite Modal: Requests Sent',\n      organization_id: this.props.organization.id,\n      modal_session: this.sessionId,\n    });\n  };\n\n  addInviteRow = () =>\n    this.setState(state => ({\n      pendingInvites: [...state.pendingInvites, this.inviteTemplate],\n    }));\n\n  setEmails(emails: string[], index: number) {\n    this.setState(state => {\n      const pendingInvites = [...state.pendingInvites];\n      pendingInvites[index] = {...pendingInvites[index], emails: new Set(emails)};\n\n      return {pendingInvites};\n    });\n  }\n\n  setTeams(teams: string[], index: number) {\n    this.setState(state => {\n      const pendingInvites = [...state.pendingInvites];\n      pendingInvites[index] = {...pendingInvites[index], teams: new Set(teams)};\n\n      return {pendingInvites};\n    });\n  }\n\n  setRole(role: string, index: number) {\n    this.setState(state => {\n      const pendingInvites = [...state.pendingInvites];\n      pendingInvites[index] = {...pendingInvites[index], role};\n\n      return {pendingInvites};\n    });\n  }\n\n  removeInviteRow(index: number) {\n    this.setState(state => {\n      const pendingInvites = [...state.pendingInvites];\n      pendingInvites.splice(index, 1);\n      return {pendingInvites};\n    });\n  }\n\n  get invites(): NormalizedInvite[] {\n    return this.state.pendingInvites.reduce<NormalizedInvite[]>(\n      (acc, row) => [\n        ...acc,\n        ...[...row.emails].map(email => ({email, teams: row.teams, role: row.role})),\n      ],\n      []\n    );\n  }\n\n  get hasDuplicateEmails() {\n    const emails = this.invites.map(inv => inv.email);\n    return emails.length !== new Set(emails).size;\n  }\n\n  get isValidInvites() {\n    return this.invites.length > 0 && !this.hasDuplicateEmails;\n  }\n\n  get statusMessage() {\n    const {sendingInvites, complete, inviteStatus} = this.state;\n\n    if (sendingInvites) {\n      return (\n        <StatusMessage>\n          <LoadingIndicator mini relative hideMessage size={16} />\n          {this.willInvite\n            ? t('Sending organization invitations...')\n            : t('Sending invite requests...')}\n        </StatusMessage>\n      );\n    }\n\n    if (complete) {\n      const statuses = Object.values(inviteStatus);\n      const sentCount = statuses.filter(i => i.sent).length;\n      const errorCount = statuses.filter(i => i.error).length;\n\n      const invites = <strong>{tn('%s invite', '%s invites', sentCount)}</strong>;\n      const tctComponents = {\n        invites,\n        failed: errorCount,\n      };\n\n      return (\n        <StatusMessage status=\"success\">\n          <IconCheckmark size=\"sm\" />\n          {errorCount > 0\n            ? tct('Sent [invites], [failed] failed to send.', tctComponents)\n            : tct('Sent [invites]', tctComponents)}\n        </StatusMessage>\n      );\n    }\n\n    if (this.hasDuplicateEmails) {\n      return (\n        <StatusMessage status=\"error\">\n          <IconWarning size=\"sm\" />\n          {t('Duplicate emails between invite rows.')}\n        </StatusMessage>\n      );\n    }\n\n    return null;\n  }\n\n  get willInvite() {\n    return this.props.organization.access?.includes('member:write');\n  }\n\n  get inviteButtonLabel() {\n    if (this.invites.length > 0) {\n      const numberInvites = this.invites.length;\n\n      // Note we use `t()` here because `tn()` expects the same # of string formatters\n      const inviteText =\n        numberInvites === 1 ? t('Send invite') : t('Send invites (%s)', numberInvites);\n      const requestText =\n        numberInvites === 1\n          ? t('Send invite request')\n          : t('Send invite requests (%s)', numberInvites);\n\n      return this.willInvite ? inviteText : requestText;\n    }\n\n    return this.willInvite ? t('Send invite') : t('Send invite request');\n  }\n\n  render() {\n    const {Footer, closeModal, organization, teams: allTeams} = this.props;\n    const {pendingInvites, sendingInvites, complete, inviteStatus, member} = this.state;\n\n    const disableInputs = sendingInvites || complete;\n\n    // eslint-disable-next-line react/prop-types\n    const hookRenderer: InviteModalRenderFunc = ({sendInvites, canSend, headerInfo}) => (\n      <React.Fragment>\n        <Heading>\n          {t('Invite New Members')}\n          {!this.willInvite && (\n            <QuestionTooltip\n              title={t(\n                `You do not have permission to directly invite members. Email\n                 addresses entered here will be forwarded to organization\n                 managers and owners; they will be prompted to approve the\n                 invitation.`\n              )}\n              size=\"sm\"\n              position=\"bottom\"\n            />\n          )}\n        </Heading>\n        <Subtext>\n          {this.willInvite\n            ? t('Invite new members by email to join your organization.')\n            : t(\n                `You don’t have permission to directly invite users, but we’ll\n                 send a request on your behalf.`\n              )}\n        </Subtext>\n\n        {headerInfo}\n\n        <InviteeHeadings>\n          <div>{t('Email addresses')}</div>\n          <div>{t('Role')}</div>\n          <div>{t('Add to team')}</div>\n        </InviteeHeadings>\n\n        {pendingInvites.map(({emails, role, teams}, i) => (\n          <StyledInviteRow\n            key={i}\n            disabled={disableInputs}\n            emails={[...emails]}\n            role={role}\n            teams={[...teams]}\n            roleOptions={member ? member.roles : MEMBER_ROLES}\n            roleDisabledUnallowed={this.willInvite}\n            teamOptions={allTeams}\n            inviteStatus={inviteStatus}\n            onRemove={() => this.removeInviteRow(i)}\n            onChangeEmails={opts =>\n              this.setEmails(\n                opts.map(v => v.value),\n                i\n              )\n            }\n            onChangeRole={value => this.setRole(value?.value, i)}\n            onChangeTeams={opts => this.setTeams(opts ? opts.map(v => v.value) : [], i)}\n            disableRemove={disableInputs || pendingInvites.length === 1}\n          />\n        ))}\n\n        <AddButton\n          disabled={disableInputs}\n          priority=\"link\"\n          onClick={this.addInviteRow}\n          icon={<IconAdd size=\"xs\" isCircled />}\n        >\n          {t('Add another')}\n        </AddButton>\n\n        <Footer>\n          <FooterContent>\n            <div>{this.statusMessage}</div>\n\n            {complete ? (\n              <React.Fragment>\n                <Button data-test-id=\"send-more\" size=\"small\" onClick={this.reset}>\n                  {t('Send more invites')}\n                </Button>\n                <Button\n                  data-test-id=\"close\"\n                  priority=\"primary\"\n                  size=\"small\"\n                  onClick={() => {\n                    trackAnalyticsEvent({\n                      eventKey: 'invite_modal.closed',\n                      eventName: 'Invite Modal: Closed',\n                      organization_id: this.props.organization.id,\n                      modal_session: this.sessionId,\n                    });\n                    closeModal();\n                  }}\n                >\n                  {t('Close')}\n                </Button>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                <Button\n                  data-test-id=\"cancel\"\n                  size=\"small\"\n                  onClick={closeModal}\n                  disabled={disableInputs}\n                >\n                  {t('Cancel')}\n                </Button>\n                <Button\n                  size=\"small\"\n                  data-test-id=\"send-invites\"\n                  priority=\"primary\"\n                  disabled={!canSend || !this.isValidInvites || disableInputs}\n                  onClick={sendInvites}\n                >\n                  {this.inviteButtonLabel}\n                </Button>\n              </React.Fragment>\n            )}\n          </FooterContent>\n        </Footer>\n      </React.Fragment>\n    );\n\n    return (\n      <InviteModalHook\n        organization={organization}\n        willInvite={this.willInvite}\n        onSendInvites={this.sendInvites}\n      >\n        {hookRenderer}\n      </InviteModalHook>\n    );\n  }\n}\n\nconst Heading = styled('h1')`\n  display: inline-grid;\n  grid-gap: ${space(1.5)};\n  grid-auto-flow: column;\n  align-items: center;\n  font-weight: 400;\n  font-size: ${p => p.theme.headerFontSize};\n  margin-top: 0;\n  margin-bottom: ${space(0.75)};\n`;\n\nconst Subtext = styled('p')`\n  color: ${p => p.theme.subText};\n  margin-bottom: ${space(3)};\n`;\n\nconst inviteRowGrid = css`\n  display: grid;\n  grid-gap: ${space(1.5)};\n  grid-template-columns: 3fr 180px 2fr max-content;\n`;\n\nconst InviteeHeadings = styled('div')`\n  ${inviteRowGrid};\n\n  margin-bottom: ${space(1)};\n  font-weight: 600;\n  text-transform: uppercase;\n  font-size: ${p => p.theme.fontSizeSmall};\n`;\n\nconst StyledInviteRow = styled(InviteRowControl)`\n  ${inviteRowGrid};\n  margin-bottom: ${space(1.5)};\n`;\n\nconst AddButton = styled(Button)`\n  margin-top: ${space(3)};\n`;\n\nconst FooterContent = styled('div')`\n  width: 100%;\n  display: grid;\n  grid-template-columns: 1fr max-content max-content;\n  grid-gap: ${space(1)};\n`;\n\nconst StatusMessage = styled('div')<{status?: 'success' | 'error'}>`\n  display: grid;\n  grid-template-columns: max-content max-content;\n  grid-gap: ${space(1)};\n  align-items: center;\n  font-size: ${p => p.theme.fontSizeMedium};\n  color: ${p => (p.status === 'error' ? p.theme.red300 : p.theme.gray400)};\n\n  > :first-child {\n    ${p => p.status === 'success' && `color: ${p.theme.green300}`};\n  }\n`;\n\nexport const modalCss = css`\n  padding: 50px;\n\n  .modal-dialog {\n    position: unset;\n    width: 100%;\n    max-width: 800px;\n    margin: 50px auto;\n  }\n`;\n\nexport default withLatestContext(withTeams(InviteMembersModal));\n","import React from 'react';\nimport createReactClass from 'create-react-class';\nimport Reflux from 'reflux';\n\nimport TeamStore from 'app/stores/teamStore';\nimport {Team} from 'app/types';\nimport getDisplayName from 'app/utils/getDisplayName';\n\ntype InjectedTeamsProps = {\n  teams: Team[];\n};\n\ntype State = {\n  teams: Team[];\n};\n\n/**\n * Higher order component that uses TeamStore and provides a list of teams\n */\nconst withTeams = <P extends InjectedTeamsProps>(\n  WrappedComponent: React.ComponentType<P>\n) =>\n  createReactClass<Omit<P, keyof InjectedTeamsProps>, State>({\n    displayName: `withTeams(${getDisplayName(WrappedComponent)})`,\n    mixins: [Reflux.listenTo(TeamStore, 'onTeamUpdate') as any],\n\n    getInitialState() {\n      return {\n        teams: TeamStore.getAll(),\n      };\n    },\n\n    onTeamUpdate() {\n      this.setState({\n        teams: TeamStore.getAll(),\n      });\n    },\n    render() {\n      return (\n        <WrappedComponent {...(this.props as P)} teams={this.state.teams as Team[]} />\n      );\n    },\n  });\n\nexport default withTeams;\n","import React from 'react';\nimport {components, OptionProps} from 'react-select';\nimport styled from '@emotion/styled';\n\nimport SelectControl, {ControlProps} from 'app/components/forms/selectControl';\nimport space from 'app/styles/space';\nimport {MemberRole} from 'app/types';\nimport theme from 'app/utils/theme';\n\ntype OptionType = {\n  label: string;\n  value: string;\n  disabled: boolean;\n  description: string;\n};\n\ntype Props = Omit<ControlProps<OptionType>, 'onChange' | 'value'> & {\n  roles: MemberRole[];\n  disableUnallowed: boolean;\n  value?: string;\n  /**\n   * Narrower type than SelectControl because there is no empty value\n   */\n  onChange?: (value: OptionType) => void;\n};\n\nfunction RoleSelectControl({roles, disableUnallowed, ...props}: Props) {\n  return (\n    <SelectControl\n      options={roles?.map(\n        (r: MemberRole) =>\n          ({\n            value: r.id,\n            label: r.name,\n            disabled: disableUnallowed && !r.allowed,\n            description: r.desc,\n          } as OptionType)\n      )}\n      components={{\n        Option: ({label, data, ...optionProps}: OptionProps<OptionType>) => (\n          <components.Option label={label} {...(optionProps as any)}>\n            <RoleItem>\n              <h1>{label}</h1>\n              <div>{data.description}</div>\n            </RoleItem>\n          </components.Option>\n        ),\n      }}\n      styles={{\n        control: provided => ({\n          ...provided,\n          borderBottomLeftRadius: theme.borderRadius,\n          borderBottomRightRadius: theme.borderRadius,\n        }),\n        menu: provided => ({\n          ...provided,\n          borderRadius: theme.borderRadius,\n          marginTop: space(0.5),\n          width: '350px',\n          overflow: 'hidden',\n        }),\n      }}\n      {...props}\n    />\n  );\n}\n\nconst RoleItem = styled('div')`\n  display: grid;\n  grid-template-columns: 80px 1fr;\n  grid-gap: ${space(1)};\n\n  h1,\n  div {\n    font-size: ${p => p.theme.fontSizeSmall};\n    line-height: 1.4;\n    margin: ${space(0.25)} 0;\n  }\n`;\n\nexport default RoleSelectControl;\n"],"sourceRoot":""}