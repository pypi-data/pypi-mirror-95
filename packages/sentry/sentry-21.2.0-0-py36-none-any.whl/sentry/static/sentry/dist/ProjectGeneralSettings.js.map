{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/views/settings/project/permissionAlert.tsx","webpack:///./app/utils/slugify.tsx","webpack:///./app/data/forms/projectGeneralSettings.tsx","webpack:///./app/views/settings/projectGeneralSettings.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","UnstyledSettingsPageHeader","props","icon","subtitle","action","tabs","noTitleStyles","body","isNarrow","TitleAndActions","TitleWrapper","Icon","Title","styled","Subtitle","Action","BodyWrapper","TabsWrapper","React","Component","defaultProps","p","space","theme","gray400","fontSizeLarge","SettingsPageHeader","routeTitleGen","routeName","orgSlug","withSentry","tmpl","recreateRoute","to","options","lastRootIndex","routeIndex","routes","params","location","stepBack","paths","map","path","indexOf","findLastIndex","slice","baseRoute","search","hash","fullRoute","join","replaceRouterParams","PermissionAlert","access","hasAccess","type","size","t","slugify","str","toLowerCase","replace","route","RESOLVE_AGE_ALLOWED_VALUES","i","values","push","getResolveAgeAllowedValues","ORG_DISABLED_REASON","fields","slug","name","required","label","placeholder","help","transformInput","saveOnBlur","saveMessageAlertType","saveMessage","platform","choices","platforms","id","PlatformWrapper","key","StyledPlatformIcon","subjectPrefix","resolveAge","allowedValues","formatLabel","val","Number","tn","tct","Caution","allowedDomains","multiline","autosize","maxRows","getValue","extractMultilineFields","setValue","convertMultilineFieldValue","scrapeJavaScript","disabled","organization","disabledReason","securityToken","value","getDynamicText","fixed","securityTokenHeader","verifySSL","PlatformIcon","ProjectGeneralSettings","_form","handleTransferFieldChange","handleRemoveProject","orgId","project","state","data","removeProject","api","then","window","assign","handleXhrErrorResponse","handleTransferProject","email","length","transferProject","isProjectAdmin","Set","has","projectId","isInternal","linebreak","onConfirm","priority","confirmText","message","className","renderMessage","confirm","hideFooter","onFieldChange","onSubmit","_data","_onSuccess","_onError","e","stopPropagation","endpoint","jsonFormProps","additionalFieldProps","features","team","teams","undefined","allowUndo","initialData","apiMethod","apiEndpoint","onSubmitSuccess","resp","setState","changeProjectSlug","onChangeSlug","ProjectActions","updateSuccess","renderHeader","noMargin","link","href","Origin","Referer","renderRemoveProject","renderTransferProject","ProjectGeneralSettingsContainer","createReactClass","mixins","Reflux","listenTo","ProjectsStore","changedSlug","onProjectsUpdate","getBySlug","browserHistory","render","newSlug","withOrganization"],"mappings":"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","file":"ProjectGeneralSettings.js","sourcesContent":["import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {HeaderTitle} from 'app/styles/organization';\nimport space from 'app/styles/space';\n\ntype Props = {\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // The title\n  title: React.ReactNode;\n  subtitle?: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n  className?: string;\n\n  // CTA button\n  action?: React.ReactNode;\n\n  body?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass UnstyledSettingsPageHeader extends React.Component<Props> {\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {\n      icon,\n      title,\n      subtitle,\n      action,\n      tabs,\n      noTitleStyles,\n      body,\n      ...props\n    } = this.props;\n\n    // If Header is narrow, use align-items to center <Action>.\n    // Otherwise, use a fixed margin to prevent an odd alignment.\n    // This is needed as Actions could be a button or a dropdown.\n    const isNarrow = !subtitle;\n\n    return (\n      <div {...props}>\n        <TitleAndActions isNarrow={isNarrow}>\n          <TitleWrapper>\n            {icon && <Icon>{icon}</Icon>}\n            {title && (\n              <Title tabs={tabs} styled={noTitleStyles}>\n                <HeaderTitle>{title}</HeaderTitle>\n                {subtitle && <Subtitle>{subtitle}</Subtitle>}\n              </Title>\n            )}\n          </TitleWrapper>\n          {action && <Action isNarrow={isNarrow}>{action}</Action>}\n        </TitleAndActions>\n\n        {body && <BodyWrapper>{body}</BodyWrapper>}\n        {tabs && <TabsWrapper>{tabs}</TabsWrapper>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')<{isNarrow?: boolean}>`\n  display: flex;\n  align-items: ${p => (p.isNarrow ? 'center' : 'flex-start')};\n`;\nconst TitleWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p => !p.styled && `font-size: 20px; font-weight: 600;`};\n  margin: ${space(4)} ${space(2)} ${space(3)} 0;\n`;\nconst Subtitle = styled('div')`\n  color: ${p => p.theme.gray400};\n  font-weight: 400;\n  font-size: ${p => p.theme.fontSizeLarge};\n  padding: ${space(1.5)} 0 0;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{isNarrow?: boolean}>`\n  margin-top: ${p => (p.isNarrow ? '0' : space(4))};\n`;\n\nconst SettingsPageHeader = styled(UnstyledSettingsPageHeader)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nconst BodyWrapper = styled('div')`\n  flex: 1;\n  margin: 0 0 ${space(3)};\n`;\nconst TabsWrapper = styled('div')`\n  flex: 1;\n  margin: 0; /* sentry/components/navTabs has added margin */\n`;\n\nexport default SettingsPageHeader;\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true\n): string {\n  const tmpl = `${routeName} - ${orgSlug}`;\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import {Location} from 'history';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'app/utils/replaceRouterParams';\nimport {RouteWithName} from 'app/views/settings/components/settingsBreadcrumb/types';\n\ntype Options = {\n  routes: RouteWithName[];\n\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n  location?: Location;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(\n  to: string | RouteWithName,\n  options: Options\n): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","import React from 'react';\n\nimport Access from 'app/components/acl/access';\nimport Alert from 'app/components/alert';\nimport {IconWarning} from 'app/icons';\nimport {t} from 'app/locale';\n\ntype Props = React.ComponentPropsWithoutRef<typeof Alert> &\n  Pick<React.ComponentProps<typeof Access>, 'access'>;\n\nconst PermissionAlert = ({access = ['project:write'], ...props}: Props) => (\n  <Access access={access}>\n    {({hasAccess}) =>\n      !hasAccess && (\n        <Alert type=\"warning\" icon={<IconWarning size=\"xs\" />} {...props}>\n          {t(\n            'These settings can only be edited by users with the organization owner, manager, or admin role.'\n          )}\n        </Alert>\n      )\n    }\n  </Access>\n);\n\nexport default PermissionAlert;\n","// XXX: This is NOT an exhaustive slugify function\n// Only forces lowercase and replaces spaces with hyphens\nexport default function slugify(str: any): string {\n  return typeof str === 'string' ? str.toLowerCase().replace(' ', '-') : '';\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport {PlatformIcon} from 'platformicons';\n\nimport platforms from 'app/data/platforms';\nimport {t, tct, tn} from 'app/locale';\nimport space from 'app/styles/space';\nimport {convertMultilineFieldValue, extractMultilineFields} from 'app/utils';\nimport getDynamicText from 'app/utils/getDynamicText';\nimport slugify from 'app/utils/slugify';\nimport {Field} from 'app/views/settings/components/forms/type';\n\n// Export route to make these forms searchable by label/help\nexport const route = '/settings/:orgId/projects/:projectId/';\n\nconst getResolveAgeAllowedValues = () => {\n  let i = 0;\n  const values: number[] = [];\n  while (i <= 720) {\n    values.push(i);\n    if (i < 12) {\n      i += 1;\n    } else if (i < 24) {\n      i += 3;\n    } else if (i < 36) {\n      i += 6;\n    } else if (i < 48) {\n      i += 12;\n    } else {\n      i += 24;\n    }\n  }\n  return values;\n};\n\nconst RESOLVE_AGE_ALLOWED_VALUES = getResolveAgeAllowedValues();\n\nconst ORG_DISABLED_REASON = t(\n  \"This option is enforced by your organization's settings and cannot be customized per-project.\"\n);\n\nexport const fields: Record<string, Field> = {\n  slug: {\n    name: 'slug',\n    type: 'string',\n    required: true,\n    label: t('Name'),\n    placeholder: t('my-service-name'),\n    help: t('A unique ID used to identify this project'),\n    transformInput: slugify,\n\n    saveOnBlur: false,\n    saveMessageAlertType: 'info',\n    saveMessage: t('You will be redirected to the new project slug after saving'),\n  },\n\n  platform: {\n    name: 'platform',\n    type: 'array',\n    label: t('Platform'),\n    choices: () =>\n      platforms.map(({id, name}) => [\n        id,\n        <PlatformWrapper key={id}>\n          <StyledPlatformIcon platform={id} />\n          {name}\n        </PlatformWrapper>,\n      ]),\n    help: t('The primary platform for this project, used only for aesthetics'),\n  },\n\n  subjectPrefix: {\n    name: 'subjectPrefix',\n    type: 'string',\n    label: t('Subject Prefix'),\n    placeholder: t('e.g. [my-org]'),\n    help: t('Choose a custom prefix for emails from this project'),\n  },\n\n  resolveAge: {\n    name: 'resolveAge',\n    type: 'range',\n    allowedValues: RESOLVE_AGE_ALLOWED_VALUES,\n    label: t('Auto Resolve'),\n    help: t(\n      \"Automatically resolve an issue if it hasn't been seen for this amount of time\"\n    ),\n    formatLabel: val => {\n      val = Number(val);\n      if (val === 0) {\n        return t('Disabled');\n      }\n\n      if (val > 23 && val % 24 === 0) {\n        // Based on allowed values, val % 24 should always be true\n        val = val / 24;\n        return tn('%s day', '%s days', val);\n      }\n\n      return tn('%s hour', '%s hours', val);\n    },\n    saveOnBlur: false,\n    saveMessage: tct(\n      '[Caution]: Enabling auto resolve will immediately resolve anything that has ' +\n        'not been seen within this period of time. There is no undo!',\n      {\n        Caution: <strong>Caution</strong>,\n      }\n    ),\n    saveMessageAlertType: 'warning',\n  },\n  allowedDomains: {\n    name: 'allowedDomains',\n    type: 'string',\n    multiline: true,\n    autosize: true,\n    maxRows: 10,\n    placeholder: t('https://example.com or example.com'),\n    label: t('Allowed Domains'),\n    help: t('Separate multiple entries with a newline'),\n    getValue: val => extractMultilineFields(val),\n    setValue: val => convertMultilineFieldValue(val),\n  },\n  scrapeJavaScript: {\n    name: 'scrapeJavaScript',\n    type: 'boolean',\n    // if this is off for the organization, it cannot be enabled for the project\n    disabled: ({organization, name}) => !organization[name],\n    disabledReason: ORG_DISABLED_REASON,\n    // `props` are the props given to FormField\n    setValue: (val, props) => props.organization && props.organization[props.name] && val,\n    label: t('Enable JavaScript source fetching'),\n    help: t('Allow Sentry to scrape missing JavaScript source context when possible'),\n  },\n  securityToken: {\n    name: 'securityToken',\n    type: 'string',\n    label: t('Security Token'),\n    help: t(\n      'Outbound requests matching Allowed Domains will have the header \"{token_header}: {token}\" appended'\n    ),\n    setValue: value => getDynamicText({value, fixed: '__SECURITY_TOKEN__'}),\n  },\n  securityTokenHeader: {\n    name: 'securityTokenHeader',\n    type: 'string',\n    placeholder: t('X-Sentry-Token'),\n    label: t('Security Token Header'),\n    help: t(\n      'Outbound requests matching Allowed Domains will have the header \"{token_header}: {token}\" appended'\n    ),\n  },\n  verifySSL: {\n    name: 'verifySSL',\n    type: 'boolean',\n    label: t('Verify TLS/SSL'),\n    help: t('Outbound requests will verify TLS (sometimes known as SSL) connections'),\n  },\n};\n\nconst PlatformWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n`;\nconst StyledPlatformIcon = styled(PlatformIcon)`\n  margin-right: ${space(1)};\n`;\n","import React from 'react';\nimport {browserHistory, WithRouterProps} from 'react-router';\nimport createReactClass from 'create-react-class';\nimport Reflux from 'reflux';\n\nimport {\n  changeProjectSlug,\n  removeProject,\n  transferProject,\n} from 'app/actionCreators/projects';\nimport ProjectActions from 'app/actions/projectActions';\nimport Button from 'app/components/button';\nimport Confirm from 'app/components/confirm';\nimport {Panel, PanelAlert, PanelHeader} from 'app/components/panels';\nimport {fields} from 'app/data/forms/projectGeneralSettings';\nimport {t, tct} from 'app/locale';\nimport ProjectsStore from 'app/stores/projectsStore';\nimport {Organization, Project} from 'app/types';\nimport handleXhrErrorResponse from 'app/utils/handleXhrErrorResponse';\nimport recreateRoute from 'app/utils/recreateRoute';\nimport routeTitleGen from 'app/utils/routeTitle';\nimport withOrganization from 'app/utils/withOrganization';\nimport AsyncView from 'app/views/asyncView';\nimport Field from 'app/views/settings/components/forms/field';\nimport Form from 'app/views/settings/components/forms/form';\nimport JsonForm from 'app/views/settings/components/forms/jsonForm';\nimport {FieldValue} from 'app/views/settings/components/forms/model';\nimport TextField from 'app/views/settings/components/forms/textField';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\nimport PermissionAlert from 'app/views/settings/project/permissionAlert';\n\ntype Props = AsyncView['props'] &\n  WithRouterProps<{orgId: string; projectId: string}> & {\n    organization: Organization;\n    onChangeSlug: (slug: string) => void;\n  };\n\ntype State = AsyncView['state'] & {\n  data: Project;\n};\n\nclass ProjectGeneralSettings extends AsyncView<Props, State> {\n  private _form: Record<string, FieldValue> = {};\n\n  getTitle() {\n    const {projectId} = this.props.params;\n    return routeTitleGen(t('Project Settings'), projectId, false);\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {orgId, projectId} = this.props.params;\n\n    return [['data', `/projects/${orgId}/${projectId}/`]];\n  }\n\n  handleTransferFieldChange = (id: string, value: FieldValue) => {\n    this._form[id] = value;\n  };\n\n  handleRemoveProject = () => {\n    const {orgId} = this.props.params;\n    const project = this.state.data;\n    if (!project) {\n      return;\n    }\n\n    removeProject(this.api, orgId, project).then(() => {\n      // Need to hard reload because lots of components do not listen to Projects Store\n      window.location.assign('/');\n    }, handleXhrErrorResponse('Unable to remove project'));\n  };\n\n  handleTransferProject = () => {\n    const {orgId} = this.props.params;\n    const project = this.state.data;\n    if (!project) {\n      return;\n    }\n    if (typeof this._form.email !== 'string' || this._form.email.length < 1) {\n      return;\n    }\n\n    transferProject(this.api, orgId, project, this._form.email).then(() => {\n      // Need to hard reload because lots of components do not listen to Projects Store\n      window.location.assign('/');\n    }, handleXhrErrorResponse('Unable to transfer project'));\n  };\n\n  isProjectAdmin = () => new Set(this.props.organization.access).has('project:admin');\n\n  renderRemoveProject() {\n    const project = this.state.data;\n    const isProjectAdmin = this.isProjectAdmin();\n    const {isInternal} = project;\n\n    return (\n      <Field\n        label={t('Remove Project')}\n        help={tct(\n          'Remove the [project] project and all related data. [linebreak] Careful, this action cannot be undone.',\n          {\n            project: <strong>{project.slug}</strong>,\n            linebreak: <br />,\n          }\n        )}\n      >\n        {!isProjectAdmin &&\n          t('You do not have the required permission to remove this project.')}\n\n        {isInternal &&\n          t(\n            'This project cannot be removed. It is used internally by the Sentry server.'\n          )}\n\n        {isProjectAdmin && !isInternal && (\n          <Confirm\n            onConfirm={this.handleRemoveProject}\n            priority=\"danger\"\n            confirmText={t('Remove project')}\n            message={\n              <div>\n                <TextBlock>\n                  <strong>\n                    {t('Removing this project is permanent and cannot be undone!')}\n                  </strong>\n                </TextBlock>\n                <TextBlock>\n                  {t('This will also remove all associated event data.')}\n                </TextBlock>\n              </div>\n            }\n          >\n            <div>\n              <Button className=\"ref-remove-project\" type=\"button\" priority=\"danger\">\n                {t('Remove Project')}\n              </Button>\n            </div>\n          </Confirm>\n        )}\n      </Field>\n    );\n  }\n\n  renderTransferProject() {\n    const project = this.state.data;\n    const isProjectAdmin = this.isProjectAdmin();\n    const {isInternal} = project;\n\n    return (\n      <Field\n        label={t('Transfer Project')}\n        help={tct(\n          'Transfer the [project] project and all related data. [linebreak] Careful, this action cannot be undone.',\n          {\n            project: <strong>{project.slug}</strong>,\n            linebreak: <br />,\n          }\n        )}\n      >\n        {!isProjectAdmin &&\n          t('You do not have the required permission to transfer this project.')}\n\n        {isInternal &&\n          t(\n            'This project cannot be transferred. It is used internally by the Sentry server.'\n          )}\n\n        {isProjectAdmin && !isInternal && (\n          <Confirm\n            onConfirm={this.handleTransferProject}\n            priority=\"danger\"\n            confirmText={t('Transfer project')}\n            renderMessage={({confirm}) => (\n              <div>\n                <TextBlock>\n                  <strong>\n                    {t('Transferring this project is permanent and cannot be undone!')}\n                  </strong>\n                </TextBlock>\n                <TextBlock>\n                  {t(\n                    'Please enter the email of an organization owner to whom you would like to transfer this project.'\n                  )}\n                </TextBlock>\n                <Panel>\n                  <Form\n                    hideFooter\n                    onFieldChange={this.handleTransferFieldChange}\n                    onSubmit={(_data, _onSuccess, _onError, e) => {\n                      e.stopPropagation();\n                      confirm();\n                    }}\n                  >\n                    <TextField\n                      name=\"email\"\n                      label={t('Organization Owner')}\n                      placeholder=\"admin@example.com\"\n                      required\n                      help={t(\n                        'A request will be emailed to this address, asking the organization owner to accept the project transfer.'\n                      )}\n                    />\n                  </Form>\n                </Panel>\n              </div>\n            )}\n          >\n            <div>\n              <Button className=\"ref-transfer-project\" type=\"button\" priority=\"danger\">\n                {t('Transfer Project')}\n              </Button>\n            </div>\n          </Confirm>\n        )}\n      </Field>\n    );\n  }\n\n  renderBody() {\n    const {organization} = this.props;\n    const project = this.state.data;\n    const {orgId, projectId} = this.props.params;\n    const endpoint = `/projects/${orgId}/${projectId}/`;\n    const access = new Set(organization.access);\n    const jsonFormProps = {\n      additionalFieldProps: {\n        organization,\n      },\n      features: new Set(organization.features),\n      access,\n      disabled: !access.has('project:write'),\n    };\n    const team = project.teams.length ? project.teams?.[0] : undefined;\n\n    return (\n      <div>\n        <SettingsPageHeader title={t('Project Settings')} />\n        <PermissionAlert />\n\n        <Form\n          saveOnBlur\n          allowUndo\n          initialData={{\n            ...project,\n            team,\n          }}\n          apiMethod=\"PUT\"\n          apiEndpoint={endpoint}\n          onSubmitSuccess={resp => {\n            this.setState({data: resp});\n            if (projectId !== resp.slug) {\n              changeProjectSlug(projectId, resp.slug);\n              // Container will redirect after stores get updated with new slug\n              this.props.onChangeSlug(resp.slug);\n            }\n            // This will update our project context\n            ProjectActions.updateSuccess(resp);\n          }}\n        >\n          <JsonForm\n            {...jsonFormProps}\n            title={t('Project Details')}\n            fields={[fields.slug, fields.platform]}\n          />\n\n          <JsonForm\n            {...jsonFormProps}\n            title={t('Email')}\n            fields={[fields.subjectPrefix]}\n          />\n\n          <JsonForm\n            {...jsonFormProps}\n            title={t('Event Settings')}\n            fields={[fields.resolveAge]}\n          />\n\n          <JsonForm\n            {...jsonFormProps}\n            title={t('Client Security')}\n            fields={[\n              fields.allowedDomains,\n              fields.scrapeJavaScript,\n              fields.securityToken,\n              fields.securityTokenHeader,\n              fields.verifySSL,\n            ]}\n            renderHeader={() => (\n              <PanelAlert type=\"info\">\n                <TextBlock noMargin>\n                  {tct(\n                    'Configure origin URLs which Sentry should accept events from. This is used for communication with clients like [link].',\n                    {\n                      link: (\n                        <a href=\"https://github.com/getsentry/sentry-javascript\">\n                          sentry-javascript\n                        </a>\n                      ),\n                    }\n                  )}{' '}\n                  {tct(\n                    'This will restrict requests based on the [Origin] and [Referer] headers.',\n                    {\n                      Origin: <code>Origin</code>,\n                      Referer: <code>Referer</code>,\n                    }\n                  )}\n                </TextBlock>\n              </PanelAlert>\n            )}\n          />\n        </Form>\n\n        <Panel>\n          <PanelHeader>{t('Project Administration')}</PanelHeader>\n          {this.renderRemoveProject()}\n          {this.renderTransferProject()}\n        </Panel>\n      </div>\n    );\n  }\n}\n\ntype ContainerProps = {\n  organization: Organization;\n};\n\nconst ProjectGeneralSettingsContainer = createReactClass<ContainerProps>({\n  mixins: [Reflux.listenTo(ProjectsStore, 'onProjectsUpdate') as any],\n\n  changedSlug: undefined,\n\n  onProjectsUpdate() {\n    if (!this.changedSlug) {\n      return;\n    }\n    const project = ProjectsStore.getBySlug(this.changedSlug);\n\n    if (!project) {\n      return;\n    }\n\n    browserHistory.replace(\n      recreateRoute('', {\n        ...this.props,\n        params: {\n          ...this.props.params,\n          projectId: this.changedSlug,\n        },\n      })\n    );\n  },\n\n  render() {\n    return (\n      <ProjectGeneralSettings\n        onChangeSlug={newSlug => (this.changedSlug = newSlug)}\n        {...this.props}\n      />\n    );\n  },\n});\n\nexport default withOrganization(ProjectGeneralSettingsContainer);\n"],"sourceRoot":""}