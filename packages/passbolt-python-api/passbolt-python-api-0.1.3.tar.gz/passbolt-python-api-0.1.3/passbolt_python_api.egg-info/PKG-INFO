Metadata-Version: 2.1
Name: passbolt-python-api
Version: 0.1.3
Summary: A python client for Passbolt.
Home-page: https://github.com/shubhamdipt/passbolt-python-api
Author: Shubham Dipt
Author-email: shubham.dipt@gmail.com
License: MIT License

Copyright (c) 2019 Dr. Shubham Dipt

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

Description: # Passbolt-python-API
        
        ## Installation
        
            $pip install passbolt-python-api 
        
        ## Dependencies
        
          - Python3
          - GPG (also known as GnuPG) software
        
        ## Configuration
        
        Create a config file with the following contents.
        
            [PASSBOLT]
            SERVER = http://<server_ip or domain>
            SERVER_PUBLIC_KEY_FILE = <optional: server_public.asc>
            USER_FINGERPRINT = <user_fingerprint>
            USER_PUBLIC_KEY_FILE = <optional: passbolt_public.asc>
            USER_PRIVATE_KEY_FILE = <optional: passbolt_private.asc>
            PASSPHRASE = <passbolt_password>
        
        ## Usage
        
            >>>import passboltapi
            >>>passbolt = passboltapi.PassboltAPI(config_path="config.ini")
            
            # Now you may do any get, post, put and delete request.
            >>>r = passbolt.get(url="/resources.json?api-version=v2")
            >>>r = passbolt.post(self.server_url + url, json=data)
            
            # One can also use it as context manager
            >>>with passboltapi.PassboltAPI(config_path="config.ini") as passbolt:
        
        Check test.py for an example.
        
        If new keys needs to be imported, then USER_PUBLIC_KEY_FILE and USER_PRIVATE_KEY_FILE settings
        should be in the config ini having the path of the public and private keys file respectively.
        
        To import new keys:
        
            >>>import passboltapi
            >>>passbolt = passboltapi.PassboltAPI(config_path="config.ini", new_keys=True)
            
        To delete old keys and import only the new ones.
        
            >>>import passboltapi
            >>>passbolt = passboltapi.PassboltAPI(config_path="config.ini", new_keys=True, delete_old_keys=True)
        
        Recommended to do: Do not keep private and public files. 
        Rather just import them using gpg command one time and delete those files.
        
            $gpg --import public.asc
            $gpg --batch --import private.asc
        
        For deleting gpg keys
        
            $gpg --delete-secret-keys <fingerprint>
            $gpg --delete-key <fingerprint>
        
        
        ### Passbolt API
        
        For more API related questions, visit Passbolt API documentation:
        
        <https://help.passbolt.com/api>
        
Platform: any
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Description-Content-Type: text/markdown
