Metadata-Version: 2.1
Name: pyinfluxql
Version: 0.1.3
Summary: A query generator for the SQL dialect of the Influx Query Language (InfluxQL)
Home-page: https://github.com/daq-tools/pyinfluxql
Author: Jeremiah Malina <me@jerem.io>, Michael Pérez <mpuhrez@gmail.com>
Author-email: me@jerem.io
Maintainer: Andreas Motl
Maintainer-email: andreas.motl@getkotori.org
License: MIT
Description: ##########
        PyInfluxQL
        ##########
        
        .. image:: https://github.com/daq-tools/pyinfluxql/workflows/Tests/badge.svg
            :target: https://github.com/daq-tools/pyinfluxql/actions?workflow=Tests
        
        .. image:: https://img.shields.io/pypi/pyversions/pyinfluxql.svg
            :target: https://python.org
        
        .. image:: https://img.shields.io/pypi/v/pyinfluxql.svg
            :target: https://pypi.org/project/pyinfluxql/
        
        .. image:: https://img.shields.io/pypi/dm/pyinfluxql.svg
            :target: https://pypi.org/project/pyinfluxql/
        
        .. image:: https://img.shields.io/pypi/status/pyinfluxql.svg
            :target: https://pypi.org/project/pyinfluxql/
        
        .. image:: https://img.shields.io/pypi/l/pyinfluxql.svg
            :target: https://pypi.org/project/pyinfluxql/
        
        
        *****
        About
        *****
        A query generator for the SQL dialect of the `Influx Query Language (InfluxQL)`_.
        Like SQLAlchemy but for InfluxDB. Consider this an experimental WIP.
        
        .. _Influx Query Language (InfluxQL): https://docs.influxdata.com/influxdb/v1.8/query_language/
        
        
        ********
        Synopsis
        ********
        .. code-block:: python
        
            from influxdb import InfluxDBClient
            from pyinfluxql import Engine, Query, Mean
        
            client = InfluxDBClient('localhost', 8086, 'root', 'root', 'example')
            engine = Engine(client)
            query = Query(Mean('value')).from_('cpu_load') \
                .where(time__gt=datetime.now() - timedelta(1))
                .group_by(time=timedelta(hours=1))
            engine.execute(query)
        
        
        *****
        Tests
        *****
        How to invoke the test suite.
        
        Using Tox
        =========
        Run InfluxDB within Docker::
        
            docker run -it --rm --publish 8086:8086 influxdb:1.8.3
        
        Run ``tox``::
        
            tox
        
        
        Using sandbox
        =============
        Alternatively, setup package in development mode::
        
            python3 -mvenv .venv
            source .venv/bin/activate
            pip install --editable=.[test]
        
        Run ``pytest``::
        
            pytest tests -vvv
        
        
        *******
        Credits
        *******
        Thanks a stack to the original author `Jeremiah Malina`_ for his excellent
        work as well as `Michael Pérez`_ for adding integration tests, timezone support
        and for improving the documentation.
        
        
        .. _Jeremiah Malina: https://github.com/jjmalina
        .. _Michael Pérez: https://github.com/puhrez
        
Keywords: influxdb influxql sql query generator acquisition graphing export engine
Platform: any
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: Environment :: Web Environment
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Education
Classifier: Intended Audience :: Information Technology
Classifier: Intended Audience :: Manufacturing
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: System Administrators
Classifier: Intended Audience :: Telecommunications Industry
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Topic :: Communications
Classifier: Topic :: Database
Classifier: Topic :: Internet
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Scientific/Engineering :: Atmospheric Science
Classifier: Topic :: Scientific/Engineering :: GIS
Classifier: Topic :: Scientific/Engineering :: Human Machine Interfaces
Classifier: Topic :: Scientific/Engineering :: Information Analysis
Classifier: Topic :: Scientific/Engineering :: Interface Engine/Protocol Translator
Classifier: Topic :: Scientific/Engineering :: Visualization
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: System :: Archiving
Classifier: Topic :: System :: Networking :: Monitoring
Classifier: Topic :: Text Processing
Classifier: Topic :: Utilities
Classifier: Operating System :: POSIX
Classifier: Operating System :: Unix
Classifier: Operating System :: MacOS
Provides-Extra: test
